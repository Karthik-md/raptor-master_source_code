
Inhalt: e des VHB-Kurses Programmierung in C+ +. 8Integration in curriculum no Integration in curriculum available! 9Module compatibilityWahlpflichtbereich Informatik Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013 10 Method of examination Written examination (60 minutes) 11Grading procedure Written examination (100%) 12 Module frequency Every semester 13Workload in clock hoursContact hours: 0 h Independent study: 75 h 14 Module duration 1 semester 15Teaching and examination languagegerman english 16 Bibliography 




































Berechnung der Modulnote: : 100.0 % 11Grading procedure Oral (100%) 12 Module frequency Only in summer semester 13Workload in clock hoursContact hours: 40 h Independent study: 110 h 14 Module duration 1 semester 15Teaching and examination languagegerman 16 Bibliography 



Inhalt: der Vorlesung besteht aus zahlreichen fortgeschrittenen C+ +-Themen, die ausgerichtet sind auf die richtige und effiziente Nutzung von C++ für eine professionelle Softwareentwicklung. The content of the lecture will consist of various topics of advanced C+ + programming, aimed at teaching the proper and efficient usage of C++ for professional software development. These are basic language concepts, the newer standards (starting from C++11), object oriented programming in C++, static and dynamic polymorphism, template metaprogramming, and C++ idioms and design patterns. A good preparation for the lecture is the C++ primer book from S. Lippman et al. One should at least have several hundred hours of programming experience in C/C++ or any related object oriented programming language. Knowledge of basic concepts like pointers, references, inheritance and polymorphism is required. 6Learning objectives and skillsFachkompetenz Wissen Lernende können die grundlegenden Sprachkonstrukte in den verschiedenen C++ Standards wiedergeben. Students know the basic language constructs from different C++ standards. Verstehen Lernende verstehen das C++ Objektmodell und können es mit anderen Programmiersprachen vergleichen. Students understand the C++ object model and are able to compare it to other programming languages. Anwenden Lernenden können Standardalgorithmen in einer objektorientierten Programmiersprache implementieren. Students can implement standard algorithms in an object oriented programming language. Analysieren Lernende können gängige Design Patterns klassifizieren und deren Anwendbarkeit für bestimmte Probleme diskutieren. Students are able to classify common design patterns and to discuss their usability for certain problems. Evaluieren (Beurteilen) 




















Inhalt: e auf und setzt diese mit weiterführenden Themen fort. Es werden zunächst grundlegende fortgeschrittene Techniken bei Pipelineverarbeitung und Cachezugriffen in modernen Prozessoren und Parallelrechnern behandelt. Ferner wird die Architektur von Spezialprozessoren, z.B. DSPs und Embedded Prozessoren behandelt. Es wird aufgezeigt, wie diese Techniken in konkreten Architekturen (Intel Nehalem, GPGPU, Cell BE, TMS320 DSP, Embedded Prozessor ZPU) verwendet werden. Zur Vorlesung wird eine Tafelübung angeboten. Mit erfolgreicher mündlicher Prüfung können 5 ECTS erworben werden. In den Tafelübungen werden die in der Vorlesung vermittelten Techniken durch zu lösende Aufgaben vertieft. In der Rechnerübung soll u.a. ein einfacher Vielkern-Prozessor auf Basis des ZPU-Prozessors mit Simulationswerkzeugen aufgebaut werden. Im Einzelnen werden folgende Themen behandelt: •Organisationsaspekte von CISC und RISC-Prozessoren •Behandlung von Hazards in Pipelines •Fortgeschrittene Techniken der dynamischen Sprungvorhersage •Fortgeschritten Cachetechniken, Cache-Kohärenz •Ausnutzen von Cacheeffekten •Architekturen von Digitalen Signalprozessoren •Architekturen homogener und heterogener Multikern- Prozessoren (Intel Corei7, Nvidia GPUs, RISC-V) •Architektur von Parallelrechnern (Clusterrechner, Superrechner) •Effiziente Hardware-nahe Programmierung von Mulitkern- Prozessoren (OpenMP, SSE, CUDA) •Leistungsmodellierung und -analyse von Multikern- Prozessoren (Roofline-Modell) 6Learning objectives and skillsFachkompetenz Wissen Lernende können Wissen abrufen und wiedergeben. Sie kennen konkrete Einzelheiten wie Begriffe, Definitionen, Fakten, und Abläufe in einem Prozessor darlegen. Verstehen Lernende können Beispiele für Rechnerarchitekturen anführen, sie sind in der Lage, Schaubilder von Prozessoren zu interpretieren und die Abläufe in eigenen Worten zu beschreiben. Anwenden 





Inhalt: e auf und setzt diese mit weiterführenden Themen fort. Es werden zunächst grundlegende fortgeschrittene Techniken bei Pipelineverarbeitung und Cachezugriffen in modernen Prozessoren und Parallelrechnern behandelt. Ferner wird die Architektur von Spezialprozessoren, z.B. DSPs und Embedded Prozessoren behandelt. Es wird aufgezeigt, wie diese Techniken in konkreten Architekturen (Intel Nehalem, GPGPU, Cell BE, TMS320 DSP, Embedded Prozessor ZPU) verwendet werden. Zur Vorlesung werden eine Tafel- und eine Rechnerübung angeboten. Die Rechnerübung erfodert 11 erfolgreich abgeschlossene Übungsaufgaben, diese gehen mit 10% in die Modulgesamtnote ein. Die verbleibenden 90% werden durch die mündliche Prüfung bestimmt. Insgesamt werden 7,5 ECTS erworben. In den Tafelübungen werden die in der Vorlesung vermittelten Techniken durch zu lösende Aufgaben vertieft. In der Rechnerübung soll u.a. ein einfacher Vielkern-Prozessor auf Basis des ZPU-Prozessors mit Simulationswerkzeugen aufgebaut werden. Im Einzelnen werden folgende Themen behandelt: •Organisationsaspekte von CISC und RISC-Prozessoren •Behandlung von Hazards in Pipelines •Fortgeschrittene Techniken der dynamischen Sprungvorhersage •Fortgeschritten Cachetechniken, Cache-Kohärenz •Ausnutzen von Cacheeffekten •Architekturen von Digitalen Signalprozessoren •Architekturen homogener und heterogener Multikern- Prozessoren (Intel Corei7, Nvidia GPUs, RISC-V) •Architektur von Parallelrechnern (Clusterrechner, Superrechner) •Effiziente Hardware-nahe Programmierung von Mulitkern- Prozessoren (OpenMP, SSE, CUDA) •Leistungsmodellierung und -analyse von Multikern- Prozessoren (Roofline-Modell) 6Learning objectives and skillsFachkompetenz Wissen Lernende können Wissen abrufen und wiedergeben. Sie können konkrete Einzelheiten wie Begriffe, Definitionen, Fakten, und Abläufe in einem Prozessor darlegen. Verstehen 
















Inhalt: ab. Methoden und Systeme aus "Photonik 2" werden eingesetzt z.B. für die Präzisionsmesstechnik, in der industriellen Materialbearbeitung, in der Bioanalytik, für die Medizintechnik, in Geräten der Unterhaltungselektronik oder in der optischen Nachrichtentechnik. 6Learning objectives and skillsDie Studierenden •besitzen spezialisiertes und vertieftes Wissen über Laser und den in den Inhalten beschriebenen photonischen Systemen und Methoden. 

Inhalt: beschriebenen fortgeschrittenen Methoden der Photonik erklären und anwenden. •können technische und wissenschaftliche Anwendungen dieser photonischen Systeme diskutieren, beurteilen und vergleichen. •sind in der Lage, derartige photonische Systeme zu konzipieren und zu entwickeln. •können eigenständige Ideen und Konzepte zur Lösung wissenschaftlicher und beruflicher Probleme der Photonik entwickeln. 7Prerequisites•Photonik 1 oder vergleichbare Grundlagen der Photonik und Lasertechnik. 8Integration in curriculum semester: 1 9Module compatibilityComputational Optics Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013 10 Method of examination Written or oral 11Grading procedure Written or oral (100%) 12 Module frequency Only in summer semester 13Workload in clock hoursContact hours: 60 h Independent study: 90 h 14 Module duration 1 semester 15Teaching and examination languagegerman 16 BibliographyEichler, J., Eichler, H.J: Laser. Springer Verlag, Berlin 2006. Reider, G.A.: Photonik. 2. Auflage, Springer Verlag, Berlin 2005. Bergmann, Schäfer: Lehrbuch der Experimentalphysik, Bd.3: Optik. DeGruyter 1993. Demtröder, W: Laserspektroskopie. Springer Verlag, Berlin 2000. 















































Inhalt: e oben aufgeführt. Die Studierenden definieren die Problematik der Kanalcodierung, grenzen sie von anderen Codierverfahren (z.B. der Quellencodierung) ab und kennzeichnen die unterschiedlichen Ansätze zur Fehlerkorrektur und -erkennung. Sie nennen Beispiele für Einsatzgebiete von Kanalcodierung und geben einen Überblick über die historische Entwicklung des Fachgebiets. Die Studierenden erstellen Übertragungsszenarien für den Einsatz von Kanalcodierung bestehend aus Sender, Übertragungskanal und Empfänger und beachten dabei die Grundannahmen beim Einsatz von Blockcodes bzw. der Modellierung der Kanäle. Sie formulieren mathematische Beschreibungen der Encodierung sowie der optimalen Decodierung bzw. suboptimaler Varianten. Die Studierenden beherrschen die Grundlagen fehlerkorrigierender linearer Blockcodes, beschreiben diese mathematisch korrekt mittels Vektoren und Matrizen über endlichen Körpern und implementieren und bewerten zugehörige Encoder- und Decoderstrukturen insbesondere Syndromdecoder. Dabei modifizieren sie Generatormatrizen, ermitteln Prüfmatrizen und erstellen Syndromtabellen. Sie schätzen die minimale Hammingdistanz von Codes mittels Schranken ab und können den erzielbaren Codegewinn erläutern. Sie kennen und benutzen beispielhaften Codefamilien (z.B. Hamming-Codes, Simplex-Codes, Reed-Muller-Codes). Die Studierenden erkennen die Vorteile zyklischer linearer Blockcodes und beschreiben diese mit Polynomen über endlichen Körpern. Sie nutzen die Restklassenrechnung bzgl. Polynomen zur Umsetzung systematischer Encoder und zur Realisierung von Syndromdecodern 










Inhalt: : •Kurze, in sich geschlossene Einführung in die Finite- Elemente-Methode in einer und zwei Dimensionen für lineare Wärmeübertragung und mechanische Probleme •Algorithmen zur Lösung parabolischer Probleme (transiente Wärmeleitung) •Algorithmen zur Lösung hyperbolischer Probleme (Elastodynamik) •Stabilitätsanalyse der oben genannten Algorithmen •Lösungstechniken für Eigenwertprobleme Contents •Brief, but self-contained, introduction to the finite element method in one- and two-dimensions for linear heat transfer and mechanics problems •Algorithms for solving parabolic problems (transient heat conduction) •Algorithms for solving hyperbolic problems (elastodynamics) •Stability analysis of the above algorithms •Solution techniques for eigenvalue problems 6Learning objectives and skillsDie Studierenden •sind vertraut mit der grundlegenden Idee der linearen Finiten Element Methode •können für eine gegebene zeitabhängige Differentialgleichung die schwache und diskretisierte Form aufstellen •können Bewegungsgleichungen modellieren •können dynamischen Wärmeleitungsprobleme modellieren •können dynamische Probleme der Kontinuumsmechanik modellieren •kennen direkte Zeitintegrationsmethoden •sind vertraut mit Eigenwertproblemen und Stabilitätsanalyse verschiedener Zeitintegrationsmethoden •können zeitabhängige Differentialgleichungen lösen The students •are familiar with the basic idea of the linear finite element method 






























































Inhalt: Im Rahmen der Vorlesung werden (a) die Grundlagen der Generation von wichtigen Biosignalen im menschlichen Körper, (b) die Messung von Biosignalen und (c) Methoden zur Analyse von Biosignalen erläutert und dargestellt. Behandelte Biosignale sind unter anderem Aktionspotential (AP), Elektrokardiogramm (EKG), Elektromyogramm (EMG), Elektroenzephalogramm (EEG), oder Mechanomyogramm (MMG). Bei der Messung liegt der Fokus beispielsweise auf der Messtechnik oder der korrekten Sensor- bzw. Elektrodenanbringung. Im größten Teil der Vorlesung, Analyse von Biosignalen, werden Konzepte zur Filterung für die Artefaktreduktion, der Wavelet Analyse, der Ereigniserkennung und der Wellenformanalyse behandelt. Zum Schluss wird einen Einblick in überwachte Verfahren der Mustererkennung gegeben. Für weitere Informationen, besuchen Sie bitte unseren zugehörigen StudOn Kurs. Content The lecture content explains and outlines (a) basics for the generation of important biosignals of the human body, (b) measurement of biosignals, and (c) methods for biosignals analysis. Considered biosignals are among others action potential (AP), electrocardiogram (ECG), electromyogram (EMG), electroencephalogram (EEG), or mechanomyogram (MMG). The focus during the measurement part is for example the measurement technology or the correct sensor and electrode placement. The main part of the lecture is the analysis part. In this part, concepts like filtering for artifact reduction, wavelet analysis, event detection or waveform analysis are covered. In the end, an insight into pattern recognition methods is obtained. For more information, please visit our associated StudOn course 6Learning objectives and skillsDie Studierenden können nach erfolgreichem Abschluss des Kurses Fachkompetenz Wissen •die Entstehung, Messung und Charakteristika der wichtigsten Biosignale des menschlichen Körpers wiedergeben Verstehen 










Inhalt: e •Anwendungen optischer Messmethoden im Bereich der Zellbiologie und Medizin •Mikroskopie: Grundlegende Konzepte und Kontrastverfahren, Auflösungsvermögen und Grenzen, Aufbau und Komponenten von Lichtmikroskopen, Fluoreszenz-Mikroskopie •Anwendungen von Fluoreszenz-Mikroskopie im Life Science Bereich, Verfahren zur Markierung biologischer Strukturen und Vorgänge in Zellen •Epifluoreszenz-, Konfokal-, Multiphotonen-Mikroskopie, Konzepte und Anwendungsbeispiele •Optische Endoskopie und Endomikroskopie in Forschung und Klinik •Super-Resolution Mikroskopie, Konzepte und Anwendungsbeispiele für optische Bildgebung jenseits der beugungsbedingten Auflösungsgrenze Content •Application of optical methods in the field of cell biology and medicine •Microscopy: Basic concepts, methods to enhance contrast, optical resolution and limits, components and setup of light microscopes, fluorescence microscopy •Applications of fluorescence microscopy in life sciences, methods for labeling of biological structures and cellular processes´ •Epi-fluorescence, confocal and multiphoton microscopy, concepts and application examples •Optical endoscopy and endomicroscopy in research and clinics •Super-resolution microscopy, concepts and applications for optical Imaging beyond the diffraction Limit of Resolution 6Learning objectives and skillsLernziele und Kompetenzen Die Studierenden •verstehen die grundlegenden Konzepte und technische Umsetzung optischer Technologien im Bereich Life Sciences und kennen typische Anwendungsbeispiele •können verschiedene technische Ansätze im Hinblick auf wissenschaftlich Fragestellungen vergleichen und bewerten 
Lernziele und Kompetenzen: Die Studierenden •verstehen die grundlegenden Konzepte und technische Umsetzung optischer Technologien im Bereich Life Sciences und kennen typische Anwendungsbeispiele •können verschiedene technische Ansätze im Hinblick auf wissenschaftlich Fragestellungen vergleichen und bewerten 



Inhalt: e der Vorlesung vertiefen. 6Learning objectives and skillsDie Studierenden •besitzen spezialisiertes und vertieftes Wissen der medizintechnische Anwendungen der Photonik, insbesondere der im Inhalt genannten Themengebiete. •können technische und wissenschaftliche Anwendungen der Photonik diskutieren, beurteilen und vergleichen. •sind in der Lage, ihre theoretischen Kenntnisse zur Photonik und Lasertechnik im Bereich der Medizintechnik vergleichend einzusetzen und so neue Verfahren und Konzepte zu entwickeln und auszuarbeiten. •können eigenständige Ideen und Konzepte zur Lösung wissenschaftlicher und technischer Probleme der Medizintechnik mit photonischen Systemen entwickeln. 7Prerequisites *Voraussetzungen:* 




















































Inhalt: sowie Aufbau und die wissenschaftliche Darstellung einer wissenschaftlichen Ausarbeitung zu verinnerlichen, •und die eigene Kognition und Kreativität in der Ausarbeitung zu bewerten. 7Prerequisites None 8Integration in curriculum no Integration in curriculum available! 9Module compatibilitySeminar im Masterstudium Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013 10 Method of examination Seminar achievement 11Grading procedure Seminar achievement (100%) 12 Module frequency Only in winter semester 13Workload in clock hoursContact hours: 30 h Independent study: 120 h 14 Module duration 1 semester 15Teaching and examination languageenglish 16 Bibliography•G. Goodfellow und Y. Bengio und A. C. Courville: Deep Learning, mitp-Verlag, 2015 •R. S. Sutton und A. G. Barto: Reinforcement Learning: An Introduction, MIT Press, 1998 •F. V. Jensen: An Introduction To Bayesian Networks, Springer, 1996 •R. Rojas: Theorie der neuronalen Netze - eine systematische Einführung, Springer, 1993 








Inhalt: e auf dem Gebiet modernster Multi-/Many-Core Architectures und deren Programmierung vor. •Analysieren: Die Studierenden erproben Programmierparadigmen für Mehrkernarchitekturen. •Erschaffen: Die Studierenden planen, entwickeln und evaluieren eigenständig parallele Anwendungen. Lern- bzw. Methodenkompetenz •Die Studierenden arbeiten sich selbstständig in ein bis zwei wissenschaftliche Veröffentlichungen ein und suchen hierbei selbstständig nach verwandten Arbeiten, um den Kontext der Veröffentlichung zu verstehen und aufzubereiten. Selbstkompetenz •Die Studierenden können eigene Stärken und Schwächen, sowohl im Bereich ihrer Präsentationstechniken als auch der Team-Arbeit, reflektieren und die eigene Entwicklung planen. Sozialkompetenz 



Inhalt: e einer ausgewählten wissenschaftlichen Veröffentlichung auf dem Gebiet der MPSoCs vor. •Die Studierenden veranschaulichen den grundlegenden Kontext der Veröffentlichung sowie deren wesentliche Neuerungen. •Die Studierenden bereiten den Inhalt der ausgewählten wissenschaftlichen Veröffentlichung sowie benötigte Grundlagen in einer Ausarbeitung auf. Lern- bzw. Methodenkompetenz •Die Studierenden arbeiten sich selbstständig in eine wissenschaftliche Veröffentlichung ein und suchen hierbei selbstständig nach verwandten Arbeiten, um den Kontext der Veröffentlichung zu verstehen und aufzubereiten. Sozialkompetenz 



Inhalt: e klar und zielgruppengerecht präsentieren und eigene Standpunkte in einer Fachdiskussion argumentativ vertreten. 7Prerequisites None 8Integration in curriculum no Integration in curriculum available! 9Module compatibilitySeminar im Masterstudium Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013 10 Method of examination Seminar achievement 11Grading procedure Seminar achievement (100%) 12 Module frequency Only in summer semester 13Workload in clock hoursContact hours: 60 h Independent study: 90 h 14 Module duration 1 semester 15Teaching and examination languagegerman 16 Bibliography
