
Lecturers: Prof. Dr. Harald Köstler  
Module coordinator: 5
Contents: Der Kurs vermittelt neuere Sprachkonstrukte der C++ Programmiersprache (C++11 Standard und später). Konkret werden folgende Themenbereiche behandelt: Type deduction and initialization syntax, Lambda expressions, extended object-oriented features, smart pointer, extended standard library, templates, C++20 standard.
Learning objectives and skills: Fachkompetenz Wissen Die Studierenden sollen grundlegende Begriffe der C++ Programmiersprache definieren können. Verstehen Die Studierenden sollen verschiedene neuere Sprachkonstrukte wiedergeben können. Anwenden Die Studierenden sollen mit Hilfe von neueren Sprachkonstrukten Aufgaben lösen. Evaluieren (Beurteilen) Die Studierenden sollen selbständig anhand des C++ Sprachstandards und Codebeispielen neuere Sprachkonstrukte verstehen und beurteilen können.
Module compatibility: Wahlpflichtbereich Informatik Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Written examination (60 minutes)
Grading procedure: Written examination (100%)
Module frequency: every semester 13Workload in clock hoursContact hours: 0 h Independent study: 75 h 14 Module duration 1 semester 15Teaching and examination languagegerman 16 Bibliography no Bibliography information available! 
Workload in clock hours: Contact hours: 0 h Independent study: 75 h
Module duration: 1 semester
Teaching and examination language: german
Bibliography: no Bibliography information available! 

, Module name 465562: Advanced Programming Techniques Advanced programming techniques (lecture and exercises)7,5 ECTS
Course / lectures: Vorlesung mit Übung: Advanced Programming Techniques (4 SWS )5 ECTS Übung : Exercises for Advanced Programming Techniques (2 SWS )2,5 ECTS
Lecturers: Prof. Dr. Harald Köstler  
Module coordinator: Prof. Dr. Harald Köstler
Contents: Der Inhalt der Vorlesung besteht aus zahlreichen fortgeschrittenen C+ +-Themen, die ausgerichtet sind auf die richtige und effiziente Nutzung von C++ für eine professionelle Softwareentwicklung. The content of the lecture will consist of various topics of advanced C+ + programming, aimed at teaching the proper and efficient usage of C++ for professional software development. These are basic language concepts, the newer standards (starting from C++11), object oriented programming in C++, static and dynamic polymorphism, template metaprogramming, and C++ idioms and design patterns. A good preparation for the lecture is the C++ primer book from S. Lippman et al. One should at least have several hundred hours of programming experience in C/C++ or any related object oriented programming language. Knowledge of basic concepts like pointers, references, inheritance and polymorphism is required.
Learning objectives and skills: Fachkompetenz Wissen Lernende können die grundlegenden Sprachkonstrukte in den verschiedenen C++ Standards wiedergeben. Students know the basic language constructs from different C++ standards. Verstehen Lernende verstehen das C++ Objektmodell und können es mit anderen Programmiersprachen vergleichen. Students understand the C++ object model and are able to compare it to other programming languages. Anwenden Lernenden können Standardalgorithmen in einer objektorientierten Programmiersprache implementieren. Students can implement standard algorithms in an object oriented programming language. Analysieren Lernende können gängige Design Patterns klassifizieren und deren Anwendbarkeit für bestimmte Probleme diskutieren. Students are able to classify common design patterns and to discuss their usability for certain problems. Evaluieren (Beurteilen) 

Prerequisites: None
Module compatibility: Wahlpflichtbereich Informatik Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Portfolio (60 minutes)
Grading procedure: Portfolio (100%)
Workload in clock hours: Contact hours: 60 h Independent study: 165 h
Module duration: 1 semester
Teaching and examination language: english
Bibliography: •S. Lippman: C++ Primer, Addison-Wesley •S. Meyers: Effective C++ Third Edition, Addison-Wesley •H. Sutter: Exceptional C++, Addison-Wesley 

, Module name 96837: A look inside the human body - gait analysis and simulation2,5 ECTS
Course / lectures: Vorlesung: A look inside the human body - gait analysis and simulation (2 SWS )2,5 ECTS
Lecturers: Prof. Dr. Anne Koelewijn  
Module coordinator: Prof. Dr. Anne Koelewijn
Contents: The aim of this lecture is to teach methods of gait analysis and simulation. Gait analysis experiments will be covered, as well as more modern approaches to gather walking data. Techniques to process gait analysis experiments are discussed, as well as dynamic models that can be used to create gait simulations. This lecture addresses the following topics: •Measurement systems for gait analysis •Methods to calculate joint kinetics and kinematics from experimental data •Muscle biology, specific to force generation, and modelling of muscles •Methods to calculate muscle activation from experimental data •Energetics of walking •Multibody dynamics •Creating simulations of gait
Learning objectives and skills: Learning objectives: •Be familiar with the existing measurement options for gait analysis •Know state-of-the art techniques to process gait analysis experiments •Select an appropriate processing technique for a specific experiment •Understand how gait could be simulated and where these simulations could be applied •Know the function of the different components of the human body that are involved in locomotion
Prerequisites: None
Module compatibility: Wahlpflichtbereich Informatik Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Variable
Grading procedure: Variable (100%)
Module frequency: only in winter semester 13Workload in clock hoursContact hours: 30 h Independent study: 45 h 14 Module duration 1 semester 15Teaching and examination languageenglish 
Workload in clock hours: Contact hours: 30 h Independent study: 45 h
Module duration: 1 semester
Teaching and examination language: english 

Bibliography: •Winter, David A. Biomechanics and motor control of human movement. John Wiley & Sons, 2009. •Kelly, Matthew. "An introduction to trajectory optimization: How to do your own direct collocation." SIAM Review 59.4 (2017): 849-904. 

, Module name 57025: Praktische Softwaretechnik Applied software engineering5 ECTS
Course / lectures: Vorlesung: Praktische Softwaretechnik (4 SWS ) 5 ECTS
Lecturers: Ralf Ellner Dr.Ing. Christoph Erhardt  
Module coordinator: Prof. Dr. Bernd Hindel Prof. Dr. Detlef Kips Prof. Dr. Dirk Riehle
Learning objectives and skills: Die Studierenden •verstehen den Unterschied zwischen "Programmieren im Kleinen" und "Programmieren im Großen" (Softwaretechnik) •wenden grundlegende Methoden der Softwaretechnik über den gesamten Projekt- und Produktlebenszyklus an •kennen die Rolle und Zuständigkeiten der Berufsbilder "Projektleiter", "Anforderungsermittler", "Softwareentwickler" und "Qualitätssicherer"
Prerequisites: None

Module compatibility: Wahlpflichtbereich Informatik Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Written examination (90 minutes)
Grading procedure: Written examination (100%)
Workload in clock hours: Contact hours: 60 h Independent study: 90 h
Module duration: 1 semester
Teaching and examination language: german
Bibliography: siehe http://goo.gl/JSoUbV 

, Module name 44460: Architekturen von Superrechnern Architectures of supercomputers5 ECTS
Lecturers: Jonas Schmitt Shima Hosseinzadeh Foroushani Philipp Suffa Prof. Dr.-Ing. Dietmar Fey  
Module coordinator: 5
Contents: •Principles of computer and processor architectures •Modern processor architectures •Homogeneous and heterogeneous multi/many-core processors •Parallel computer architectures •Classification and principles of coupling parallel computers •High speed networks in supercomputers •Examples of supercomputers •Programming of supercomputers
Learning objectives and skills: Fachkompetenz Wissen Lernende können die Funktionsweise moderner in Superrechnern eingesetzter Prozessoren wiedergeben. Sie erkennen die besonderen Probleme im Zusammenahng mit dem Ernergieverbrauch und der Programmierung von Superrechnern. Verstehen Lernende können die Unterschiede bei der Kopplung paralleler Prozesse darstellen. Sie können Parallelrechner hinsichtlich ihrer Speicheranbindung und den grundlegenden Verarbeitungsprinzipien klassifizieren. Anwenden Lernenden sind in der Lage ein eigenes technisches oder mathematisches Problem zur Lösung auf einem Supercomputer umzusetzen und auszuführen. Anhand der in der Vorlesung gezeigten Beispiele sind sie in der Lage, Herausforderungen beim Auffinden von Flaschenhälsen zu verallgemeinern und für ihr konkretes Problem anzuwenden. Analysieren Lernende sind in der Lage, ihre Problemstellungen, z.B. naturwissenschaftliche oder technische Simulationsexperimente, hinsichtlich der Rechen- und Speicheranforderungen für einen Supercomputer geeignet für die Architekur zu charakterisieren. Evaluieren (Beurteilen) Lernende können mithilfe der aufgezeigten Methodiken zur Leistungsmesung von Parallerechnern unterschiedliche 

Prerequisites: None
Module compatibility: Wahlpflichtbereich Informatik Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Written (30 minutes)
Grading procedure: Written (100%)
Module frequency: only in winter semester 13Workload in clock hoursContact hours: 120 h Independent study: 30 h 14 Module duration 1 semester 15Teaching and examination languageenglish 16 Bibliography no Bibliography information available! 
Workload in clock hours: Contact hours: 120 h Independent study: 30 h
Module duration: 1 semester
Teaching and examination language: english
Bibliography: no Bibliography information available! 

, Module name 313638: Automotive Systems and Software Engineering Automotive systems and software engineering5 ECTS
Lecturers: Dr.-Ing. Anatoli Djanatliev Thomas Reiß Christian Allmann  
Module coordinator: Prof. Dr. Reinhard German
Contents: Allgemein: •Überblick Systeme und Anwendungen in der automotive Welt •Embedded Automotive Systems: Abgrenzung Echtzeitsysteme; Definition Steuergeräte, Sensoren, Aktuatoren; Definition verteilte, vernetzte Funktionen; Betriebssysteme, Kommunikationsschnittstellen •Entwicklungsprozesse für automotive Anwendungen: Allgemeine Vorgehensmodelle; Vorgehensmodelle in der Elektronikentwicklung; Kooperationsmodelle OEM-Zulieferer; Lieferantenmanagement System und Software: •Softwareentwicklungsprozess •Anforderungsmanagement: Lastenhefte - Aufbau/ Handhabung/Tools; Erhebung und Analyse von Anforderungen; Systembeschreibungen (u.a. UML, SysML); (Semi-)Formale Beschreibungen •Modellbasierte Entwicklung: Rapid Prototyping; Modellierungstechniken; Automatische Codegenerierung; Tools (Simulink, Target Link); Autosar •Test und Diagnose: SW-Test; Integrationsstufen; SIL - PIL - HIL-Test; On- Offboard Diagnose •Virtuelle Entwicklung von Elektronik •Begleitende Prozesse: Projektmanagement; Systemsicherheit (ISO WD 26262); Konfigurationsmanagement; Qualitätsmanagement; Variantenmanagement •Architektur: Architekturmodelle (u.a. EAST-ADL); Bussysteme - Typen & Eigenschaften; SW- & HW-Architektur; Auslegung und Bewertung Anwendung: •Überblick der Anwendungsdomänen: Infotainment/ Fahrerassistenz/ Karosserie •Systemauslegung von Fahrerassistenzsystemen: Überblick Sensoren; Umwelt und Umfeldmodelle; Bildverarbeitung; Konzeption, Erprobung, Umsetzung; Tools (ADTF) •Alternative Antriebskonzepte: Elektronikumfänge; Betriebsstrategie •Fahrdynamische Systeme: x-by-wire Technologien
Learning objectives and skills: Die Studierenden vertiefen die Themen aus anderen Lehrveranstaltung im Bereich Automotive. Sie lernen mit Herausforderungen in 

Prerequisites: None
Module compatibility: Wahlpflichtbereich Informatik Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Oral
Grading procedure: Oral (100%)
Module frequency: only in summer semester 13Workload in clock hoursContact hours: 40 h Independent study: 110 h 14 Module duration 1 semester 15Teaching and examination languagegerman 16 Bibliography no Bibliography information available! 
Workload in clock hours: Contact hours: 40 h Independent study: 110 h
Module duration: 1 semester
Teaching and examination language: german
Bibliography: no Bibliography information available! 

, Module name 768903: Computational Optics CE and MAOT Computational optics CE and MAOT7,5 ECTS
Lecturers: Souryadeep Saha Prof. Dr. Christoph Pflaum  
Module coordinator: Prof. Dr. Christoph Pflaum
Contents: Simulation optischer Wellen Finite-Differenzen-Methode zur Lösung der Maxwellschen Gleichungen Strahl-Propagations-Methoden Ratengleichungen für Photonen Anwendung im Bereich der Simulation von Lasern und Dünnschichtsolarzellen
Learning objectives and skills: Fachkompetenz Anwenden Anwendung unterschiedlicher Simulationstechniken in der Optik Analysieren Analyse der Stabilität von Simulationstechniken Erschaffen Entwicklung von Software zur Simulation von optischen Wellen
Prerequisites: None
Module compatibility: Wahlpflichtbereich Informatik Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Oral
Grading procedure: Oral (100%)
Module frequency: only in summer semester 13Workload in clock hoursContact hours: 75 h Independent study: 150 h 14 Module duration 1 semester 15Teaching and examination languagegerman 16 Bibliography no Bibliography information available! 
Workload in clock hours: Contact hours: 75 h Independent study: 150 h
Module duration: 1 semester
Teaching and examination language: german
Bibliography: no Bibliography information available! 

, Module name 798810: Rechnerarchitektur Computer architecture5 ECTS
Course / lectures: Vorlesung: Rechnerarchitektur (2 SWS ) 2,5 ECTS Übung : Übungen zu Rechnerarchitektur (2 SWS ) 2,5 ECTS Übung : Rechnerübungen zu Rechnerarchitektur (2 SWS )2,5 ECTS
Lecturers: Prof. Dr.-Ing. Dietmar Fey Sebastian Rachuj Christian Widerspick  
Module coordinator: Prof. Dr.-Ing. Dietmar Fey
Contents: Die Vorlesung baut auf die in den Grundlagen der Rechnerarchitektur und -organisation vermittelten Inhalte auf und setzt diese mit weiterführenden Themen fort. Es werden zunächst grundlegende fortgeschrittene Techniken bei Pipelineverarbeitung und Cachezugriffen in modernen Prozessoren und Parallelrechnern behandelt. Ferner wird die Architektur von Spezialprozessoren, z.B. DSPs und Embedded Prozessoren behandelt. Es wird aufgezeigt, wie diese Techniken in konkreten Architekturen (Intel Nehalem, GPGPU, Cell BE, TMS320 DSP, Embedded Prozessor ZPU) verwendet werden. Zur Vorlesung wird eine Tafelübung angeboten. Mit erfolgreicher mündlicher Prüfung können 5 ECTS erworben werden. In den Tafelübungen werden die in der Vorlesung vermittelten Techniken durch zu lösende Aufgaben vertieft. In der Rechnerübung soll u.a. ein einfacher Vielkern-Prozessor auf Basis des ZPU-Prozessors mit Simulationswerkzeugen aufgebaut werden. Im Einzelnen werden folgende Themen behandelt: •Organisationsaspekte von CISC und RISC-Prozessoren •Behandlung von Hazards in Pipelines •Fortgeschrittene Techniken der dynamischen Sprungvorhersage •Fortgeschritten Cachetechniken, Cache-Kohärenz •Ausnutzen von Cacheeffekten •Architekturen von Digitalen Signalprozessoren •Architekturen homogener und heterogener Multikern- Prozessoren (Intel Corei7, Nvidia GPUs, RISC-V) •Architektur von Parallelrechnern (Clusterrechner, Superrechner) •Effiziente Hardware-nahe Programmierung von Mulitkern- Prozessoren (OpenMP, SSE, CUDA) •Leistungsmodellierung und -analyse von Multikern- Prozessoren (Roofline-Modell)
Learning objectives and skills: Fachkompetenz Wissen Lernende können Wissen abrufen und wiedergeben. Sie kennen konkrete Einzelheiten wie Begriffe, Definitionen, Fakten, und Abläufe in einem Prozessor darlegen. Verstehen 

Prerequisites: None
Module compatibility: Wahlpflichtbereich Informatik Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Portfolio
Grading procedure: Portfolio (100%)
Workload in clock hours: Contact hours: 60 h Independent study: 90 h
Module duration: 1 semester
Teaching and examination language: german
Bibliography: •Patterson/Hennessy: Computer Organization und Design •Hennessy/Patterson: Computer Architecture - A Quantitative Approach •Stallings: Computer Organization and Architecture •Märtin: Rechnerarchitekturen 

, Module name 43821: Computer Graphics Computer graphics5 ECTS
Course / lectures: Übung : Computer Graphics Basic Tutorials (1 SWS ) 1,25 ECTS Vorlesung: Computer Graphics (3 SWS ) 3,75 ECTS
Lecturers: Prof. Dr. Marc Stamminger  
Module coordinator: Prof. Dr. Marc Stamminger
Contents: Die Vorlesung gibt eine Einführung in die Computergraphik: •Graphik Pipeline •Clipping •3D Transformationen •Hierarchische Display Strukturen •Perspektive und Projektionen •Visibilitätsbetrachtungen •Rastergraphik und Scankonvertierung •Farbmodelle •Lokale und globale Beleuchtungsmodelle •Schattierungsverfahren •Ray Tracing und Radiosity •Schatten und Texturen Contents: This lecture covers the following aspects of Computer Graphics: •graphics pipeline •clipping •3D transformations •hierarchical display structures •perspective transformations and projections •visibility determination •raster graphics and scan conversion •color models •local and global illumination models •shading models •ray tracing and radiosity •shadows and textures
Learning objectives and skills: Die Studierenden •geben die unterschiedlichen Schritte der Graphik Pipeline wieder •erklären die Funktionsweise der Clippingalgorithmen für Linien und Polygone •beschreiben, charakterisieren und berechnen affine und perspektivische Transformationen in 3D und veranschaulichen die allgemeine Form der Transformationsmatrix in homogener Koordinaten •skizzieren die Verfahren zur Tiefe- und Visibilitätsberechnung •vergleichen die unterschiedlichen Farbmodelle der Computergraphik •illustrieren und untersuchen die Datenstrukturen zur Beschreibung virtueller 3D Modelle und komplexer Szenen 

Prerequisites: None
Module compatibility: Wahlpflichtbereich Informatik Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Tutorial achievement Written examination (60 minutes)
Grading procedure: Tutorial achievement (0%) Written examination (100%)
Workload in clock hours: Contact hours: 60 h Independent study: 90 h
Module duration: 1 semester
Teaching and examination language: german
Bibliography: •P. Shirley: Fundamentals of Computer Graphics. AK Peters Ltd., 2002 •Hearn, M. P. Baker: Computer Graphics with OpenGLD. Pearson •Foley, van Dam, Feiner, Hughes: Computer Graphics - Principles and Practice 


, Module name 43394: Computergraphik (Vorlesung mit Übung und Praktikum) no english module name available for this module7,5 ECTS
Course / lectures: Übung : Computer Graphics Basic Tutorials (1 SWS ) 1,25 ECTS Vorlesung: Computer Graphics (3 SWS ) 3,75 ECTS Übung : Computer Graphics Advanced Tutorials (2 SWS )2,5 ECTS
Lecturers: Prof. Dr. Marc Stamminger  
Module coordinator: Prof. Dr. Marc Stamminger
Contents: Die Vorlesung gibt eine Einführung in die Computergraphik: •Graphik Pipeline •Clipping •3D Transformationen •Hierarchische Display Strukturen •Perspektive und Projektionen •Visibilitätsbetrachtungen •Rastergraphik und Scankonvertierung •Farbmodelle •Lokale und globale Beleuchtungsmodelle •Schattierungsverfahren •Ray Tracing und Radiosity •Schatten und Texturen
Learning objectives and skills: Die Studierenden •geben die unterschiedlichen Schritte der Graphik Pipeline wieder •erklären die Funktionsweise der Clippingalgorithmen für Linien und Polygone •beschreiben, charakterisieren und berechnen affine und perspektivische Transformationen in 3D und veranschaulichen die allgemeine Form der Transformationsmatrix in homogener Koordinaten •skizzieren die Verfahren zur Tiefe- und Visibilitätsberechnung •vergleichen die unterschiedlichen Farbmodelle der Computergraphik •illustrieren und untersuchen die Datenstrukturen zur Beschreibung virtueller 3D Modelle und komplexer Szenen •erläutern die Funktionsweise der Rasterisierung und Scankonvertierung in der Graphikpipeline •implementieren 3D Transformationen mithilfe der Programmiersprache C++ und der graphischen Bibliothek OpenGl •Implementieren Beleuchtungsmodelle und Texturierung von virtuellen 3D Objekten mithilfe der Programmiersprachen OpenGL und GLSL •lösen Aufgaben zu Beleuchtung und Texturierung von 3D virtuellen Modellen •klassifizieren Schattierungsverfahren 

Prerequisites: None
Module compatibility: Wahlpflichtbereich Informatik Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Tutorial achievement Written examination (60 minutes) Tutorial achievement
Grading procedure: Tutorial achievement (0%) Written examination (100%) Tutorial achievement (0%)
Workload in clock hours: Contact hours: 90 h Independent study: 135 h
Module duration: 1 semester
Teaching and examination language: german
Bibliography: •P. Shirley: Fundamentals of Computer Graphics. AK Peters Ltd., 2002 •Hearn, M. P. Baker: Computer Graphics with OpenGLD. Pearson •Foley, van Dam, Feiner, Hughes: Computer Graphics - Principles and Practice •Rauber: Algorithmen der Computergraphik •Bungartz, Griebel, Zenger: Einführung in die Computergraphik •Encarnação, Strasser, Klein: Computer Graphics 

, Module name 713618: Computer vision 5 ECTS
Course / lectures: Übung : Computer Vision Exercise (2 SWS ) 2,5 ECTS Vorlesung: Computer Vision (2 SWS ) 2,5 ECTS
Lecturers: Prof. Dr. Bernhard Egger Prof. Dr.-Ing. Andreas Maier Prof. Dr. Tim Weyrich  
Module coordinator: Prof. Dr. Bernhard Egger Prof. Dr.-Ing. Andreas Maier
Contents: This lecture discusses important algorithms from the field of computer vision. The emphasis lies on 3-D vision algorithms, covering the geometric foundations of computer vision, and central algorithms such as stereo vision, structure from motion, optical flow, and 3-D multiview reconstruction. Participants of this advanced course are expected to bring experience from prior lectures either from the field of pattern recognition or from the field of computer graphics.
Learning objectives and skills: Die Vorlesung stellt eine Auswahl von Methoden aus dem Gebiet der Computer Vision vor, die in dem Feld eine zentrale Stellung einnehmen. In den Übungen implementieren und evaluieren die Studierenden selbständig diese Methoden. Die Studierenden arbeiten die ganze Zeit über an populären Computer Vision-Methoden wie zum Beispiel Stereosehen, optischer Fluss und 3D-Rekonstruktion aus mehreren Ansichten. Für diese Probleme •beschreiben die Studierenden perspektivische Projektion, Rotationen und verwandte geometrische Grundlagen, •erklären die Studierenden die behandelten Methoden, •diskutieren die Studierenden Vor- und Nachteile verschiedener Modalitäten zur Erfassung von 3D-Informationen, •implementieren die Studierenden einzeln und gemeinschaftlich in Kleingruppen Code, •entdecken die Studierenden optimale Vorgehensweisen in der Datenaufnahme, •erkunden und bewerten die Studierenden unterschiedliche Möglichkeiten für die Evaluation, •diskutieren und präsentieren die Gruppenarbeiter in Gruppen die Vor- und Nachteile ihrer Implementierungen, •diskutieren und reflektieren die Studierenden gesellschaftliche Auswirkungen von Anwendungen des 3D-Rechnersehens. The lecture introduces computer vision algorithms that are central to the field. In the exercises, participants autonomously implement and evaluate these algorithms. The participants work throughout the time on popular computer vision algorithms, like for example stereo vision, optical flow, and 3-D multiview reconstruction. For these problems, the participants •describe perspective projection, rotations, and related geometric foundations, •explain the presented methods, 

Prerequisites: None
Module compatibility: Wahlpflichtbereich Informatik Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Variable (90 minutes)
Grading procedure: Variable (100%)
Module frequency: only in summer semester 13Workload in clock hoursContact hours: 60 h Independent study: 90 h 14 Module duration 1 semester 15Teaching and examination languageenglish 16 BibliographyRichard Szeliski: "Computer Vision: Algorithms and Applications", Springer 2011. 
Workload in clock hours: Contact hours: 60 h Independent study: 90 h
Module duration: 1 semester
Teaching and examination language: english
Bibliography: Richard Szeliski: "Computer Vision: Algorithms and Applications", Springer 2011. 

, Module name 47677: Data Science Survival Skills no english module name available for this module5 ECTS
Course / lectures: Vorlesung mit Übung: Data Science Survival Skills (4 SWS )5 ECTS
Lecturers: Prof. Dr. Andreas Kist René Groh  
Module coordinator: Prof. Dr. Andreas Kist
Contents: Data Scientists need a comprehensive toolbox for their work. This consists for example of data acquisition, data cleaning, data processing and data visualization. In this course, we highlight good practices and approaches, and provide intensive hands-on experience. In particular, this course covers: Data handling and storage Lossy and lossless data compression Data acquisition and API usage Data visualization in scientific figures and movies Data analysis platforms Multithreading and multiprocessing Code vectorization and just-in-time compilation Code profiling Prototyping Graphical User Interfaces Workflow optimization techniques
Learning objectives and skills: Students will be able to create own code for working with data can carry out research projects in data science can apply code optimization strategies can design own graphical user interfaces for convenient interaction with data can produce high-quality data visualization as needed for scientific publications
Prerequisites: It is recommended to have prior knowledge of the programming language Python (e.g. through GSProg or SciProgPy) and first exposure to data.
Module compatibility: Wahlpflichtbereich Informatik Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Variable (60 minutes)
Grading procedure: Variable (100%)
Module frequency: only in winter semester 13Workload in clock hoursContact hours: 60 h Independent study: 90 h 14 Module duration 1 semester 15Teaching and examination languagegerman 
Workload in clock hours: Contact hours: 60 h Independent study: 90 h
Module duration: 1 semester
Teaching and examination language: german 

Bibliography: Edward Tufte: The Visual Display of Quantitative Information Cole Nussbaum Knaflic: Storytelling with data Wes McKinney: Python for Data Analysis: Data Wrangling with Pandas, NumPy, and IPython Gabriele Lanaro: Python High Performance Micha Gorelick, Ian Ozsvald: High Performance Python Alan D Moore: Mastering GUI Programming with Python 

, Module name 901895: Deep Learning Deep learning5 ECTS
Course / lectures: Vorlesung: Deep Learning (2 SWS ) 2,5 ECTS Übung : Deep Learning Exercises (2 SWS ) 2,5 ECTS
Lecturers: Prof. Dr.-Ing. Andreas Maier Zijin Yang Alexander Barnhill  
Module coordinator: Felix Denzinger Prof. Dr.-Ing. Andreas Maier Fabian Wagner
Learning objectives and skills: The students •explain the different neural network components, •compare and analyze methods for optimization and regularization of neural networks, •compare and analyze different CNN architectures, •explain deep learning techniques for unsupervised / semi- supervised and weakly supervised learning, •explain deep reinforcement learning, •explain different deep learning applications, •implement the presented methods in Python, •autonomously design deep learning techniques and prototypically implement them, 

Prerequisites: None
Module compatibility: Wahlpflichtbereich Informatik Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Written examination (90 minutes)
Grading procedure: Written examination (100%)
Workload in clock hours: Contact hours: 60 h Independent study: 90 h
Module duration: 1 semester
Teaching and examination language: english
Bibliography: •Ian Goodfellow, Yoshua Bengio, Aaron Courville: Deep Learning. MIT Press, 2016. •Christopher Bishop: Pattern Recognition and Machine Learning, Springer Verlag, Heidelberg, 2006 •Yann LeCun, Yoshua Bengio, Geoffrey Hinton: Deep learning. Nature 521, 436444 (28 May 2015) 

, Module name 44150: Diagnostic Medical Image Processing Diagnostic medical image processing5 ECTS
Course / lectures: Vorlesung: Medical Image Processing for Diagnostic Applications (VHB-Kurs) (4 SWS )5 ECTS
Lecturers: Manuela Meier Arpitha Ravi Luis Rivera Monroy  
Module coordinator: Prof. Dr.-Ing. Andreas Maier
Contents: English version: The contents of the module comprise basics about medical imaging modalities and acquisition hardware. Furthermore, details on acquisition-dependent preprocessing are covered for image intensifiers, flat-panel detectors, and MR. The fundamentals of 3D reconstruction from parallel-beam to cone-beam reconstruction are also covered. In the last chapter, rigid registration for image fusion is explained. Deutsche Version: Die Inhalte des Moduls umfassen Grundlagen der medizinischen Bildverarbeitung und Aufnahmeprinzipien. Darüber hinaus werden Details der Vorverarbeitung für Bildverstärker, Flachpaneldetektoren und MR erklärt. Die Grundlagen der Rekonstruktion von Parallelstrahl bis hin zur Kegelstrahl-Tomographie werden ebenfalls behandelt. Im letzten Kapitel wird starre Registrierung für Bildfusion erläutert.
Learning objectives and skills: English Version: The participants •understand the challenges in interdisciplinary work between engineers and medical practitioners. •develop understanding of algorithms and math for diagnostic medical image processing. •learn that creative adaptation of known algorithms to new problems is key for their future career. •develop the ability to adapt algorithms to different problems. •are able to explain algorithms and concepts of the module to other engineers. Deutsche Version: Die Teilnehmenden •verstehen die Herausforderungen in der interdisziplinären Arbeit zwischen Ingenieuren und Ärzten. •entwickeln Verständnis für Algorithmen und Mathematik der diagnostischen medizinischen Bildverarbeitung. •erfahren, dass kreative Adaption von bekannten Algorithmen auf neue Probleme der Schlüssel für ihre berufliche Zukunft ist. •entwickeln die Fähigkeit Algorithmen auf verschiedene Probleme anzupassen. •sind in der Lage, Algorithmen und Konzepte des Moduls anderen Studierenden der Technischen Fakultät zu erklären. 

Prerequisites: Ingenieurmathematik Engineering Mathematics
Integration in curriculum: semester: 1
Module compatibility: Medical Engineering Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013 Wahlpflichtbereich Informatik Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Written or oral (60 minutes)
Grading procedure: Written or oral (100%)
Module frequency: every semester 13Workload in clock hoursContact hours: 0 h Independent study: 150 h 14 Module duration 1 semester 15Teaching and examination languageenglish 16 Bibliography no Bibliography information available! 
Workload in clock hours: Contact hours: 0 h Independent study: 150 h
Module duration: 1 semester
Teaching and examination language: english
Bibliography: no Bibliography information available! 

, Module name 843472: Effiziente kombinatorische Algorithmen Efficient combinatorial algorithms7,5 ECTS
Course / lectures: Übung : Übung Effiziente kombinatorische Algorithmen (2 SWS )2,5 ECTS Vorlesung: Effiziente kombinatorische Algorithmen (2 SWS )5 ECTS
Lecturers: Prof. Dr. Rolf Wanka  
Module coordinator: Prof. Dr. Rolf Wanka
Contents: In diesem Modul werden effiziente exakte Algorithmen für diskrete Probleme vorgestellt. Zuerst werden nichttriviale tiefensuchbasierte Linearzeitverfahren für die Berechnung zweifacher Zusammenhangskomponenten auf ungerichteten Graphen und starker Zusammenhangskomponenten auf gerichteten Graphen untersucht. Danach werden Polynomialzeit-Verfahren zur Berechnung maximaler Flüsse präsentiert. Eine Einführung in den Entwurf und die Analyse parametrisierter Algorithmen an Hand des Vertex-Cover-Problems und eine Einführung in den Bereich der sog. mild-exponentiellen Algorithmen für das Erfüllbarkeitsproblem und weiterer NP-vollständiger Probleme runden das Modul ab.
Learning objectives and skills: Die Studierenden lernen moderne fortgeschrittene Konzepte für die schnelle exakte Lösung kombinatorischer Optimierungsproblem kennen und wie sie sie einsetzen können, um konkrete Anwendungsprobleme zu bearbeiten. Sie kennen dazu konkrete fachspezifische Einzelheiten wie Begriffe, Definitionen, Fakten, Gesetzmäßigkeiten und Theorien und lernen und wie die berechneten Lösungen analysiertt und qualitativ eingeordnet werden.
Module compatibility: Wahlpflichtbereich Informatik Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Oral
Grading procedure: Oral (100%)
Workload in clock hours: Contact hours: 60 h Independent study: 165 h
Module duration: 1 semester
Teaching and examination language: 1
Bibliography: •A. V. Aho, J. E. Hopcroft, J. D. Ullman. The Design and Analysis of Computer Algorithms. Addison-Wesley, 1975. 


, Module name 716033: Fahrzeugkommunikation (Vorlesung mit Übung) no english module name available for this module5 ECTS
Course / lectures: Vorlesung: Fahrzeugkommunikation (2 SWS ) 2,5 ECTS Übung : Fahrzeugkommunikation Übungen (2 SWS ) 2,5 ECTS
Lecturers: Dr.-Ing. Kai-Steffen Hielscher Jonathan Fellerer  
Module coordinator: Dr.-Ing. Kai-Steffen Hielscher

Prerequisites: Rechnerkommunikation
Module compatibility: Wahlpflichtbereich Informatik Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Portfolio
Grading procedure: Portfolio (100%)
Module frequency: only in summer semester 13Workload in clock hoursContact hours: 60 h Independent study: 90 h 14 Module duration 1 semester 15Teaching and examination languagegerman 
Workload in clock hours: Contact hours: 60 h Independent study: 90 h
Module duration: 1 semester
Teaching and examination language: german 

Bibliography: Christoph Sommer and Falko Dressler, Vehicular Networking, Cambridge University Press, 2014. Werner Zimmermann and Ralf Schmidgall, Bussysteme in der Fahrzeugtechnik, ed. 4, Wiesbaden, Vieweg + Teubner, 2011. Konrad Reif, Automobilelektronik, ed. 3, Wiesbaden, Vieweg + Teubner, 2009. Dominique Paret, Multiplexed networks for embedded systems, Chichester, England, Wiley, 2007. Hannes Hartenstein and Kenneth Laberteaux (Eds.), VANET - Vehicular Applications and Inter-Networking Technologies, Intelligent Transport Systems, Chichester, John Wiley & Sons, 2009. 

, Module name 796399: Geometric Modeling Geometric modeling5 ECTS
Course / lectures: Übung : Tutorials to Geometric Modeling (1 SWS ) - Vorlesung: Geometric Modeling (3 SWS ) 5 ECTS
Lecturers: Dr. Roberto Grosso  
Module coordinator: Dr. Roberto Grosso Prof. Dr. Marc Stamminger
Contents: Das Modul beschäftigt sich mit Methoden zur Modellierung dreidimensionaler Oberflächen. Typische Einsatzgebiete sind der rechnerunterstützte Entwurf (CAD, z.B. im Automobil- oder Flugzeugbau), die Rekonstruktion von Flächen aus Sensordaten oder die Konstruktion glatter Interpolationsflächen. Behandelt werden u.a. folgende Themen: •Polynomkurven •Bezierkurven, rationale Bezierkurven •B-Splines •Tensorproduktflächen •Bezier-Dreiecksflächen •polygonale Flächen •Subdivission-Verfahren This module is concerned with different aspects of modelling three- dimensional curves and surfaces. Typical areas of application are computer-aided design (CAD), reconstruction of surfaces from sensor data (reverse engineering) and construction of smooth interpolants. The lecture covers the following topics: •polynomial curves •Bézier curves, rational Bézier curves •B-splines •tensor product surfaces •triangular Bézier surfaces •polyhedral surfaces
Learning objectives and skills: Die Studierenden •erklären die Begriffe Polynomial-, Bezierkurven und B-Splines •klassifizieren und veranschaulichen die unterschiedlichen Auswertung- und Subdivision-Verfahren für Bezier-Kurven und B-Splines •veranschaulichen und ermitteln die Eigenschaften von Bezierkurven, rationalen Bezierkurven und B-Splines •beschreiben Tensorproduktflächen und skizzieren Auswertungsalgorithmen •erklären polygonale Flächen und Subdivision-Verfahren und veranschaulichen ihre Unterschiede und Eigenschaften •lernen gängige Datenstrukturen zur Darstellung polygonaler Flächen kennen •wenden die Verfahren der Geometrischen Modellierung an unterschiedlichen Beispiele an •berechnen Bezierkurven und B-Splines 

Prerequisites: None
Integration in curriculum: semester: 1
Module compatibility: Wahlpflichtbereich Informatik Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Electronic examination with multiple choice
Grading procedure: Electronic examination with multiple choice (100%)
Workload in clock hours: Contact hours: 60 h Independent study: 90 h
Module duration: 1 semester
Teaching and examination language: english
Bibliography: •Hoschek, Lasser: Grundlagen der Geometrischen Datenverarbeitung •Farin: Kurven und Flächen im Computer Aided Geometric Design •de Boor: A Practical Guide to Splines •Bartels, Beatty, Barsky: Splines for Use in Computer Graphics and Geometric Modeling •Abramowski, Müller: Geometrisches Modellieren 

, Module name 292952: Hardware-Software-Co-Design (Vorlesung mit erweiterter Übung) Hardware-software-co-design (Lecture with extended exercises)7,5 ECTS
Course / lectures: Übung : Übungen zu Hardware-Software-Co-Design (2 SWS )2,5 ECTS Vorlesung: Hardware-Software-Co-Design (2 SWS ) 2,5 ECTS Übung : Erweiterte Übungen zu Hardware-Software-Co- Design (2 SWS )2,5 ECTS
Lecturers: Muhammad Sabih Tobias Hahn Dr.-Ing. Stefan Wildermann Prof. Dr.-Ing. Jürgen Teich  
Module coordinator: Joachim Falk Prof. Dr.-Ing. Jürgen Teich
Contents: Zahlreiche Realisierungen eingebetteter Systeme (z.B. Mobiltelephone, Faxgeräte, Industriesteuerungen) zeichnen sich durch kooperierende Hardware- und Softwarekomponenten aus. Die Popularität solcher Realisierungsformen lässt sich begründen durch 1) die steigende Vielfalt und Komplexität heterogener Systeme, 2) die Notwendigkeit, Entwurfs- und Testkosten zu senken und 3) Fortschritte in Schlüsseltechnologien (Mikroelektronik, formale Entwurfsmethoden). Zum Beispiel bieten Halbleiterhersteller kostengünstige ASICs an, die einen Mikrocontroller und benutzerspezifische Peripherie und Datenpfade auf einem Chip integrieren. Die Synthese solcher Systeme wirft jedoch eine Reihe neuartiger Entwurfsprobleme auf, insbesondere 1) die Frage der Auswahl von Hardware- und Softwarekomponenten, 2) die Partitionierung einer Spezifikation in Hard- und Software, 3) die automatische Synthese von Interface- und Kommunikationsstrukturen und 4) die Verifikation und Cosimulation. 1)Überblick und Vergleich von Architekturen und Komponenten in Hardware/Software-Systemen. 2)Aufbau eines Compilers und Codeoptimierungsverfahren für Hardware und Software 3)Hardware/Software-Partitionierung (Partitionierung komplexer Systeme, Schätzungsverfahren, Performanzanalyse, Codegenerierung) 4)Interfacesynthese (Kommunikationsarten, Synchronisation, Synthese) 5)Verifikation und Cosimulation 6)Tafelübungen 7)Demonstrationen mit rechnergestützten Entwurfswerkzeugen und praktische Übungen Content: Numerous realisations of embedded systems (e.g. mobile phones, fax machines, industrial controls) are characterised by cooperating hardware and software components. The popularity of 

Learning objectives and skills: Fachkompetenz - Wissen •Die Studierenden erhalten Einblick in ein aktuelles Forschungsgebiet. Fachkompetenz - Verstehen •Die Studierenden verstehen Grundlagen des modernen Systementwurfs. •Die Studierenden erklären Implementierungsalternativen für digitale Hardware/Software-Systeme. Fachkompetenz - Anwenden •Die Studierenden wenden grundlegende Algorithmen an, zur Analyse und Optimierung von Hardware/Software-Systemen. •Die Studierenden wenden das erlernte Wissen in den erweiterten Übungen vor Ort an den Rechnerarbeitsplätzen des Lehrstuhls an. Sozialkompetenz •Die Studierenden benutzen aktuelle Entwurfswerkzeuge für die Spezifikation, Optimierung und Prototypisierung von Hardware/Software-Systemen bei der kooperativen Bearbeitung der erweiterten Übung in Gruppen. Competences: Professional competence - Knowledge •Students gain insight into a current field of research. Professional competence - Understanding • Students understand the basics of modern system design. • Students explain implementation alternatives for digital hardware/software systems. Professional competence - Application 

Module compatibility: Wahlpflichtbereich Informatik Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Portfolio Klausur (90 min) und erfolgreicher Bearbeitung aller Übungsaufgaben in den erweiterten Übungen (verpflichtend, vor Ort an den Rechnerarbeitsplätzen des Lehrstuhls). Die Sprache der Klausur ist abhängig von der Wahl der Studierenden entweder Deutsch oder Englisch.
Grading procedure: Portfolio (100%) Die Modulnote ergibt sich aus der Klausurnote.
Workload in clock hours: Contact hours: 90 h Independent study: 135 h
Module duration: 1 semester
Teaching and examination language: german
Bibliography: Empfohlene Bücher zur Begleitung und Vertiefung: •Teich J., Haubelt C.: "Digitale Hardware/Software-Systeme: Synthese und Optimierung", Springer-Verlag, 2007, ISBN: 978-3-540-46822-6 •Gajski, D. et al.: "Specification and Design of Embedded Systems", Prentice Hall, Englewood Cliffs, NJ, 1994, ISBN: 978-0131507319 Weitere Informationen: https://www.cs12.tf.fau.de/lehre/lehrveranstaltungen/vorlesungen/ hardware-software-co-design 

, Module name 275245: Heterogene Rechnerarchitekturen Online Heterogeneous computing architectures online5 ECTS
Course / lectures: Vorlesung: Heterogene Rechnerarchitekturen Online (0 SWS )-
Lecturers: Johannes Kliemt Prof. Dr.-Ing. Dietmar Fey  
Module coordinator: Prof. Dr.-Ing. Dietmar Fey
Contents: Whereas heterogeneous architectures and parallel computing has filled an academic niche in the past it has become now a commodity technique with the rising of multi-core processors and programmable graphic cards. Even FPGAs play a role hereby in a certain extent due to their increasing importance as accelerator hardware what is clearly observable in the scientific community. However, on one side parallel hardware like multi-core and GPUs are now available nearly for everybody and not only for a selected selection of people, who have access to a parallel supercomputer. On the other side the knowledge about programming of this commodity hardware, and we mean here in particular hardware-orientated programming in order to squeeze out all offered GFlops and TFlops of such hardware, is still missing as well as the knowledge about the architecture details. To overcome this lack we offer this course HETRON. The e-learning course HETRON for the exploitation of parallel and heterogeneous computer architectures) focuses on two main topics which are closely related to each other. This concerns on one side the benefits of using different kinds of multi-core processors and parallel architectures built-up on base of these multicore processors. These architectures differ among each other in the number and in the complexity of its single processing nodes. We distinguish between systems consisting of a large number of simpler, so called fine-grained, processor cores vs. systems consisting of a smaller number of more complex, so called coarse-grained, processor cores. On the other side we lay our focus on that we want to do with these different heterogeneous parallel architectures, namely the execution of parallel programs. Of course this requires the use of parallel programming languages and environments, like CUDA or OpenMP. However, besides these questions of using the right syntax and the right compiler switches to optimize a parallel program it is a pre-requisite to understand how 

Prerequisites: None
Module compatibility: Wahlpflichtbereich Informatik Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Oral
Grading procedure: Oral (100%)
Module frequency: every semester 13Workload in clock hoursContact hours: 0 h Independent study: 150 h 
Workload in clock hours: Contact hours: 0 h Independent study: 150 h 

Module duration: 1 semester
Teaching and examination language: 1
Bibliography: no Bibliography information available! 

, Module name 44510: High End Simulation in Practice High End Simulation in Practice (HESP)7,5 ECTS
Course / lectures: Übung : Exercises to High End Simulation in Practice (4 SWS )5 ECTS Vorlesung: High End Simulation in Practice (2 SWS ) 2,5 ECTS
Lecturers: Rafael Ravedutti Lucio Machado Prof. Dr. Harald Köstler  
Module coordinator: Prof. Dr. Harald Köstler
Contents: Algorithmen und Datenstrukturen für parallele Strömungssimulation mittels der Lattice Boltzmann Methode in C++. Kopplung von Strömungssimulation und Starrkörpersimulation. Simulation von Partikeln in Strömung. Grundlagen der GPU Programmierung.
Learning objectives and skills: Fachkompetenz Wissen Grundlegende Gesetze, die zur Simulation von physikalischen Effekten notwendig sind, darlegen. Verstehen Physikalische Grundgleichungen beschreiben. Anwenden Lösungsmethoden für physikalische Gleichungen implementieren. Numerische Algorithmen modifizieren um sie effizient zu parallelisieren. Numerische Algorithmen auf GPUs portieren. Analysieren Parallele Implementierungen auf GPU und CPU strukturieren. Evaluieren (Beurteilen) Simulationsergebnisse validieren. Erschaffen Neue Simulationssoftware für GPU und CPU entwickeln.
Prerequisites: None
Module compatibility: Wahlpflichtbereich Informatik Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Oral (30 minutes)
Grading procedure: Oral (100%)
Module frequency: only in summer semester 13Workload in clock hoursContact hours: 90 h Independent study: 135 h 14 Module duration 1 semester 15Teaching and examination languageenglish 16 Bibliography no Bibliography information available! 
Workload in clock hours: Contact hours: 90 h Independent study: 135 h
Module duration: 1 semester
Teaching and examination language: english
Bibliography: no Bibliography information available! 

, Module name 695344: HPC Software Projekt HPC Software project10 ECTS
Course / lectures: Projektseminar : HPC Software Projekt (8 SWS ) 10 ECTS
Lecturers: Prof. Dr. Harald Köstler  
Module coordinator: Prof. Dr. Harald Köstler
Contents: Anhand eines aktuellen Forschungsthema im Bereich High Performance Computing sollen die Studierenden an die wissenschaftliche Arbeitsweise im Bereich Informatik herangeführt werden. Dazu wird typischerweise in Gruppenarbeit ein größeres Softwarepaket entwickelt und auf eine konkrete Problemstellung aus dem HPC Bereich angewendet. Beispiele sind die Implementierung und Parallelisierung eines Simulationscodes für Anwendungsprobleme aus der Strömungsmechanik oder eines neuronalen Netzes für Anwendungsprobleme, die mit Hilfe von künstlicher Intelligenz gelöst werden können.
Learning objectives and skills: Fachkompetenz Verstehen Lernende können in Veröffentlichungen beschriebene oder in bestehender Software enthaltene numerische Algorithmen verstehen. Anwenden Lernende können numerische Algorithmen auf vorgegebene Problemstellungen aus dem Bereich High Performance Computing (HPC) anwenden. Analysieren Auswahl von geeigneten numerischen Algorithmen und effizienten, parallelen Datenstrukturen, um ein vorgegebenes Problem auf einer vorgegebenen Hardware-Plattform effizient zu lösen. Erschaffen Entwicklung eines Softwarepaketes für eine konkrete Problemstellung aus dem High Performance Computing (HPC) Bereich. Lern- bzw. Methodenkompetenz Die Studierenden erwerben die Kompetenz, eigenständig Software zu erstellen.
Prerequisites: None
Module compatibility: Wahlpflichtbereich Informatik Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Practical achievement Zur Bewertung der Praktikumsleistung wird das Material aus der Abgabe der Software- und Datenartefakte (90% Gewichtung) und der abschliessenden Ergebnispräsentation (Vortrag 15 min, 10% Gewichtung) herangezogen.
Grading procedure: Practical achievement (100%) 

Module frequency: Unregelmäßig 13Workload in clock hoursContact hours: 25 h Independent study: 275 h 14 Module duration 1 semester 15Teaching and examination languagegerman 16 Bibliography no Bibliography information available! 
Workload in clock hours: Contact hours: 25 h Independent study: 275 h
Module duration: 1 semester
Teaching and examination language: german
Bibliography: no Bibliography information available! 

, Module name 645618: Human Computer Interaction Human computer interaction5 ECTS
Course / lectures: Übung : Human Computer Interaction Exercises (1 SWS )1,25 ECTS Vorlesung: Human Computer Interaction (3 SWS ) 3,75 ECTS
Lecturers: Prof. Dr. Björn Eskofier Ann-Kristin Seifer Madeleine Flaucher Anastasiya Zakreuskaya  
Module coordinator: Prof. Dr. Björn Eskofier Madeleine Flaucher Wolfgang Mehringer Anastasiya Zakreuskaya
Contents: Das Modul vermittelt Konzepte, Prinzipien, Modelle, Methoden und Techniken für die effektive Entwicklung von benutzerfreundlichen Mensch-Computer-Schnittstellen. Das Thema moderner Benutzungsschnittstellen wird dabei für klassische Computer aber auch für mobile Geräte, eingebettete Systeme, Automobile und intelligente Umgebungen betrachtet. Die folgenden Themen werden im Modul behandelt: •Einführung in die Grundlagen der Mensch-Computer- Interaktion, historische Entwicklung •Entwurfsprinzipien und Modelle für moderne Benutzungsschnittstellen und interaktive Systeme •Informationsverarbeitung des Menschen, Wahrnehmung, Motorik, Eigenschaften und Fähigkeiten des Benutzers •Interaktionskonzepte und -stile, Metaphern, Normen, Regeln und Style Guides •Ein- und Ausgabegeräte, Entwurfsraum für interaktive Systeme •Analyse-, Entwurfs- und Entwicklungsmethoden und - werkzeuge für Benutzungsschnittstellen •Prototypische Realisierung und Implementierung von interaktiven Systemen, Werkzeuge •Architekturen für interaktive Systeme, User Interface Toolkits und Komponenten •Akzeptanz, Evaluationsmethoden und Qualitätssicherung Contents: The module aims to teach basic knowledge of concepts, principles, models, methods and techniques for developing highly user-friendly Human-Computer Interfaces. Beyond traditional computer systems, modern user interfaces are also discussed in the context of automobile and intelligent environments, mobile devices and embedded systems. This module addresses the following topics: •Introduction to the basics of Human-Computer Interaction 

Learning objectives and skills: •Studierende entwickeln ein Verständnis für Modelle, Methoden und Konzepte der Mensch-Computer-Interaktion. •Sie lernen verschiedene Ansätze für den Entwurf, die Entwicklung und Bewertung von Benutzungsschnittstellen kennen und verstehen deren Vor- und Nachteile. •Die Teilnahme an der Veranstaltung versetzt Studierende in die Lage, einen Entwicklungsprozess in der Mensch- Computer-Interaktion zu verstehen und umzusetzen. •Sie werden weiterhin in die Lage versetzt, dies vor dem Hintergrund der Informationsverarbeitungsfähigkeit, Wahrnehmung und Motorik des Benutzers zu gestalten. •Passende Methoden der Evaluation sowie Akzeptanz- und Qualitätssicherung werden erlernt. Learning Objectives and Competences: •Students develop an understanding of models, methods and concepts in the field of Human-Computer Interaction. •They learn different approaches for designing, developing and evaluating User Interfaces and their advantages and disadvantages. •Joining the course enables students to understand and execute a development process in Human-Computer Interaction. •Students will be able to do a UI evaluation by learning the basics of information processing, perception and motoric skills of the user. •Appropriate evaluation methods, as well as acceptance and quality assurance aspects, will be learned.
Prerequisites: None
Module compatibility: Wahlpflichtbereich Informatik Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Written examination
Grading procedure: Written examination (100%)
Module frequency: only in summer semester 

Workload in clock hours: Contact hours: 60 h Independent study: 90 h
Module duration: 1 semester
Teaching and examination language: english
Bibliography: no Bibliography information available! 

, Module name 44140: Interventional Medical Image Processing Interventional medical image processing5 ECTS
Course / lectures: Vorlesung: Medical Image Processing for Interventional Applications (VHB-Kurs) (4 SWS )5 ECTS
Lecturers: Manuela Meier Arpitha Ravi Luis Rivera Monroy  
Module coordinator: Prof. Dr.-Ing. Andreas Maier
Contents: English Version: This module focuses on recent developments in image processing driven by medical applications. All algorithms are motivated by practical problems. The mathematical tools required to solve the considered image processing tasks will be introduced. The module starts with an overview on preprocessing algorithms such as scatter correction for x-ray images, edge detection, super-resolution and edge-preserving noise reduction. The second chapter describes automatic image analysis using feature descriptors, key point detection, and segmentation using bottom-up algorithms such as the random walker or top-down approaches such as active shape models. Furthermore, the module covers geometric calibration algorithms for single view calibration, epipolar geometry, and factorization. The last part of the module covers non-rigid registration based on variational methods and motion-compensated image reconstruction. Deutsche Version: Das Modul ist auf die jüngsten Entwicklungen in der Verarbeitung von medizinischen Bildern ausgerichtet. Alle Algorithmen werden durch praktische Probleme motiviert. Die mathematischen Werkzeuge, die für die Bildverarbeitungsaufgaben benötigt werden, werden eingeführt. Das Modul beginnt mit einem Überblick über Vorverarbeitungsalgorithmen, wie zum Beispiel Streustrahlkorrektur für Röntgenbilder, Kantenerkennung, Superresolution und kantenerhaltende Rauschunterdrückung. Das zweite Kapitel beschreibt die automatische Bildanalyse mit Merkmalsdeskriptoren, Punkterkennung und Segmentierung mit Bottom- up-Algorithmen wie dem Random-Walker oder Top-Down-Ansätzen wie aktiven Formmodellen. Darüber hinaus deckt die Vorlesung auch geometrische Kalibrierungsalgorithmen zur Einzelansicht-Kalibrierung, Epipolargeometrie und Faktorisierung ab. Der letzte Teil des Moduls deckt nicht-starre Registrierung auf der Grundlage von Variationsmethoden und bewegungskompensierter Bildrekonstruktion ab. 

Learning objectives and skills: English Version: The participants •summarize the contents of the lecture. •apply pre-processing algorithms such as scatter correction and edge-preserving filtering. •extract information from images automatically by image analysis methods such as key point detectors and segmentation algorithms. •calibrate projection geometries for single images and image sequences using the described methods. •develop non-rigid registration methods using variational calculus and different regularizers. •adopt algorithms to new domains by appropriate modifications. Deutsche Version: Die Teilnehmenden •fassen die Inhalte der Vorlesung zusammen. •wenden Vorverarbeitungsalgorithmen wie Streustrahlkorrektur und kantenerhaltende Filterung an. •extrahieren automatisch Informationen aus Bildern, indem sie Bildanalyseverfahren wie Punktdetektoren und Segmentierungsalgorithmen verwenden. •kalibrieren Projektionsgeometrien für Einzelbilder und Bildsequenzen mit den beschriebenen Methoden. •entwickeln nicht-starre Registrierungsmethoden mit Hilfe von Variationsrechnung und unterschiedlichen Regularisierern. •wenden Algorithmen auf neue Modalitäten durch entsprechende Änderungen im Algorithmus an.
Prerequisites: None
Module compatibility: Wahlpflichtbereich Informatik Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Written or oral (60 minutes)
Grading procedure: Written or oral (100%)
Module frequency: every semester 13Workload in clock hoursContact hours: 0 h Independent study: 150 h 14 Module duration 1 semester 15Teaching and examination languageenglish 16 Bibliography no Bibliography information available! 
Workload in clock hours: Contact hours: 0 h Independent study: 150 h
Module duration: 1 semester
Teaching and examination language: english
Bibliography: no Bibliography information available! 

, Module name 858896: Modellierung, Optimierung und Simulation von Energiesystemen Modeling, optimization and simulation of energy systems5 ECTS
Course / lectures: Übung : Übungen zu Modellierung, Optimierung und Simulation von Energiesystemen (2 SWS )2,5 ECTS Vorlesung: Modellierung, Optimierung und Simulation von Energiesystemen (2 SWS )2,5 ECTS
Lecturers: Marco Pruckner  
Module coordinator: Marco Pruckner
Contents: In der Vorlesung Modellierung, Optimierung und Simulation von Energiesystemen werden systemtechnische Planungs- und Analysemethoden behandelt, die zur Lösung komplexer und interdisziplinärer Entscheidungsaufgaben in der Energiewirtschaft eingesetzt werden. Dabei werden die wichtigsten Methoden und Verfahren anhand praktischer Fragestellungen (z.B. Ausbau erneuerbarer Energien, Zunahme der Elektromobilität) aus der energiepolitischen Planung vermittelt und die Bewältigung technisch- ökonomischer Probleme verdeutlicht. Zu den eingesetzten Tools zählen die Statistiksoftware R, AnyLogic und lpSolve. Vorkenntnisse im Umgang mit diesen Werkzeugen ist nicht zwingend erforderlich. In den Übungen werden Einführungen in die genannten Softwarepakete gegeben.
Learning objectives and skills: Die Studierenden •unterscheiden Probleme und Herausforderungen, die mit dem Energieumstieg verbunden sind, •erfassen die Vorteile und die Anwendungsmöglichkeiten computergestützter Planungsmethoden im Energiebereich, •analysieren verschiedene Problemstellungen und setzen Lösungen dafür um, •erlernen verschiedene Methoden der Datenanalyse, Optimierung und Simulation.
Prerequisites: None
Module compatibility: Wahlpflichtbereich Informatik Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Portfolio
Grading procedure: Portfolio (100%)
Module frequency: only in winter semester 13Workload in clock hoursContact hours: 60 h Independent study: 90 h 14 Module duration 1 semester 15Teaching and examination languagegerman 
Workload in clock hours: Contact hours: 60 h Independent study: 90 h
Module duration: 1 semester
Teaching and examination language: german 

Bibliography: no Bibliography information available! 

, Module name 43311: Practical parallel algorithms with MPI no english module name available for this module5 ECTS
Course / lectures: Übung : Excercises for Practical parallel algorithms with MPI (2 SWS )2,5 ECTS Vorlesung: Practical parallel algorithms with MPI (2 SWS )2,5 ECTS
Lecturers: Dr. Jan Eitzinger Prof. Dr. Gerhard Wellein  
Module coordinator: Prof. Dr. Gerhard Wellein
Contents: The Message Passing Interface (MPI) is the de-facto standard way to implement applications for HPC clusters. This course will cover the required theoretical background and introduce basic and advanced MPI usage. Topics include: •Introduction to parallel programming and HPC system architecture •MPI Basics: Point to point communication, Derived datatypes, collective communication operations •MPI Advanced topics: Process topologies and MPI IO •MPI parallel software design best practices •Tools and debugging for MPI parallel programming •Benchmarking of MPI runtime environments and applications •Parallelisation of PDE solvers on structured grids on the example of a CFD solver •Parallelisation of particle methods on the example of classical molecular dynamics This course consists of lectures and programming exercises.
Learning objectives and skills: Students •acquire a comprehensive knowledge of parallel programming for distributed memory supercomputers •learn the MPI library interface for point to point and collective communication and derived data types •learn about advanced MPI topics, specifically process topologies and MPI IO •learn how to benchmark, debug and profile MPI applications •parallelize two non-trivial scientific computing applications: A CFD solver on structured grids and a classical molecular dynamics solver
Prerequisites: Experience in C programming and basic knowledge of Linux CLI required.
Module compatibility: Wahlpflichtbereich Informatik Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Written examination (60 minutes) 

Grading procedure: Written examination (100%)
Module frequency: only in winter semester 13Workload in clock hoursContact hours: 60 h Independent study: 90 h 14 Module duration 1 semester 15Teaching and examination languageenglish 16 BibliographyAnnouncements and materials will be distributed using the NHR Moodle Platform ! You can login at NHR Moodle using your IDM credentials (click on SSO Login). 
Workload in clock hours: Contact hours: 60 h Independent study: 90 h
Module duration: 1 semester
Teaching and examination language: english
Bibliography: Announcements and materials will be distributed using the NHR Moodle Platform ! You can login at NHR Moodle using your IDM credentials (click on SSO Login). 

, Module name 44120: Pattern Analysis Pattern analysis5 ECTS
Course / lectures: Vorlesung: Pattern Analysis (3 SWS ) 3,75 ECTS Übung : Pattern Analysis Programming (1 SWS ) 1,25 ECTS
Lecturers: PD Dr.Ing. Christian Rieß Dalia Rodriguez Salas  
Module coordinator: PD Dr.Ing. Christian Rieß
Contents: This module introduces the design of pattern analysis systems as well as the corresponding fundamental mathematical methods. The topics comprise: •clustering methods: soft and hard clustering •classification and regression trees and forests •parametric and non-parametric density estimation: maximum- likelihood (ML) estimation, maximum-a-posteriori (MAP) estimation, histograms, Parzen estimation, relationship between folded histograms and Parzen estimation, adaptive binning with regression trees •mean shift algorithm: local maximization using gradient ascent for non-parametric probability density functions, application of the mean shift algorithm for clustering, color quantization, object tracking •linear and non-linear manifold learning: curse of dimensionality, various dimensionality reduction methods: principal component analysis (PCA), multidimensional scaling (MDS), isomaps, Laplacian eigenmaps •Gaussian mixture models (GMM) and hidden Markov models (HMM): expectation maximization algorithm, parameter estimation, computation of the optimal sequence of states/ Viterbi algorithm, forward-backward algorithm, scaling •Markov random fields (MRF): definition, probabilities on undirected graphs, clique potentials, Hammersley-Clifford theorem, inference via Gibbs sampling and graph cuts Das Modul führt in das Design von Musteranalysesystemen sowie die zugrundeliegenden mathematischen Methoden ein. Die Vorlesung umfasst im Einzelnen: •Clustering-Methoden: Soft- und Hard-Clustering •Klassifikations- und Regressionsbäume/-wälder •parametrische und nicht-parametrische Dichteschätzung: Verfahren sind ML- und MAP-Schätzung, Histogramme, Parzenschätzung, Zusammenhang gefaltete Histogramme und Parzenschätzung, adaptives Binning mit Regressionsbäumen. •'Mean Shift'-Algorithmus: lokale Maximierung durch Gradientenaufstieg bei nicht-parametrischen Dichtefunktionen, Anwendungen des 'Mean Shift'-Algorithmus zum Clustering, Farbquantisierung und Objektverfolgung •Linear and Non-Linear Manifold Learning: Curse of Dimensionality, Verschiedene Methode zur 

Learning objectives and skills: The students •explain the discussed methods for classification, prediction, and analysis of patterns, •compare and analyze methods for manifold learning and select a suited method for a given set of features and a given problem, •compare and analyze methods for probability density estimation and select a suited method for a given set of features and a given problem, •apply non-parametric probability density estimation to pattern analysis problems, •apply dimensionality reduction techniques to high-dimensional feature spaces, •explain statistic modeling of feature sets and sequences of features, •explain statistic modeling of statistical dependencies, •implement presented methods in Python, •supplement autonomously the mathematical foundations of the presented methods by self-guided study of the literature, •discuss the social impact of applications of pattern analysis solutions. Die Studierenden •erläutern die behandelten Methoden zur Klassifikation, Vorhersage und Analyse von Mustern, •vergleichen und analysieren Methoden des Manifold Learning und wählen für eine vorgegebene Fragestellung eine geeignete Methode aus, •vergleichen und analysieren Methoden zur Dichteschätzung und wählen für eine vorgegebene Fragestellung eine geeignete Methode aus, •wenden nicht-parametrische Dichteschätzung auf Probleme der Musteranalyse an, •wenden Dimensionsreduktion bei hochdimensionalen Merkmalsräumen an, •erläutern statistische Modellierung von Merkmalsmengen und Merkmalsfolgen, •erklären statistische Modellierung abhängiger Größen, 

Prerequisites: None
Module compatibility: Wahlpflichtbereich Informatik Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Variable (60 minutes)
Grading procedure: Variable (100%)
Workload in clock hours: Contact hours: 60 h Independent study: 90 h
Module duration: 1 semester
Teaching and examination language: english
Bibliography: Begleitende Literatur / Accompanying literature: •C. Bishop: Pattern Recognition and Machine Learning, Springer Verlag, Heidelberg, 2006 •T. Hastie, R. Tibshirani und J. Friedman: The Elements of Statistical Learning, 2nd Edition, Springer Verlag, 2009 •A. Criminisi and J. Shotton: Decision Forests for Computer Vision and Medical Image Analysis, Springer, 2013 

, Module name 44130: Pattern Recognition Pattern recognition5 ECTS
Course / lectures: Übung : Pattern Recognition Exercises (1 SWS ) 1,25 ECTS Vorlesung: Pattern Recognition (3 SWS ) 3,75 ECTS
Lecturers: Siming Bayer Paul Stöwer  
Module coordinator: Prof. Dr.-Ing. Andreas Maier
Contents: Mathematical foundations of machine learning based on the following classification methods: •Bayesian classifier •Logistic Regression •Naive Bayes classifier •Discriminant Analysis •norms and norm dependent linear regression •Rosenblatt's Perceptron •unconstraint and constraint optimization •Support Vector Machines (SVM) •kernel methods •Expectation Maximization (EM) Algorithm and Gaussian Mixture Models (GMMs) •Independent Component Analysis (ICA) •Model Assessment •AdaBoost Mathematische Grundlagen der maschinellen Klassifikation am Beispiel folgender Klassifikatoren: •Bayes-Klassifikator •Logistische Regression •Naiver Bayes-Klassifikator •Diskriminanzanalyse •Normen und normabhängige Regression •Rosenblatts Perzeptron •Optimierung ohne und mit Nebenbedingungen •Support Vector Maschines (SVM) •Kernelmethoden •Expectation Maximization (EM)-Algorithmus und Gaußsche Mischverteilungen (GMMs) •Analyse durch unabhängige Komponenten •Modellbewertung •AdaBoost
Learning objectives and skills: Die Studierenden •verstehen die Struktur von Systemen zur maschinellen Klassifikation einfacher Muster •erläutern die mathematischen Grundlagen ausgewählter maschineller Klassifikatoren •wenden Klassifikatoren zur Lösung konkreter Klassifikationsproblem an 

Integration in curriculum: semester: 1
Module compatibility: Medical Engineering Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013 Wahlpflichtbereich Informatik Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Written examination (90 minutes)
Grading procedure: Written examination (100%)
Workload in clock hours: Contact hours: 60 h Independent study: 90 h
Module duration: 1 semester
Teaching and examination language: 1
Bibliography: •Richard O. Duda, Peter E. Hart, David G. Stock: Pattern Classification, 2nd edition, John Wiley&Sons, New York, 2001 •Trevor Hastie, Robert Tobshirani, Jerome Friedman: The Elements of Statistical Learning - Data Mining, Inference, and Prediction, 2nd edition, Springer, New York, 2009 •Christopher M. Bishop: Pattern Recognition and Machine Learning, Springer, New York, 2006 

, Module name 43385: Physically-based Simulation in Computer Graphics Physically-based simulation in computer graphics5 ECTS
Course / lectures: Übung : Tutorials to Physically-based Simulation in Computer Graphics (0 SWS )- Vorlesung: Physically-based Simulation in Computer Graphics (0 SWS )2,5 ECTS
Lecturers: Prof. Dr.-Ing. Tobias Günther  
Module coordinator: Prof. Dr.-Ing. Tobias Günther
Contents: Over the past decades, computer graphics became a vital component of the entertainment industry. Whether in regards to video games, animation movies, or visual effects in live action productions, computer animation brings virtual worlds to life. Thereby, physically-based simulations are required to reach the necessary degree of realism. Based on differential equations and numerical methods to solve them, this lecture will cover a series of algorithms used to implement physically-based simulations. Among others, we are concerned with: •kinematics and dynamics of motion (generalized coordinates), •numerical time integration techniques (explicit and implicit time integration), •rigid bodies (simulation, collision detection and response), •deformable objects (mass-spring-systems, finite-elements and thin shells), •grid-based fluid simulation (fractional step method), •particle-based fluid simulation (smoothed particle hydrodynamics and viscosity), •hybrid fluid simulation (fluid implicit particle FLIP, liquid-air interfaces), •adding detail to smoke, fire (vorticity confinement, wavelet turbulence), •shallow water waves and oceans This practical course consists of lectures, programming exercises, and a group programming project.
Learning objectives and skills: Students learn how to: •apply numerical time integration methods at practical examples •derive and analyze the properties of equations of motion •set appropriate boundary conditions •compare numerical solvers regarding stability, accuracy and performance •describe different techniques for rigid body, deformable, and fluid simulations •implement the algorithms in C++
Prerequisites: None
Module compatibility: Wahlpflichtbereich Informatik Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013 

Method of examination: Tutorial achievement Presentation (15 minutes) Variable Oral exam (30 minutes)
Grading procedure: Tutorial achievement (0%) Variable (100%)
Module frequency: only in winter semester 13Workload in clock hoursContact hours: 60 h Independent study: 90 h 14 Module duration 1 semester 15Teaching and examination languageenglish 16 Bibliography no Bibliography information available! 
Workload in clock hours: Contact hours: 60 h Independent study: 90 h
Module duration: 1 semester
Teaching and examination language: english
Bibliography: no Bibliography information available! 

, Module name 278169: Programming Techniques for Supercomputers (Lecture and Tutorial) Programming techniques for supercomputers (lecture and tutorial)7,5 ECTS
Course / lectures: Vorlesung: Programming Techniques for Supercomputers (4 SWS )5 ECTS Übung : Programming Techniques for Supercomputers - Exercises (2 SWS )2,5 ECTS
Lecturers: Prof. Dr. Gerhard Wellein  
Module coordinator: Prof. Dr. Gerhard Wellein
Contents: •Introduction to the architecture of modern supercomputers •Single core architecture and optimisation strategies •Memory hierarchy and data access optimization •Concepts of parallel computers and parallel computing •Efficient "shared memory parallelisation (OpenMP) •Parallelisation approaches for multi-core processors including GPUs •Efficient "distributed memory parallelisation (MPI) •Roofline performance model •Serial and parallel performance modelling •Energy efficient implementation and execution of parallel programs
Learning objectives and skills: Students •acquire a comprehensive overview of programming modern supercomputers efficiently for numerical simulations •learn modern optimisation and parallelisation strategies, guided by structured performance modelling •acquire an insight into innovative programming techniques and alternative supercomputer architectures •are able to implement basic numerical methods with high hardware efficiency on parallel computers •are able to program and use modern supercomputer with high (energy) efficiency
Module compatibility: Wahlpflichtbereich Informatik Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Written examination
Grading procedure: Written examination (100%)
Module frequency: only in summer semester 13Workload in clock hoursContact hours: 90 h Independent study: 135 h 14 Module duration 1 semester 
Workload in clock hours: Contact hours: 90 h Independent study: 135 h
Module duration: 1 semester 

Teaching and examination language: english
Bibliography: G. Hager and G. Wellein: Introduction to High Performance Computing for Scientists and Engineers. CRC Computational Science Series, 2010. ISBN 978-1439811924 J. Hennessy and D. Patterson: Computer Architecture. A Quantitative Approach. Morgan Kaufmann Publishers, Elsevier, 2003. ISBN 1-55860-724-2 

, Module name 924553: Projekt Maschinelles Lernen und Datenanalytik Project machine learning and data analytics10 ECTS
Course / lectures: Sonstige Lehrveranstaltung : Projekt Maschinelles Lernen und Datenanalytik (0 SWS )10 ECTS
Lecturers: Prof. Dr. Björn Eskofier Dr. Dario Zanca  
Module coordinator: Prof. Dr. Björn Eskofier An Nguyen Dr. Dario Zanca
Contents: At the Machine Learning and Data Analytics Lab we offer project topics that are related to our current research in the fields of Machine Learning, Human Computer Interaction, Modeling and Simulation and Wearable Computing. Other than a course with fixed topic, project topics are defined individually. The 10 ECTS project addresses students of computer science and medical engineering. However, most projects can also be offered as 5 ECTS medical engineering internship/praktikum. There will be a kick-off meeting the first Thursday 16:15-18:00 of each semester where topics in the field of machine learning and data analytics will be presented. Most topics will be related to the diverse research fields of the Machine Learning and Data Analytics Lab. Students also have the possibility to discuss their own project ideas with the supervisors. The distribution of topics will be based on prerequisites and first come, first serve in terms of time of registration until all topics are distributed. Students will have to contact the corresponding supervisor for the topic of interest. Additional topics are also presented on our website.
Learning objectives and skills: Die Studierenden •arbeiten sich in einen Algorithmus der Mustererkennung ein und implementieren diesen •arbeiten sich in komplexe Softwaresysteme ein und erweitern diese •lernen, eigenständig Lösungsvorschläge auszuarbeiten und umzusetzen •dokumentieren die von ihnen geschriebene Software
Prerequisites: None
Module compatibility: Wahlpflichtbereich Informatik Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Portfolio
Grading procedure: Portfolio (100%)
Module frequency: every semester 13Workload in clock hoursContact hours: 60 h Independent study: 240 h 
Workload in clock hours: Contact hours: 60 h Independent study: 240 h 

Module duration: 1 semester
Teaching and examination language: german
Bibliography: no Bibliography information available! 

, Module name 93185: Reinforcement Learning no english module name available for this module5 ECTS
Course / lectures: Vorlesung mit Übung: Reinforcement Learning ( SWS )-
Lecturers: Dr.-Ing. Christopher Mutschler  
Module coordinator: Dr.-Ing. Christopher Mutschler
Contents: The lecture aims at teachin Reinforcement Learning (RL) and will cover the following topics: •Introduction to Reinforcement Learning (Agent-Environment- Interface, Markov Decision Processes) •Dynamic Programming (Bellman Equations, Value Iteration, Policy Iteration) •Model-Free Prediction •Model-Free Control •Value Function Approximation (Linear VFA and DQNs) •Policy-based Reinforcement Learning (Monte-Carlo Policy Gradient, Advantage Estimators, TRPO, PPO) •Model-based RL •Offline RL •Explainable RL •Exploration-Exploitation •Simulation to Reality Transfer •Research frontiers & hot topics, Sim2Real & Real-World Applications
Learning objectives and skills: The students will learn to •understand the basic principle behind sequestration decision making problems and how to translate them into a formal model •compare and analyze methods different agents to search for policies •implement the presented methods in PyTorch, •discuss the social impact of applications that automate decision making
Module compatibility: Wahlpflichtbereich Informatik Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Variable
Grading procedure: Variable (100%)
Module frequency: only in summer semester 13Workload in clock hoursContact hours: 60 h Independent study: 90 h 
Workload in clock hours: Contact hours: 60 h Independent study: 90 h 

Module duration: 1 semester
Teaching and examination language: english
Bibliography: •Richard S. Sutton and Andrew G. Barto. 2018. Reinforcement Learning: An Introduction. A Bradford Book, Cambridge, MA, USA. •Bellman, R.E. 1957. Dynamic Programming. Princeton University Press, Princeton, NJ. Republished 2003: Dover, ISBN 0-486-42809-5. •Csaba Szepesvari and Ronald Brachman and Thomas Dietterich. 2010. Algorithms for Reinforcement Learning. Morgan and Claypool Publishers. •Warren B. Powell. 2011. Approximate Dynamic Programming. Wiley. •Maxim Lapan. 2020. Deep Reinforcement Learning Hands-On: Apply modern RL methods to practical problems of chatbots, robotics, discrete optimization, web automation, and more, 2nd Edition. Packt Publishing. •Dimitri P. Bertsekas. 2017. Dynamic Programming and Optimal Control. Athena Scientific. •Miguel Morales. 2020. grokking Deep Reinforcement Learning. Manning. •Laura Graesser and Keng Wah Loon. 2019. Foundations of Deep Reinforcement Learning: Theory and Practice in Python. Addison-Wesley Data & Analytics. 

, Module name 43722: Scientific Visualization no english module name available for this module5 ECTS
Course / lectures: Übung : Tutorials to Scientific Visualization (2 SWS ) 0 ECTS Vorlesung: Scientific Visualization (2 SWS ) 5 ECTS
Lecturers: Prof. Dr.-Ing. Tobias Günther Xingze Tian  
Module coordinator: Prof. Dr.-Ing. Tobias Günther
Contents: The amount of data, generated in the pursuit of scientific discovery, keeps rapidly increasing across all major scientific disciplines. How can we make sense of large, time-dependent, high-dimensional and multi-variate data? This lecture provides an introduction into scientific visualization. Throughout the course, we cover the fundamental perception basics needed to convey information accurately. After categorizing different data types based on their dimensionality, we dive deeper into specific techniques for scalar, vector and tensor valued data. The lecture covers the following topics: •visualization design basics (data abstraction, visual encoding of information), •a review of scalar and vector calculus (differential properties, extremal and critical points), •data structures and data acquisition techniques (grids, interpolation, and differentiation), •indirect volume visualization (marching cubes and contour trees), •direct volume visualization (ray marching and Monte Carlo rendering), •elementary and line-based flow visualization (numerical integration, seeding, rendering), •surface-based flow visualization (integration, selection, rendering), •topology-based flow visualization (topological skeleton, bifurcations, feature flow fields), •feature-based flow visualization (vortices, material boundaries, Lagrangian coherent structures), •advanced methods (tensor visualization, uncertainty, ensembles)
Learning objectives and skills: Students are able to: •use perception basics to select appropriate visualization methods •classify data and select appropriate visualization techniques •calculate differential properties of scalar and vector fields •identify features in scalar and vector-valued data •implement numerical extraction algorithms •learn the advantages and disadvantages of common visualization techniques 

Prerequisites: None
Module compatibility: Wahlpflichtbereich Informatik Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Variable Electronic exam in presence with multiple choice questions (90 minutes). Electronic exam in presence with multiple choice questions (90 minutes)
Module frequency: only in summer semester 13Workload in clock hoursContact hours: 60 h Independent study: 90 h 14 Module duration 1 semester 15Teaching and examination languageenglish 16 Bibliography no Bibliography information available! 
Workload in clock hours: Contact hours: 60 h Independent study: 90 h
Module duration: 1 semester
Teaching and examination language: english
Bibliography: no Bibliography information available! 

, Module name 97090: Simulation und Modellierung I Simulation and modelling I5 ECTS
Course / lectures: Übung : Exercises to Simulation and Modeling 1 (2 SWS )2,5 ECTS Vorlesung: Simulation and Modeling 1 (2 SWS ) 2,5 ECTS
Lecturers: Jonathan Fellerer Lisa Maile Prof. Dr. Reinhard German  
Module coordinator: Prof. Dr. Reinhard German
Contents: Das Modul vermittelt die Grundlagen der diskreten Ereignissimulation und beinhaltet •diskrete Simulation •analytische Modellierung (z.B. Warteschlangen) •Eingabemodellierung (z.B. Fitting-Verfahren) •Zufallszahlenerzeugung •statistische Ausgabeanalyse •Modellierungsparadigmen (u.a. Ereignis-/Prozessorientierung, Warteschlangen, Automaten, Petri-Netze, UML, graphische Bausteine) •kontinuierliche und hybride Simulation •Simulationssoftware •Fallstudien Content: Overview of the various kinds of simulation •discrete simulation (computational concepts, simulation of queuing systems, simulation in Java, professional simulation tools) •required probability concepts and statistics, modeling paradigms (e.g., event/process oriented, queuing systems, Petri nets, UML statecharts) •input modeling (selecting input probability distributions) •random number generation (linear congruential generators and variants, generating random variates) •output analysis (warm-up period detection, independent replications, result presentation) •continuous and hybrid simulation (differential equations, numerical solution, hybrid statecharts) •simulation software, case studies, parallel and distributed simulation.
Learning objectives and skills: Die Studierenden •erwerben Kenntnisse über Verfahren und Realisierungsmöglichkeiten der diskreten Simulation mit Ausblick auf andere Simulationsarten •erwerben Kenntnisse über statistische Aspekte der Simulation, die für die Anwendung wichtig sind •wenden statistische Methoden zur Analyse und Bewertung von Eingabe- sowie Ausgabedaten an 

Prerequisites: elementare Programmierkenntnisse, vorzugsweise in Java, Mathematikkenntnisse in Analysis, wie z.B. im 1. Semester der angewandten Mathematik vermittelt Recommended background knowledge: basic programming skills, preferably in Java, mathematics skills in analysis, such as taught in the first semester in applied mathematics.
Module compatibility: Wahlpflichtbereich Informatik Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Written examination (90 minutes)
Grading procedure: Written examination (100%)
Module frequency: only in winter semester 13Workload in clock hoursContact hours: 60 h Independent study: 90 h 14 Module duration 1 semester 15Teaching and examination languageenglish 16 Bibliography Law, "Simulation Modeling and Analysis, 5th ed., McGraw Hill, 2014 
Workload in clock hours: Contact hours: 60 h Independent study: 90 h
Module duration: 1 semester
Teaching and examination language: english
Bibliography: Law, "Simulation Modeling and Analysis, 5th ed., McGraw Hill, 2014 

, Module name 43871: Simulation und Wissenschaftliches Rechnen 2 7,5 ECTS
Course / lectures: Vorlesung: Vorlesung zu Simulation und wissenschaftliches Rechnen 2 ( SWS )- Übung : Übung zu Simulation und Wissenschaftliches Rechnen 2 ( SWS )- Tutorium: Tutorium zu Simulation und Wissenschaftliches Rechnen 2 ( SWS )- Übung : Rechnerübungen zu Simulation und wissenschaftliches Rechnen 2 ( SWS )-
Lecturers: Prof. Dr. Christoph Pflaum Benjamin Mann  
Module coordinator: Prof. Dr. Christoph Pflaum
Contents: •Einführung in Mehrgitterverfahren •Theorie und Anwendung der Methode der finiten Elemente •Implementierung von Finite Elemente Verfahren •allegmeine 3-dimensionale Diskretisierungsgitter •Fluiddynamik, Finite Differenzen und Lattice Boltzmann Verfahren •Finite Elemente in der Strukturmechanik •Numerische Lösung der Maxwell'schen Gleichungen
Learning objectives and skills: Die Studierenden •lernen verschiedene numerische Verfahren zum Lösen partieller Differentialgleichungen kennen •lernen grundlegende Kenntnisse zur Implementierung der entsprechenden Algorithmen •werden in die Entwicklung von Simulationstechniken im Bereich des wissenschaftlichen Rechnens, die •Analyse und Entwicklung von Diskretisierungen für partielle Differentialgleichungen •und die Entwicklung von Software im Bereich des wissenschaftlichen Rechnens eingeführt.
Module compatibility: Wahlpflichtbereich Informatik Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Written examination (90 minutes) Tutorial achievement
Grading procedure: Written examination (100%) Tutorial achievement (0%)
Module frequency: only in summer semester 13Workload in clock hoursContact hours: 90 h 
Workload in clock hours: Contact hours: 90 h 

Module duration: 1 semester
Teaching and examination language: german
Bibliography: •Briggs, Henson, McCormick, A Multigrid Tutorial. SIAM, ISBN 0-89871-462-1. •Strang, Fix, An Analysis of the Finite Element Method. Wellesley-Cambridge Press, ISBN 0-9614088-8-X. •Axelsson, Barker, Finite Element Solution of Boundary Value Problems. Siam, ISBN 0-89871-499-0. •Braess, Finite Elemente. Springer, ISBN 3-540-61905-4. •Braess, Finite elements. Cambridge University Press, ISBN 0521011957. •Großmann, Roos, Numerik partieller Differentialgleichungen. Teubner, ISBN 3-519-02089-0. •Großmann, Roos, Numerische Behandlung partieller Differentialgleichungen. Teubner, ISBN 3-519-22089-X. •Grossmann, Roos, Stynes, Numerical treatment of partial differential equations. Springer, ISBN 978-3-540-71582-5. 

, Module name 600674: Softwarearchitektur Software architecture5 ECTS
Course / lectures: Vorlesung mit Übung: Softwarearchitektur (4 SWS ) 5 ECTS
Lecturers: Dr. Martin Jung  
Module coordinator: Dr. Martin Jung Prof. Dr. Dirk Riehle
Contents: *Modulbezeichnung* • ºDr. Martin Jung ºProf. Dr. Dirk Riehle, M.B.A. ºGrundlegende Bausteine und ihre Beziehungen ºSoftwarearchitekturbeschreibungssprachen ºSoftwarearchitekturstile und -muster ºBibliotheken, Rahmenwerke und Plattformen ºFormale sowie de-facto Industriestandards ºDie Softwarearchitekturen von Beispielsystemen ºNicht technische Kriterien in der Architektur ºWerkzeuge für Softwarearchitekten ºVorgehensmodelle der Softwarearchitektur ºArchitekturgetriebene Entwicklung ºDie Rolle und Funktion der Softwarearchitektin ºGanzheitliches Verständnis des Konzepts "Softwarearchitektur" ºBefähigung zur Bewertung, Auswahl und Konstruktion problemangemessener Architekturen ºKenntnis architekturgetriebener Entwicklungsmethodik und entsprechender Werkzeuge ºKenntnis der typischen Verantwortlichkeiten und der Methodik eines Softwarearchitekten º5 ECTS: Vorlesung + Übungen º10 ECTS: Projekt º10 ECTS: Vorlesung + Übungen º5 ECTS: mündliche Prüfung - Falls im Prüfungszeitraum des SS2021 auf Grund höherer Gewalt (z.B. Pandemie- Sonderregeln) mündliche Präsenzprüfungen nicht durchgeführt werden können, kommen folgende alternative Prüfungsformen in Frage: - mündliche Fernprüfung - elektronische Klausur 10 ECTS: 5 ECTS (50%) + Projektarbeit (50%) *Unterrichtssprache* Deutsch
Learning objectives and skills: Fachkompetenz Wissen Grundbegriffe der Softwarearchitektur kennen, sowie Beschreibungsarten und -sprachen beherrschen. Verstehen Die Architektur eines Softwaresystems erkennen, darstellen und wiedergeben. Anwenden 

Prerequisites: None
Module compatibility: Wahlpflichtbereich Informatik Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Portfolio
Grading procedure: Portfolio (100%)
Workload in clock hours: Contact hours: 60 h Independent study: 90 h
Module duration: 1 semester
Teaching and examination language: german
Bibliography: • ºBass, L., Kazman, R. , Clements, P.; Software Architecture in Practice (SEI Series in Software Engineering); 2012 ºBuschmann, F., Meunier, R., Rohnert, H., Sommerlad, Stal, M.; Pattern-Oriented Software Architecture, Vol. 1: A System of Patterns; 1996 ºFowler, M.; Patterns of Enterprise Application Architecture; 2002 


, Module name 386409: Software Architecture (PROJ 5-ECTS) Software architecture (PROJ 5-ECTS)5 ECTS
Course / lectures: Sonstige Lehrveranstaltung : Softwarearchitekturprojekt (PROJ) (2 SWS )5 ECTS
Lecturers: Prof. Dr. Dirk Riehle Dr. Martin Jung  
Module coordinator: Dr. Martin Jung Prof. Dr. Dirk Riehle
Contents: Die Architektur eines Softwaresystems beschreibt die wesentlichen Komponenten des Systems, ihre Beziehungen und Struktur, sowie das Verhalten und die Dynamik der Beziehungen und Struktur dieser Komponenten. Dieser Kurs vermittelt in einer Vorlesung zunächst die folgenden Aspekte von Softwarearchitektur: •Grundlegende Bausteine und ihre Beziehungen •Softwarearchitekturbeschreibungssprachen •Softwarearchitekturstile und -muster •Bibliotheken, Rahmenwerke und Plattformen •Formale sowie de-facto Industriestandards •Die Softwarearchitekturen von Beispielsystemen •Nicht technische Kriterien in der Architektur •Werkzeuge für Softwarearchitekten •Vorgehensmodelle der Softwarearchitektur •Architekturgetriebene Entwicklung •Die Rolle und Funktion der Softwarearchitektin
Learning objectives and skills: •Studierende erwerben ein ganzheitliches Verständnis des Konzepts "Softwarearchitektur" •Studierende erwerben die Befähigung zur Bewertung, Auswahl und Konstruktion problemangemessener Architekturen •Studierende gewinnen Kenntnis von architekturgetriebener Entwicklungsmethodik und entsprechender Werkzeuge •Studierende gewinnen Kenntnis der typischen Verantwortlichkeiten und der Methodik eines Softwarearchitekten
Prerequisites: None
Module compatibility: Wahlpflichtbereich Informatik Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Portfolio
Grading procedure: Portfolio (100%)
Module frequency: Unregelmäßig 13Workload in clock hoursContact hours: 0 h Independent study: 150 h 14 Module duration 1 semester 
Workload in clock hours: Contact hours: 0 h Independent study: 150 h
Module duration: 1 semester 

Teaching and examination language: german
Bibliography: no Bibliography information available! 

Course / lectures: Sonstige Lehrveranstaltung : Softwarearchitekturprojekt (PROJ) (2 SWS )5 ECTS Vorlesung mit Übung: Softwarearchitektur (4 SWS ) 5 ECTS
Lecturers: Prof. Dr. Dirk Riehle Dr. Martin Jung  
Module coordinator: Dr. Martin Jung Prof. Dr. Dirk Riehle
Contents: Die Architektur eines Softwaresystems beschreibt die wesentlichen Komponenten des Systems, ihre Beziehungen und Struktur, sowie das Verhalten und die Dynamik der Beziehungen und Struktur dieser Komponenten. Dieser Kurs vermittelt in einer Vorlesung zunächst die folgenden Aspekte von Softwarearchitektur: •Grundlegende Bausteine und ihre Beziehungen •Softwarearchitekturbeschreibungssprachen •Softwarearchitekturstile und -muster •Bibliotheken, Rahmenwerke und Plattformen •Formale sowie de-facto Industriestandards •Die Softwarearchitekturen von Beispielsystemen •Nicht technische Kriterien in der Architektur •Werkzeuge für Softwarearchitekten •Vorgehensmodelle der Softwarearchitektur •Architekturgetriebene Entwicklung •Die Rolle und Funktion der Softwarearchitektin
Learning objectives and skills: •Studierende erwerben ein ganzheitliches Verständnis des Konzepts "Softwarearchitektur" •Studierende erwerben die Befähigung zur Bewertung, Auswahl und Konstruktion problemangemessener Architekturen •Studierende gewinnen Kenntnis von architekturgetriebener Entwicklungsmethodik und entsprechender Werkzeuge •Studierende gewinnen Kenntnis der typischen Verantwortlichkeiten und der Methodik eines Softwarearchitekten
Prerequisites: None
Module compatibility: Wahlpflichtbereich Informatik Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Portfolio
Grading procedure: Portfolio (100%)
Module frequency: Unregelmäßig 13Workload in clock hoursContact hours: 60 h Independent study: 240 h 14 Module duration 1 semester 
Workload in clock hours: Contact hours: 60 h Independent study: 240 h
Module duration: 1 semester 

Teaching and examination language: german
Bibliography: no Bibliography information available! 

, Module name 44500: Swarm Intelligence 5 ECTS
Course / lectures: Übung : Übungen zu Swarm Intelligence (2 SWS ) 2,5 ECTS Vorlesung: Swarm Intelligence (SI), formerly Organic Computing (OC) (2 SWS )2,5 ECTS
Lecturers: Matthias Kergaßner Prof. Dr. Rolf Wanka  
Module coordinator: Prof. Dr. Rolf Wanka
Learning objectives and skills: Students learn advanced concepts of the current topic of swarm intelligence and how they can be successfully applied to solve continuous and discrete optimization problems and to data analysis. For this purpose, they know concrete details such as terms, definitions, facts, regularities and theories and learn how to apply the concepts to concrete problems, how to adjust the methods to the use case and how to analyze the computed solutions.
Prerequisites: None
Module compatibility: Wahlpflichtbereich Informatik Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Written examination (90 minutes)
Grading procedure: Written examination (100%)
Workload in clock hours: Contact hours: 60 h Independent study: 90 h
Module duration: 1 semester
Teaching and examination language: english
Bibliography: •Ch. Müller-Schloer, Ch. von der Malsburg, R. P. Würt. Organic Computing. Informatik-Spektrum, Band 27, Nummer 4, S. 332-336. 


, Module name 93145: The AMOS Project (PO Role, VUE 5 ECTS) The AMOS project (PO role)5 ECTS
Course / lectures: Vorlesung: The AMOS Project (VL) (2 SWS ) -
Lecturers: Prof. Dr. Dirk Riehle  
Module coordinator: Prof. Dr. Dirk Riehle
Contents: This course teaches agile methods (Scrum and XP) and open source tools using a single semester-long project. Topics covered are: •Agile methods and related software development processes •Scrum roles, process practices, including product and engineering management •Technical practices like refactoring, continuous integration, and test-driven development •Principles and best practices of open source software development The project is a software development project in which each student team works with an industry partner who provides the idea for the project. This is a practical hands-on experience. Students can play one of two primary roles: •Product owner. In this function, a student defines, prioritizes, communicates, and reviews requirements. The total effort adds up to 5 ECTS. •Software developer. In this function, a student estimates their effort for requirements and implements them. The total effort adds up to 10 ECTS. Students will be organized into teams of 7-8 people, combining product owners with software developers. An industry partner will provide requirements to be worked out in detail by the product owners and to be realized by the software developers. The available projects will be presented in the run-up to the course. Class consists of a 90min lecture followed by a 90min team meeting. Rooms and times for team meetings are assigned at the beginning of the semester. You must be able to regularly participate in the team meetings. If you can't, do not sign up for this course. Students choosing the software developer role must have prior software development experience. Sign-up and further course information are available at https:// amos.uni1.de - please sign up for the course on StudOn (available through previous link) as soon as possible. The course information will also tell you how the course will be held (online or in person).
Learning objectives and skills: •Students learn about software products and software development in an industry context •Students learn about agile methods, in particular, Scrum and Extreme Programming •Students gain practical hands-on experience with a Scrum process and XP technical practices 

Prerequisites: None
Module compatibility: Wahlpflichtbereich Informatik Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Variable
Grading procedure: Variable (100%)
Module frequency: every semester 13Workload in clock hoursContact hours: 60 h Independent study: 90 h 14 Module duration 1 semester 15Teaching and examination languageenglish 16 Bibliography no Bibliography information available! 
Workload in clock hours: Contact hours: 60 h Independent study: 90 h
Module duration: 1 semester
Teaching and examination language: english
Bibliography: no Bibliography information available! 

, Module name 93143: The AMOS Project (SD Role, VUE 10 ECTS) The AMOS project (SD role)10 ECTS
Course / lectures: Vorlesung: The AMOS Project (VL) (2 SWS ) -
Lecturers: Prof. Dr. Dirk Riehle  
Module coordinator: Prof. Dr. Dirk Riehle
Contents: This course teaches agile methods (Scrum and XP) and open source tools using a single semester-long project. Topics covered are: •Agile methods and related software development processes •Scrum roles, process practices, including product and engineering management •Technical practices like refactoring, continuous integration, and test-driven development •Principles and best practices of open source software development The project is a software development project in which each student team works with an industry partner who provides the idea for the project. This is a practical hands-on experience. Students can play one of two primary roles: •Product owner. In this function, a student defines, prioritizes, communicates, and reviews requirements. The total effort adds up to 5 ECTS. •Software developer. In this function, a student estimates their effort for requirements and implements them. The total effort adds up to 10 ECTS. Students will be organized into teams of 7-8 people, combining product owners with software developers. An industry partner will provide requirements to be worked out in detail by the product owners and to be realized by the software developers. The available projects will be presented in the run-up to the course. Class consists of a 90min lecture followed by a 90min team meeting. Rooms and times for team meetings are assigned at the beginning of the semester. You must be able to regularly participate in the team meetings. If you can't, do not sign up for this course. Students choosing the software developer role must have prior software development experience. Sign-up and further course information are available at https:// amos.uni1.de - please sign up for the course on StudOn (available through previous link) as soon as possible. The course information will also tell you how the course will be held (online or in person).
Learning objectives and skills: •Students learn about software products and software development in an industry context •Students learn about agile methods, in particular, Scrum and Extreme Programming •Students gain practical hands-on experience with a Scrum process and XP technical practices 

Prerequisites: For software developer role: OSS-ADAP
Module compatibility: Wahlpflichtbereich Informatik Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Variable
Grading procedure: Variable (100%)
Module frequency: every semester 13Workload in clock hoursContact hours: 60 h Independent study: 240 h 14 Module duration 1 semester 15Teaching and examination languageenglish 16 Bibliography no Bibliography information available! 
Workload in clock hours: Contact hours: 60 h Independent study: 240 h
Module duration: 1 semester
Teaching and examination language: english
Bibliography: no Bibliography information available! 

, Module name 93175: Visualization no english module name available for this module5 ECTS
Course / lectures: Übung : Tutorials to Visualization (2 SWS ) 2,5 ECTS Vorlesung: Visualization (2 SWS ) 2,5 ECTS
Lecturers: Prof. Dr.-Ing. Tobias Günther Xingze Tian  
Module coordinator: Prof. Dr.-Ing. Tobias Günther
Contents: An old English adage says "a picture is worth a 1,000 words", meaning that complex ideas are often easier to convey visually. This lecture is about the craft of creating informative images from data. Starting from the basics of the human visual perception, we will learn how visualizations are designed for explorative, communicative or confirmative purposes. We will see how data can be classified, allowing us to develop algorithms that apply to a wide range of application domains. The lecture covers the following topics: •data abstraction (data types, data set types, attribute types), •perception and mapping (marks and channels, effectiveness, pre- attentive vision, color maps), •task abstraction and validation (actions and targets), •information visualization tools (HTML, CSS, JavaScript, React, D3), •information visualization methods (tabular data, networks, trees), •scientific visualization methods (volume rendering and particle visualization), •scientific visualization tools (VTK, ParaView), •view manipulation (navigation, selection, multiple views), •data reduction (filtering, agreggation, focus and context), •lies in visualization (human biases and rules of thumb), •applications (deep learning, medical visualization, optimization) The lecture is accompanied by exercises. Theoretical exercises concentrate on the classification of data and the design and analysis of visualizations, while programming exercises using web-based technologies give examples of their implementation.
Learning objectives and skills: Students learn to: •use perceptual basics to select appropriate visualization methods •explain the steps of the visualization pipeline •calculate direct and indirect volume visualizations to given data •explain and apply interaction concepts •perform a data and requirement analysis for a given problem •explain visualization techniques for scientific and abstract data
Prerequisites: None

Module compatibility: Wahlpflichtbereich Informatik Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Variable Written exam in presence (90 minutes)
Grading procedure: Variable (100%)
Module frequency: only in winter semester 13Workload in clock hoursContact hours: 60 h Independent study: 90 h 14 Module duration 1 semester 15Teaching and examination languageenglish 16 Bibliography Visualization Analysis and Design, Tamara Munzner, 2014. 
Workload in clock hours: Contact hours: 60 h Independent study: 90 h
Module duration: 1 semester
Teaching and examination language: english
Bibliography: Visualization Analysis and Design, Tamara Munzner, 2014. 


, Module name 43230: Functional Analysis for Engineers Functional analysis for engineers5 ECTS
Course / lectures: Übung : Recitation of Functional Analysis for Engineers (2 SWS )2,5 ECTS Vorlesung mit Übung: Functional Analysis for Engineers (2 SWS )2,5 ECTS
Lecturers: Phillip Lino Rall Prof. Dr. Christoph Pflaum  
Module coordinator: Prof. Dr. Christoph Pflaum
Contents: •vector spaces, norms, principal axis theorem •Banach spaces, Hilbert spaces •Sobolev spaces •theory of elliptic differential equations •Fourier transformation •distributions
Learning objectives and skills: Students learn advanced methods in linear algebra and basic concepts of functional analysis. Furthermore, students learn applications in solving partial differential equations. The course teaches abstract mathematical structures.
Prerequisites: None
Module compatibility: Wahlpflichtbereich Angewandte Mathematik Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Tutorial achievement Written examination (60 minutes)
Grading procedure: Tutorial achievement (0%) Written examination (100%)
Workload in clock hours: Contact hours: 60 h Independent study: 90 h
Module duration: 1 semester
Teaching and examination language: english
Bibliography: •Lehrbuch: Dobrowolski, Angewandte Funktionalanalysis, Springer 2006. 

, Module name 44060: Optimierung für Ingenieure mit Praktikum Optimisation for engineers (with laboratory)7,5 ECTS
Course / lectures: Übung : Programming Discussion for Optimization for Engineers (1 SWS )2,5 ECTS Vorlesung mit Übung: Optimization for Engineers (3 SWS )5 ECTS
Lecturers: Dr. Johannes Hild  
Module coordinator: Dr. Johannes Hild
Contents: Introduction to continuous optimization problems and methods with and without constraints •Classification of problem types •Optimality conditions and termination criterions •Descent directions and line search methods •Convergence analysis Unconstrained optimization •Steepest descent and conjugate gradient •Newton-type methods •Nonlinear Least Squares Constrained optimization •Projection methods •Trust Region •Barrier and penalty methods •Interior point methods Noisy Functions •Simplex Gradient •Implicit Filtering Programming Laboratory •Implementation of optimization algorithms •Algorithmic optimization of test problems •Solving a benchmark problem
Learning objectives and skills: Competences Know •Students list requirements, strengths and weaknesses of common optimization methods. •Students recognize crucial components in existence and convergence proofs in the context of minimizing sequences. •Students identify optimization routines written in a programming language. Understand •Students explain the different components of optimization methods. •Students describe the relationship between requirements and conclusions of existence and convergence theorems in the context of minimizing sequences. Apply 

Module compatibility: Wahlpflichtbereich Angewandte Mathematik Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Written examination Written Exam Open Book Online - 60 Minutes Tutorial achievement Online Multiple Choice Test based on Programming Laboratory - 20 Minutes 5 ECTS: Written exam open book online based on the content of the lecture. 2.5 ECTS: Multiple choice online test based on the content of the programming laboratory. Both examinations can be done independently from each other.
Grading procedure: Written examination (100%) Tutorial achievement (0%) 

Workload in clock hours: Contact hours: 60 h Independent study: 165 h
Module duration: 1 semester
Teaching and examination language: english
Bibliography: Nocedal, Jorge and Wright, Stephen J.: Numerical Optimization. Springer Serie in Operations Research, 2006. Kelley, C. T.: Iterative Methods for Optimization. Frontiers in Applied Mathematics 18, SIAM Philadelphia 1999; Polak, E.: Optimization. Algorithms and Consistent Approximations.Applied Mathematical Sciences, Volume 124, Springer- Verlag New York, 1997. Jarre, F.:Optimierung, Springer 2003; 


, Module name 65900: Advanced discretization techniques 10 ECTS
Course / lectures: Vorlesung: Advanced Discretization Techniques (4 SWS )10 ECTS
Lecturers:  
Module coordinator: Prof. Dr. Eberhard Bänsch
Contents: conforming and non-conforming finite element methods saddle point problems in Hilbert spaces mixed finite element methods for saddle point problems, in particular for Darcy and Stokes Streamline-Upwind Petrov-Galerkin (SUPG) and discontinuous Galerkin (dG) finite element methods (FEM) for convection dominated problems Finite Volume (FV) methods and their relation to FEM a posteriori error control and adaptive methods
Learning objectives and skills: Students have a discriminating understanding, both theoretically and computationally of FE as well as FV methods for the numerical solution of partial differential equations (pde) (in particular of saddle point problems), are capable of developing problem dependent FE or FV methods and judge on their properties regarding stability and effectiveness, are familiar with a broad spectrum of pde problems and their computational solutions, are capable of designing algorithms for adaptive mesh control.
Prerequisites: Recommended: Introduction to numerical methods for pdes, functional analysis
Module compatibility: Wahlbereich Mathematik Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Oral
Grading procedure: Oral (100%)
Workload in clock hours: Contact hours: 75 h Independent study: 225 h
Module duration: 1 semester
Teaching and examination language: english
Bibliography: •A. Ern, J.?L. Guermond: Theory and Practice of Finite Elements •A. Quarteroni & A. Valli: Numerical Approximation of Partial Differential Equations •P. Knabner & L. Angermann: Numerical Methods for Elliptic and Parabolic Differential Equations, Springer 


, Module name 352989: Algorithms of Numerical Linear Algebra Algorithms of numerical linear algebra7,5 ECTS
Course / lectures: Übung : Exercises in Algorithms of Numerical Linear Algebra (2 SWS )2,5 ECTS Vorlesung mit Übung: Algorithms of Numerical Linear Algebra (4 SWS )5 ECTS
Lecturers: Benjamin Mann Prof. Dr. Ulrich Rüde  
Module coordinator: Prof. Dr. Ulrich Rüde
Contents: •Vectors •Matrices •Vector Spaces •Matrix Factorizations •Orthogonalisation •Singular Value Decomposition •Eigenvalues •Krylov Space Methods •Arnoldi Method •Lanczos Method •Multigrid
Learning objectives and skills: Students apply solid theoretical knowledge for the foundations of modern solution techniques in Computational Engineering.
Integration in curriculum: semester: 3;1
Module compatibility: Wahlbereich Mathematik Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Written examination
Grading procedure: Written examination (100%)
Module frequency: only in winter semester 13Workload in clock hoursContact hours: 60 h Independent study: 165 h 14 Module duration 1 semester 15Teaching and examination languageenglish 16 Bibliography Trefethen, Bau: Numerical Linear Algebra, SIAM 1997 
Workload in clock hours: Contact hours: 60 h Independent study: 165 h
Module duration: 1 semester
Teaching and examination language: english
Bibliography: Trefethen, Bau: Numerical Linear Algebra, SIAM 1997 


, Module name 621649: Advanced Optical Communication Systems Advanced optical communication systems5 ECTS
Module coordinator: Prof. Dr.-Ing. Bernhard Schmauß
Contents: 6
Learning objectives and skills: Students - gain detailed Knowledge on concepts and structure of various optical transmission systems. - are able to analyze, to compare and evaluate the quality of optical data signals with respect to different system concepts. - are able to develop and to optimize link designes of optical transmission systems. - are abke to systematically improve the performance of optical links taking into account state of the art and leading edge scientific results.
Integration in curriculum: semester: 1
Module compatibility: Computational Optics Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Portfolio
Grading procedure: Portfolio (100%)
Workload in clock hours: Contact hours: 60 h Independent study: 90 h
Module duration: 1 semester
Teaching and examination language: english
Bibliography: Agrawal, G.P.: Fiber-Optic Communication Systems, John Wiley & Sons, 1997 Agrawal, G.P.: Nonlinear Fiber Optics, John Wiley & Sons, 3. Auflage, 2001. 


, Module name 94930: Engineering of Solid State Lasers Engineering of solid state lasers2,5 ECTS
Course / lectures: Vorlesung: Engineering of Solid State Lasers (2 SWS )2,5 ECTS
Lecturers: Dr.-Ing. Martin Hohmann  
Module coordinator: Prof. Dr.-Ing. Michael Schmidt
Contents: The targeted audience is master level students who are interested in expanding their theoretical and practical knowledge in the field of solid state laser engineering. Introduction to physical phenomena used in development of modern solid state lasers Practical approaches used in design of solid state lasers Introduction to modeling and simulation of the lasing process Modeling of basic solid state laser performance using a commercial software package Practical familiarization with various optical, opto-mechnical, and opto- electrical components used in solid state laser
Learning objectives and skills: The students gain the following competences: Setting up basic modeling of a solid state laser using ASLD software Be able to apply modeling for evaluation of performance of a basic laser system Apply basic optimization of the laser system model Identification of an appropriate laser system for a given application Performing basic characterization of laser beam output parameters Enhanced understanding of the laser physics Familiarization with modern design approaches used in solid state laser engineering Improved understanding of linear and nonlinear effects relevant for linear and nonlinear laser beam propagation;
Prerequisites: None
Integration in curriculum: semester: 1
Module compatibility: Computational Optics Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Portfolio
Grading procedure: Portfolio (100%)
Module frequency: only in summer semester 13Workload in clock hoursContact hours: 30 h Independent study: 45 h 14 Module duration 1 semester 15Teaching and examination languageenglish 16 Bibliography no Bibliography information available! 
Workload in clock hours: Contact hours: 30 h Independent study: 45 h
Module duration: 1 semester
Teaching and examination language: english
Bibliography: no Bibliography information available! 

, Module name 763337: Laser Tissue Interaction Laser tissue interaction5 ECTS
Module coordinator: Dr.-Ing. Florian Klämpfl
Contents: 6
Learning objectives and skills: The students can explain the basic properties of light using waveoptics The students can explain scattering mechanisms of light The students can explain the mechanisms of laser/tissue interaction The students can explain different methods for the modelling of light propagation in tissue The students can explain the RTE and apply MC for simulations of photon transport The students can explain and apply the basic procedures to determine the optical properties of tissue The students can explain the use and production of optical phantoms The students can explain selected diagnostic and therapeutic applications of light and lasers
Prerequisites: None
Integration in curriculum: semester: 1
Module compatibility: Computational Optics Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Written examination
Grading procedure: Written examination (100%)
Module frequency: only in summer semester 13Workload in clock hoursContact hours: 60 h Independent study: 90 h 14 Module duration 1 semester 15Teaching and examination languageenglish 16 Bibliography no Bibliography information available! 
Workload in clock hours: Contact hours: 60 h Independent study: 90 h
Module duration: 1 semester
Teaching and examination language: english
Bibliography: no Bibliography information available! 

, Module name 267499: Linear and non-linear fibre optics 5 ECTS
Course / lectures: Übung : Linear and non-linear fibre optics: Exercise (2 SWS )- Vorlesung: Linear and non-linear fibre optics (2 SWS ) 5 ECTS
Lecturers: Lisa-Sophie Härteis Prof. Dr.-Ing. Bernhard Schmauß  
Module coordinator: Prof. Dr.-Ing. Bernhard Schmauß
Contents: Optical data transmission systems are the enabler for our modern communication networks. Since the first systems have been installed, the transmission capacity as well as the transmission distance has been increased dramatically. The migration from point-to-point transmission systems to complex optical networks is still in progress. The fast evolution of optical transmission technology is stimulated by innovations in the field of the system key components. The lectures concentrate on the physical effects and properties of key components like semiconductor lasers, optical modulators, optical fibers, optical amplifiers and detector diodes. Especially also the nonlinear effects of the transmission fiber are discussed. The main focus is on the effects and characteristics which are important to achieve a certain system performance. The influence of component parameters on system performance is presented in examples related to installed systems and systems that are actually in development. The exercises partly use a numerical simulation tool to analyze the component influence on system performance.
Learning objectives and skills: Students •Understand structure and operation of components of optical communication systems •Rate the optical properties of components and evaluate the influence of operational parameters on system performance •Are able to analyze the influence of linear and nonlinear fiber effects on optical signals and system performance •Can make use of system simulation tools to engineer optical links
Integration in curriculum: semester: 1
Module compatibility: Computational Optics Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Portfolio
Grading procedure: Portfolio (100%)
Module frequency: only in summer semester 13Workload in clock hoursContact hours: 60 h 
Workload in clock hours: Contact hours: 60 h 

Module duration: 1 semester
Teaching and examination language: english
Bibliography: Agrawal, G.P.: Fiber Optic Communication Systems, Willey, New York, 1992 Kaminow, I, Li, T.: Optical Fiber Telecommunications IVA, Academic Press, 2002 Kaminow, I, Li, T., Willner, A.: Optical Fiber Telecommunications VA, Academic Press, 2008 

, Module name 92400: Optische Übertragungstechnik Optical communication systems5 ECTS
Course / lectures: Übung : Optische Übertragungstechnik Übung (2 SWS )- Vorlesung: Optische Übertragungstechnik (2 SWS ) 5 ECTS
Lecturers: Esther Renner Benedikt Beck Prof. Dr.-Ing. Bernhard Schmauß  
Module coordinator: Prof. Dr.-Ing. Bernhard Schmauß
Contents: Kommerzielle Optische Kommunikationssysteme erreichen pro Faser Übertragungskapazitäten von mehreren Tbit/s. Im Labor wurden mehr als 100Tbit/s nachgewiesen. Die Realisierung derartiger Systeme setzt die Beherrschung verschiedenster Techniken der optischen Übertragungstechnik voraus. In der Vorlesung werden Techniken des Zeitbereichs - (TDM) und Wellenlängenmultiplex (WDM), aber besonders auch der Auslegung der Übertragungsstrecke (Link Design) auf der Basis entsprechender physikalischer und signaltheoretischer Grundlagen behandelt und vertieft. Dabei werden Verfahren besprochen, die sicherstellen, dass sowohl die Signalverzerrungen durch lineare und nichtlineare Fasereffekte als auch die Akkumulation des Verstärkerrauschens begrenzt bleiben. Es wird ausführlich die Systemoptimierung hinsichtlich des optischen Signal-Rausch-Verhältnisses (OSNR) diskutiert sowie auf Techniken des Dispersions- und Nichtlinearitätsmanagements (z.B. Solitonenübertragung) eingegangen. Hierbei wird dem Themenkomplex einer optimalen Streckenauslegung besonders eingehend behandelt. In der Folge werden verschiedene, gebräuchliche Modulationsverfahren einschließlich kohärenter Übertragungsverfahren behandelt, die in neueren Systemen eingesetzt und in experimentellen Systemen getestet werden. Eine Besprechung optischer Verfahren zur Signalregeneration bildet die Brücke zu aktuellen eigenen Forschungsarbeiten. Die vermittelten Grundlagen werden in der Übung zur Vorlesung durch praxisnahe und anschauliche Simulationsbeispiele vertieft.
Learning objectives and skills: Die Studierenden •besitzen spezialisiertes und vertieftes Wissen über die Konzeption und Struktur verschiedener optischer Übertragungssysteme. •können die Qualität optischer Datensignale im Kontext verschiedener Systemkonzepte vergleichen und bewerten •sind in der Lage Streckenauslegungen zu entwickeln und zu optimieren. •besitzen methodische Kenntnis zur Bestimmung und Verbesserung der Leistungsfähigkeit optischer Übertragungsstrecken unter Einbeziehung aktueller wissenschaftlicher Ergebnisse. 

Prerequisites: Komponenten optischer Kommunikationssysteme hilfreich aber nicht obligatorisch
Integration in curriculum: semester: 1
Module compatibility: Computational Optics Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Written or oral
Grading procedure: Written or oral (100%)
Workload in clock hours: Contact hours: 60 h Independent study: 90 h
Module duration: 1 semester
Teaching and examination language: german
Bibliography: Agrawal, G.P.: Fiber-Optic Communication Systems, John Wiley & Sons, 1997 Agrawal, G.P.: Nonlinear Fiber Optics, John Wiley & Sons, 3. Auflage, 2001 Kaminow, I, Koch, T.: Optical Fiber Telecommunications IVA, Academic Press, 2002 Skriptum zur Vorlesung Kaminow, I, Li, T., Willner,A.: Optical Fiber Telecommunications VA, Academic Press, 2008 

, Module name 96350: Photonik 2 Photonics 25 ECTS
Course / lectures: Vorlesung: Photonik 2 (2 SWS ) 5 ECTS Übung : Photonik 2 Übung (2 SWS ) -
Lecturers: Prof. Dr.-Ing. Bernhard Schmauß Max Köppel  
Module coordinator: Prof. Dr.-Ing. Bernhard Schmauß
Contents: Aufbauend auf "Photonik 1" werden fortgeschrittene Verfahren der Laser-Messtechnik, komplexe Laser-Systeme sowie deren technische Anwendungen besprochen. In einem ersten Themenkomplex werden Messverfahren für praktisch wichtige Laserkenngrößen wie z.B. Laserstrahlleistung, Polarisationszustand und Spektrum der Lichtwelle behandelt. Anschließend wird die räumliche und zeitliche Kohärenz eines Laserstrahls diskutiert. Dies ist die Grundlage für interferometrische Messverfahren zur Bestimmung von Lichtwellenlängen und hochaufgelösten optischen Spektren oder auch für mechanische Größen wie Weg und Winkelbeschleunigung. Rauschquellen in photonischen Systemen werden beschrieben und diskutiert. Wichtige Maßnahmen zur Reduktion von Rauschen in optischen Aufbauten werden vorgestellt. Optische Verstärker auf Glasfaserbasis, sog. Faserverstärker und darauf aufbauende Faserlaser werden in einem eigenen Kapitel vorgestellt. Faser-Bragg-Gitter als wichtige Bestandteile eines Faserlasers werden in Herstellung und Anwendung. U.a. in der Messtechnik diskutiert. Zeitlich dynamische Vorgänge im Laser, beschrieben durch die so genannten Ratengleichungen und deren Lösung, werden ausführlich behandelt. Begriffe wie Spiking oder Relaxationsschwingungen und Verfahren wie Mode-Locking oder Q-Switching werden besprochen. Daraus wird die Funktion und die technische Anwendung von Lasern zur Erzeugung von energiereichen Lichtimpulsen bis hin zu sogenannten Femtosekundenlasern abgeleitet. Das Themengebiet der optischen Frequenzumsetzung wird mit einem Kapitel zur linearen und nichtlinearen Optik eingeleitet. Technische Anwendungen wie optische Frequenzverdoppelung, Erzeugung von UV-Licht durch Frequenzvervielfachung werden darauf aufbauend besprochen. Ein Kapitel zum Raman-Effekt und zur stimulierten Brillouin-Streuung sowie deren Anwendung schließt den Inhalt ab. Methoden und Systeme aus "Photonik 2" werden eingesetzt z.B. für die Präzisionsmesstechnik, in der industriellen Materialbearbeitung, in der Bioanalytik, für die Medizintechnik, in Geräten der Unterhaltungselektronik oder in der optischen Nachrichtentechnik.
Learning objectives and skills: Die Studierenden •besitzen spezialisiertes und vertieftes Wissen über Laser und den in den Inhalten beschriebenen photonischen Systemen und Methoden. 

Integration in curriculum: semester: 1
Module compatibility: Computational Optics Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Written or oral
Grading procedure: Written or oral (100%)
Module frequency: only in summer semester 13Workload in clock hoursContact hours: 60 h Independent study: 90 h 14 Module duration 1 semester 15Teaching and examination languagegerman 16 BibliographyEichler, J., Eichler, H.J: Laser. Springer Verlag, Berlin 2006. Reider, G.A.: Photonik. 2. Auflage, Springer Verlag, Berlin 2005. Bergmann, Schäfer: Lehrbuch der Experimentalphysik, Bd.3: Optik. DeGruyter 1993. Demtröder, W: Laserspektroskopie. Springer Verlag, Berlin 2000. 
Workload in clock hours: Contact hours: 60 h Independent study: 90 h
Module duration: 1 semester
Teaching and examination language: german
Bibliography: Eichler, J., Eichler, H.J: Laser. Springer Verlag, Berlin 2006. Reider, G.A.: Photonik. 2. Auflage, Springer Verlag, Berlin 2005. Bergmann, Schäfer: Lehrbuch der Experimentalphysik, Bd.3: Optik. DeGruyter 1993. Demtröder, W: Laserspektroskopie. Springer Verlag, Berlin 2000. 


, Module name 96850: Convex Optimization in Communications and Signal Processing Convex optimization in communications and signal processing5 ECTS
Course / lectures: Übung : Tutorial for Convex Optimization in Communications and Signal Processing (1 SWS )- Vorlesung: Convex Optimization in Communications and Signal Processing (3 SWS )5 ECTS
Lecturers: Adela Vagollari Prof. Dr. Wolfgang Gerstacker  
Module coordinator: Prof. Dr. Wolfgang Gerstacker
Contents: Convex optimization problems are a special class of mathematical problems which arise in a variety of practical applications. In this course we focus on the theory of convex optimization, corresponding algorithms, and applications in communications and signal processing (e.g. statistical estimation, allocation of resources in communications networks, and filter design). Special attention is paid to recognizing and formulating convex optimization problems and their efficient solution. The course is based on the textbook "Convex Optimization" by Boyd and Vandenberghe and includes a tutorial in which many examples and exercises are discussed.
Learning objectives and skills: Students •characterize convex sets and functions, •recognize, describe and classify convex optimization problems, •determine the solution of convex optimization problems via the dual function and the KKT conditions, •apply numerical algorithms in order to solve convex optimization problems, •apply methods of convex optimization to different problems in communications and signal processing
Prerequisites: Signals and Systems, Communications
Integration in curriculum: semester: 1
Module compatibility: Information Technology - DSP Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Written or oral
Grading procedure: Written or oral (100%)
Module frequency: only in winter semester 13Workload in clock hoursContact hours: 60 h Independent study: 90 h 14 Module duration 1 semester 15Teaching and examination languageenglish 
Workload in clock hours: Contact hours: 60 h Independent study: 90 h
Module duration: 1 semester
Teaching and examination language: english 

Bibliography: Boyd, Steven ; Vandenberghe, Lieven: Convex Optimization. Cambridge, UK : Cambridge University Press, 2004 

, Module name 93500: Digitale Signalverarbeitung Digital signal processing5 ECTS
Course / lectures: Übung : Übung zu Digitale Signalverarbeitung (1 SWS )- Vorlesung: Digitale Signalverarbeitung (3 SWS ) 5 ECTS Tutorium: Tutorium zu Digitale Signalverarbeitung (1 SWS )-
Lecturers: Dr.-Ing. Heinrich Löllmann Prof. Dr.-Ing. Walter Kellermann  
Module coordinator: Prof. Dr.-Ing. Walter Kellermann
Contents: The course assumes familiarity with basic theory of discrete-time deterministic signals and linear systems and extends this by a discussion of the properties of idealized and causal, realizable systems (e.g., lowpass, Hilbert transformer) and corresponding representations in the time domain, frequency domain, and z-domain. Thereupon, design methods for recursive and nonrecursive digital filters are discussed. Recursive systems with prescribed frequency-domain properties are obtained by using design methods for Butterworth filters, Chebyshev filters, and elliptic filters borrowed from analog filter design. Impulse-invariant transform and the Prony-method are representatives of the considered designs with prescribed time-domain behaviour.For nonrecursive systems, we consider the Fourier approximation in its original and its modified form introducing a broad selection of windowing functions. Moreover, the equiripple approximation is introduced based on the Remez-exchange algorithm. Another section is dedicated to the Discrete Fourier Transform (DFT) and the algorithms for its fast realizations ('Fast Fourier Transform'). As related transforms we introduce cosine and sine transforms. This is followed by a section on nonparametric spectrum estimation. Multirate systems and their efficient realization as polyphase structures form the basis for describing analysis/synthesis filter banks and discussing their applications. The last section is dedicated to investigating effects of finite wordlength as they are unavoidable in any realization of digital signal processing systems. A corresponding lab course on DSP will be offered in the winter term.
Learning objectives and skills: Die Studierenden •analysieren zeitdiskrete lineare zeitinvariante Systeme durch Ermittlung der beschreibenden Funktionen und Parameter •wenden grundlegende Verfahren zum Entwurf zeitdiskreter Systeme an und evaluieren deren Leistungsfähigkeit •verstehen die Unterschiede verschiedener Methoden zur Spektralanalyse und können damit vorgegebene Signale analysieren •verstehen die Beschreibungsmethoden von Multiratensystemen und wenden diese zur Beschreibung von Filterbänken an 

Integration in curriculum: semester: 1
Module compatibility: Information Technology - DSP Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013 Information Technology - DT Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013 Medical Engineering Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Written examination (90 minutes)
Grading procedure: Written examination (100%)
Workload in clock hours: Contact hours: 60 h Independent study: 90 h
Module duration: 1 semester
Teaching and examination language: english
Bibliography: *Empfohlene Literatur/ Recommended Reading:* *1.* J.G. Proakis, D.G. Manolakis: Digital Signal Processing. 4th edition. Prentice Hall, Englewood Cliffs, NJ, 2007. *2.* A.V. Oppenheim, R.V. Schafer: Digital Signal Processing. Prentice Hall, Englewood Cliffs, NJ, 1975. *3.* K.D. Kammeyer, K. Kroschel: Digitale Signalverarbeitung: Filterung und Spektralanalyse mit MATLAB®-Übungen . 8. Aufl. Teubner, Stuttgart, 2012 

, Module name 96310: Image and Video Compression Image and video compression5 ECTS
Course / lectures: Übung : Übung Image and Video Compression (1 SWS )- Vorlesung: Image and Video Compression (IVC) ( SWS )-
Lecturers: Fabian Brand Prof. Dr.-Ing. Andre Kaup  
Module coordinator: Prof. Dr.-Ing. Andre Kaup
Contents: *Multi-Dimensional Sampling* Sampling theorem revisited, 2D sampling, spatiotemporal sampling, motion in 3D sampling *Entropy and Lossless Coding* Entropy and information, variable length codes, Huffman coding, unary coding, Golomb coding, arithmetic coding *Statistical Dependency* Joint entropy and statistical dependency, run-length coding, fax compression standards *Quantization* Rate distortion theory, scalar quantization, Lloyd-Max quantization, entropy coded scalar quantization, embedded quantization, adaptive quantization, vector quantization *Predictive Coding* Lossless predictive coding, optimum 2D linear prediction, JPEG-LS lossless compression standard, differential pulse code modulation (DPCM) *Transform Coding* Principle of transform coding, orthonormal transforms, Karhunen-Loève transform, discrete cosine transform, bit allocation, compression artifacts *Subband Coding* Principle of subband coding, perfect reconstruction property, discrete wavelet transform, bit allocation for subband coding *Visual Perception and Color* Anatomy of the human eye, sensitivity of the human eye, color spaces, color sampling formats *Image Coding Standards* JPEG and JPEG2000 *Interframe Coding* Interframe prediction, motion compensated prediction, motion estimation, motion compensated hybrid coding *Video Coding Standards* H.261, H.263, MPEG-1, MPEG-2 / H.262, H.264 / MPEG-4 AVC, H.265 / MPEG-H HEVC
Learning objectives and skills: Die Studierenden •veranschaulichen die mehrdimensionale Abtastung und den Einfluss darauf durch Bewegung im Videosignal •unterscheiden und bewerten verschiedene Verfahren zur verlustfreien Codierung von Bild- und Videodaten 

Integration in curriculum: semester: 1
Module compatibility: Information Technology - DSP Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Written or oral
Grading procedure: Written or oral (100%) 

Workload in clock hours: Contact hours: 60 h Independent study: 90 h
Module duration: 1 semester
Teaching and examination language: english
Bibliography: J.-R. Ohm, Multimedia Communications Technology", Berlin: Springer- Verlag, 2004 

, Module name 447324: Image, Video, and Multidimensional Signal Processing Image, video and multidimensional signal processing5 ECTS
Module coordinator: 5
Contents: no content description available!
Learning objectives and skills: no learning objectives and skills description available!
Prerequisites: None
Integration in curriculum: semester: 1
Module compatibility: Information Technology - DSP Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Oral
Grading procedure: Oral (100%)
Workload in clock hours: Contact hours: ?? h (keine Angaben zum Arbeitsaufwand in Präsenzzeit hinterlegt) Independent study: ?? h (keine Angaben zum Arbeitsaufwand im Eigenstudium hinterlegt)
Module duration: ?? semester (no information for Module duration available)
Teaching and examination language: german
Bibliography: no Bibliography information available! 

, Module name 96312: Bild-, Video- und mehrdimensionale Signalverarbeitung Image, video and multidimensional signal processing5 ECTS
Course / lectures: Vorlesung: Bild-, Video- und mehrdimensionale Signalverarbeitung (2 SWS )5 ECTS
Lecturers: Prof. Dr.-Ing. Andre Kaup  
Module coordinator: Prof. Dr.-Ing. Andre Kaup
Contents: *Punktoperationen* Histogrammausgleich, Gamma-Korrektur *Binäroperationen* Morphologische Filter, Erosion, Dilatation, Opening, Closing *Farbräume* Trichromat, RGB- Farbraum, HSV-Farbraum *Mehrdimensionale Signale und Systeme* Theorie mehrdimensionaler Signale und Systeme, Impulsantwort, lineare Bildfilterung, Leistungsspektrum, Wiener Filter *Interpolation von Bildsignalen* Bilineare Interpolation, Bicubische Interpolation, Spline Interpolation *Merkmalsdetektion in Bildern* Bildmerkmale, Kantendetektion, Hough Transformation, Harris Ecken Detektor, Texturmerkmale, Grauwertematrix *Skalierungsraumdarstellung* LoG, DoG, SIFT, SURF *Bildabgleich* Projektive Abbildungen, Blockabgleich, Optischer Fluss, Merkmalsbasierter Abgleich mittels SIFT und SURF, RANSAC *Bildsegmentierung* Amplituden Schwellenwertermittlung, K-Means Clustering, Bayes Klassifikation, Regionen-basierte Segmentierung, kombinierte Segmentierung und Bewegungsschätzung, zeitliche Segmentierung von Videos *Bildverarbeitung im Transformationsbereich* Unitäre Transformation, Karhunen-Loeve Transformation, separable Transformationen, Haar und Hadamard Transformation, DFT, DCT *Content:* *Point operations* Histogram equalization, gamma correction *Binary operations* Morphological filters, erosion, dilation, opening, closing *Color spaces* Trichromacy, red-green-blue color spaces, color representation using hue, saturation and value of intensity *Multidimensional signals and systems* Theory of multidimensional signals and systems, impulse response, linear image filtering, power spectrum, Wiener filtering *Interpolation of image signals* Bi-linear interpolation, bi-cubic interpolation, spline interpolation *Image feature detection* 

Learning objectives and skills: Die Studierenden •verstehen Punktoperationen an Bilddaten und Gamma- Korrektur •testen die Wirkung von Rangordnungs- und Medianfiltern an Bilddaten •unterscheiden und bewerten verschiedene Farbräume für Bilddaten •erklären das Prinzip der zwei-dimensionalen linearen Filterung für Bildsignale •berechnen und bewerten die zweidimensionale diskrete Fourier-Transformierte eines Bildsignales •bestimmen vergrößerte diskrete Bildsignale mit Methoden der bilinearen und Spline-Interpolation •überprüfen Bilddaten auf ausgewählte Textur-, Kanten- und Bewegungsmerkmale •analysieren Bild- und Videodaten auf Merkmale in unterschiedlichen Scale-Spaces •erläutern und beurteilen Methoden für das Matching von Bilddaten •segmentieren Bilddaten durch Programmierung von einfachen Klassifikations- oder Clustering-Verfahren •verstehen das Prinzip von Transformation auf Bilddaten und können diese an Beispielen anwenden. The students •understand point operations for image data and gamma correction •test the effects of rank order and median filters for image data •evaluate and differentiate between different color spaces for image data •explain the principle of two-dimensional linear filtering for image signals •calculate and evaluate the two-dimensional discrete Fourier transform of an image signal 

Prerequisites: Vorlesung Signale und Systeme I und II
Integration in curriculum: semester: 1
Module compatibility: Information Technology - DSP Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Written examination (90 minutes)
Grading procedure: Written examination (100%)
Workload in clock hours: Contact hours: 60 h Independent study: 90 h
Module duration: 1 semester
Teaching and examination language: english
Bibliography: J.-R. Ohm: |Multimedia Content Analysis|, Springer, 2016 J. W. Woods: |Multidimensional Signal, Image, and Video Processing and Coding|, Academic Press, 2^nd^ edition, 2012 

, Module name 48440: Machine Learning in Signal Processing Machine learning in signal processing5 ECTS
Course / lectures: Übung : Supplements for Machine Learning in Signal Processing (1 SWS )- Vorlesung: Machine Learning in Signal Processing (3 SWS )5 ECTS
Lecturers: PD Dr.Ing. Jürgen Seiler  
Module coordinator: PD Dr.Ing. Jürgen Seiler
Contents: This course is an introduction into machine learning and artificial intelligence. The special emphasis is on applications to modern signal processing problems. The course is focused on design principles of machine learning algorithms. The lectures start with a short introduction, where the nomenclature is defined. After this, probabilistic graphical models are introduced and the use of latent variables is discussed, concluding with a discussion of hidden Markov models and Markov fields. The second part of the course is about deep learning and covers the use of deep neural networks for machine learning tasks. In the last part of the lecture, the use of deep neural networks for speech processing tasks is introduced. The course is based on the materials and video footage from Dr. Roland Maas. He is an outstanding machine learning expert and a former member of the Chair of Multimedia Communications and Signal Processing.
Learning objectives and skills: After attending the lecture, students will be able to •understand regression and classification problems •apply PDF estimation algorithms •understand Gaussian mixture models and expectation- maximization •apply principal component analysis and independent component analysis •assess different estimation algorithms •explain the application of machine learning to system identification •apply hidden Markov models •understand different artificial neural network architectures •explain deep learning principles •apply artificial neural networks •devise learning strategies for deep neural networks •assess the application of deep neural networks for speech processing tasks.
Prerequisites: None
Integration in curriculum: semester: 1
Module compatibility: Information Technology - DSP Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Written or oral 

Grading procedure: Written or oral (100%)
Workload in clock hours: Contact hours: 60 h Independent study: 90 h
Module duration: 1 semester
Teaching and examination language: english
Bibliography: Literature: •C. M. Bishop: Pattern Recognition and Machine Learning, http://www.research.microsoft.com/en-us/um/people/cmbishop/ PRML •S. Theodoridis and K. Koutroumbas: Pattern Recognition •M. Nielsen: Neural Networks and Deep Learning. 

, Module name 502007: Musiksignalverarbeitung - Synthese Music processing - synthesis2,5 ECTS
Course / lectures: Vorlesung: Musikverarbeitung - Synthese (2 SWS ) -
Lecturers: Maximilian Schäfer  
Module coordinator: Maximilian Schäfer
Contents: •Verarbeitung von Audiosignalen durch parametrische Filter und Effekte •Erzeugung von künstlichen Klängen mit Mitteln der digitalen Klangsynthese •Klangwiedergabe in echten und virtuellen Räumen •Klangbeispiele und Demonstrationen •Programmiersprachen für Audio-Echtzeit-Verarbeitung *Content*: •a short history of electrical and electronic music •processing of audio signals by parametric filters and effects •digital sound synthesis •sound reproduction in real and in virtual environments •sound examples and demonstrations •programming languages for audio real-time processing
Learning objectives and skills: Die Studierenden •beschreiben die speziellen Anforderungen für Audio-Echtzeit- Verarbeitung, •wenden ihre theoretischen Kenntnisse zeitdiskreter Signale und Systeme für die Verarbeitung und Erzeugung musikalischer Klänge an, •gestalten eigene Software-Realisierungen zur Klangsynthese, •entwerfen technische Systeme für musikalisch motivierte Aufgabenstellungen. The students •specify the special requirements for audio realtime processing, •apply their theoretical knowledge about discrete-time signals and systems to processing and synthesis of musical sounds, •design their own software realizations for sound synthesis •implement technical systems for digital music.
Prerequisites: None
Integration in curriculum: semester: 1
Module compatibility: Information Technology - DSP Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Oral
Grading procedure: Oral (100%)
Module frequency: only in winter semester 13Workload in clock hoursContact hours: 30 h Independent study: 45 h 
Workload in clock hours: Contact hours: 30 h Independent study: 45 h 

Module duration: 1 semester
Teaching and examination language: english
Bibliography: no Bibliography information available! 

, Module name 250058: Signalanalyse Signal analysis2,5 ECTS
Course / lectures: Vorlesung: Signalanalyse (2 SWS ) -
Lecturers: Dr.-Ing. Heinrich Löllmann  
Module coordinator: Dr.-Ing. Heinrich Löllmann
Contents: Es werden im Rahmen dieser Vorlesung unterschiedliche Verfahren zur Analyse digitaler Signale, sowie deren Anwendungsmöglichkeiten behandelt. Die folgenden Konzepte werden dabei insbesondere behandelt: •Fourieranalyse von Signalen •Signalanalyse mittels Zeit-Frequenz-Transformationen •Parametrische und nichtparametrische Signalanalyse •Verfahren zur Frequenzschätzung •Räumliche Signalanalyse •Filterbänke und Wavelets. In this course, different approaches for the analysis of digital signals and their applications are treated, which comprises the following topics: •Fourier analysis of signals •Signal analysis by means of time-frequency transformations •Parametric and non-parametric signal analysis •Frequency estimation •Spatial signal analysis •Filter-banks and wavelets.
Learning objectives and skills: Die Studierenden •beschreiben, welche Methoden der Signalanalyse für unterschiedlichen Arten von Signalen angewendet werden •beschreiben grundlegende Methoden der spektralen Signalanalyse •erläutern wodurch die spektrale und zeitliche Auflösung bei der Spektralanalyse von Signalen begrenzt wird •beschreiben die Konzepte sowie die Vor- und Nachteile der parametrischen und nichtparametrischen Signalanalyse •erklären unterschiedliche Verfahren der Zeit-Frequenz-Analyse •stellen die Analyse von Signalen mittels Filterbänke und Wavelets dar •können Verfahren zur Frequenzschätzung erläutern •formulieren Verfahren zur Analyse räumlicher Signale. The students •describe which methods for signal analysis can be applied for different types of signals •describe fundamental approaches for spectral signal analysis •explain the limiting factors for the time and frequency resolution for the spectral analysis of signals •describe concepts as well as the pros and cons of parametric and non-parametric signal analysis •explain different approaches for time-frequency analysis 

Prerequisites: Fundierte Kenntnisse in digitaler Signalverarbeitung. Requirements Solid knowledge in digital signal processing
Integration in curriculum: semester: 1
Module compatibility: Information Technology - DSP Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Oral Mündliche Prüfung mit einer Dauer von 30 min. Oral examination of 30 min duration.
Grading procedure: Oral (100%)
Module frequency: only in winter semester 13Workload in clock hoursContact hours: 30 h Independent study: 45 h 14 Module duration 1 semester 15Teaching and examination languageenglish 16 BibliographyP. Stoica und R. Moses: "Spectral Analysis of Signals", Pearson Prentice Hall, 2005 
Workload in clock hours: Contact hours: 30 h Independent study: 45 h
Module duration: 1 semester
Teaching and examination language: english
Bibliography: P. Stoica und R. Moses: "Spectral Analysis of Signals", Pearson Prentice Hall, 2005 

, Module name 96460: Speech and Audio Signal Processing Speech and audio signal processing5 ECTS
Course / lectures: Übung : Übung zur Sprach- und Audiosignalverarbeitung (1 SWS )- Vorlesung: Sprach- und Audiosignalverarbeitung (3 SWS )5 ECTS
Lecturers: Dr.-Ing. Heinrich Löllmann Prof. Dr.-Ing. Walter Kellermann  
Module coordinator: Prof. Dr.-Ing. Walter Kellermann
Contents: It concentrates on algorithms for speech and audio signal processing with applications in telecommunications and multimedia, especially •physiology and models for human speech production and hearing: source-filter model, filterbank model of the cochlea, masking effects, •representation of speech and audio signals: estimation and representation of short-term and long-term statistics in the time and frequency domain as well as the cepstral domain; typical examples and visualizations •source coding for speech and audio signals: criteria, scalar and vector quantization, linear prediction, prediction of the pitch frequency; waveform coding, parametric coding, hybrid coding, codec standards (ITU, GSM, ISO-MPEG) •basic concepts of automatic speech recognition (ASR): feature extraction, dynamic time warping, Hidden Markov Models (HMMs) •basic concepts of speech synthesis: text-to-speech systems, model-based and data-driven synthesis, PSOLA synthesis system •signal enhancement for acquisition and reproduction: noise reduction, acoustic echo cancellation, dereverberation using single-channel and multichannel algorithms. Es werden Grundlagen und Algorithmen der Verarbeitung von Sprach- und Audiosignalen mit Anwendungen in Telekommunikation und Multimedia behandelt, insbesondere: •Physiologie und Modelle der Spracherzeugung und des Hörens: Quelle-Filter-Modell, Filterbank-Modell der Cochlea; Maskierungseffekte; •Darstellung von Sprach- und Audiosignalen: Schätzung und Darstellung der Kurzzeit- und Langzeitstatistik in Zeit-, Frequenz- und Cepstralbereich; typische Beispiele, Visualisierungen; •Quellencodierung für Sprache und Audiosignale: Kriterien; skalare und vektorielle Codierung; lineare Prädiktion; Pitchprädiktion; Wellenform-/Parameter-/Hybrid-Codierung; Standards (ITU, GSM, ISO-MPEG) •Spracherkennung: Merkmalextraktion, Dynamic Time Warping, Hidden Markov Models 

Learning objectives and skills: The students •understand basic physiological mechanisms of human speech production and hearing and can apply them for the analysis of speech and audio signals •apply basic methods for the estimation and representation of the short-term and long-term statistics of speech and audio signals and can analyze such signals by means of these methods •understand current methods for source coding of speech and audio signals and can analyze current coding standards •verstehen die Grundbausteine von Spracherkennungssystemen und können deren Funktion mittels Rechnersimulation analysieren •understand the basic principle of text-to-speech systems and can apply fundamental methods for speech synthesis •can apply basic algorithms for speech enhancement and understand their functionality for real-world data. Die Studierenden •verstehen die grundlegenden physiologischen Mechanismen der Spracherzeugung und des Hörens beim Menschen und können diese zur Analyse von Sprach- und Audiosignalen anwenden •wenden die grundlegenden Methoden zur Schätzung und Darstellung der Kurzzeit- und Langzeitstatistik von Sprach- und Audiosignalen an und können diese damit analysieren •verstehen die aktuellen Methoden zur Quellencodierung von Sprache-und Audiosignalen und können aktuelle Codierstandards analysieren •verstehen die Grundbausteine von Spracherkennungssystemen und können deren Funktion mittels Rechnersimulation analysieren •verstehen die Grundprinzipien von Text-to-Speech Systemen und können elementare Algorithmen zur Sprachsynthese anwenden •können elementare Algorithmen zur Signalverbesserung anwenden und für reale Daten analysieren
Integration in curriculum: semester: 1
Module compatibility: Information Technology - DSP Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Written or oral (90 minutes) 

Grading procedure: Written or oral (100%)
Module frequency: only in summer semester 13Workload in clock hoursContact hours: 60 h Independent study: 90 h 14 Module duration 1 semester 15Teaching and examination languageenglish 16 Bibliography Gemäß themenbezogenen Angaben in der Lehrveranstaltung 
Workload in clock hours: Contact hours: 60 h Independent study: 90 h
Module duration: 1 semester
Teaching and examination language: english
Bibliography: Gemäß themenbezogenen Angaben in der Lehrveranstaltung 

, Module name 96430: Statistical Signal Processing Statistical signal processing5 ECTS
Course / lectures: Übung : Ergänzungen und Übungen zur statistischen Signalverarbeitung (1 SWS )- Vorlesung: Statistische Signalverarbeitung (3 SWS ) 5 ECTS
Lecturers: Thomas Haubner Prof. Dr.-Ing. Walter Kellermann  
Module coordinator: Prof. Dr.-Ing. Walter Kellermann
Contents: The course concentrates on fundamental methods of statistical signal processing and their applications. The main topics are: *Discrete-time stochastic processes in the time and frequency domain* Random variables (RVs), probability distributions and densities, expectations of random variables, transformation of RVs, vectors of normally distributed RVs, time-discrete random processes: probability distribution and densities, expectation, stationarity, cyclostationarity, ergodicity, correlation functions and correlation matrices, spectral representations, principal component analysis (PCA), Karhunen-Loève transform (KLT). *Estimation theory* estimation criteria, prediction, classical and Bayesian parameter estimation (including MMSE, Maximum Likelihood, and Maximum A Posteriori estimation), Cramer-Rao bound *Linear signal models* Parametric models (cepstral decomposition, Paley-Wiener theorem, spectral flatness), non-parametric models (all-pole, all-zero and pole- zero models, lattice structures, Yule-Walker equations, PARCOR coefficients, cepstral representation) *Signal estimation* Supervised estimation, problem classes, orthogonality principle, MMSE estimation, linear MMSE estimation for normally distributed random processes, optimum FIR filtering, optimum linear filtering for stationary processes, prediction and smoothing, Kalman filters, optimum multichannel filtering (Wiener filter, LCMV, MVDR, GSC) *Adaptive filtering* Gradient methods, LMS, NLMS, APA and RLS algorithms and their convergence behavior *Zeitdiskrete Zufallsprozesse im Zeit- und Frequenzbereich* Zufallsvariablen (ZVn), Wahrscheinlichkeitsverteilungen und dichten, Erwartungswerte; Transformation von ZVn; Vektoren normalverteilter ZVn; zeitdiskrete Zufallsprozesse (ZPe): Wahrscheinlichkeitsverteilungen und dichten, Erwartungswerte, Stationarität, Zyklostationarität, Ergodizität, Korrelationsfunktionen und -matrizen, Spektraldarstellungen; Principal Component Analysis, Karhunen-Loeve Transformation; *Schätztheorie* 

Learning objectives and skills: The students: •analyze the statistical properties of random variables, random vectors, and stochastic processes by probability density functions and expectations as well as correlation functions and matrices and their frequency-domain representations •know the Gaussian distribution and its role to describe the properties of random variables, vectors and processes •understand the differences between classical and Bayesian estimation, derive and analyze MMSE and ML estimators for specific estimation problems, especially for signal estimation •analyze and evaluate optimum linear MMSE estimators (single- and multichannel Wiener filter and Kalman filter) for direct and inverse supervised estimation problems •evaluate adaptive filters for the identification of optimum linear estimators. Die Studierenden •analysieren die statistischen Eigenschaften von Zufallsvariablen, -vektoren und stochastischen Prozessen mittels Wahrscheinlichkeitsdichten und Erwartungswerten, bzw. Korrelationsfunktionen, Korrelationsmatrizen und deren Frequenzbereichsdarstellungen •kennen die spezielle Rolle der Gaußverteilung und ihre Auswirkungen auf die Eigenschaften von Zufallsvariablen, - vektoren und Prozessen •verstehen die Unterschiede klassischer und Bayesscher Schätzung, entwerfen und analysieren MMSE- und ML- Schätzer für spezielle Schätzprobleme, insbesondere zur Signalschätzung •analysieren und evaluieren lineare MMSE-optimale Schätzer (ein- und vielkanalige Wiener-Filter und Kalman-Filter) für direkte und inverse überwachte Schätzprobleme; 

Prerequisites: Module Signale und Systeme I und Signale und Systeme II, Digitale Signalverarbeitung oder gleichwertige
Integration in curriculum: semester: 1
Module compatibility: Information Technology - DSP Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Written examination (90 minutes)
Grading procedure: Written examination (100%)
Workload in clock hours: Contact hours: 60 h Independent study: 90 h
Module duration: 1 semester
Teaching and examination language: english
Bibliography: A. Papoulis, S. Pillai: Probability, Random Variables and Stochastic Processes; McGraw-Hill, 2002 (englisch) D. Manolakis, V. Ingle, S. Kogon: Statistical and Adaptive Signal Processing; Artech House, 2005 (englisch) 

, Module name 498723: Transformationen in der Signalverarbeitung Transforms in signal processing2,5 ECTS
Course / lectures: Vorlesung: Transformationen in der Signalverarbeitung (2 SWS )2,5 ECTS
Lecturers: PD Dr.Ing. Jürgen Seiler  
Module coordinator: PD Dr.Ing. Jürgen Seiler
Contents: Das Modul "Transformationen in der Signalverarbeitung" behandelt mehrere verschiedene Transformationen, die im Rahmen der Signalverarbeitung Verwendung finden. Dabei werden zuerst die grundlegenden Konzepte von Transformationen diskutiert und die Vorteile die Transformationen mit sich bringen erläutert. Im Anschluss daran werden die grundlegenden Eigenschaften von Integraltransformationen betrachtet und die Laplace- und die Fourier- Transformation im Detail untersucht. Um auch zeitlich veränderliche Signale gut transformieren zu können werden danach die Kurzzeit- Fourier-Transformation und die Gabor-Transformation eingeführt. Im Anschluss daran erfolgt eine Betrachtung der Auswirkung der Abtastung auf transformierte Signale, bevor die z-Transformation als Transformation für diskrete Signale behandelt wird. Abschließend erfolgt die Betrachtung weiterer Transformationen für diskrete Signale wie der Diskreten Fourier-Transformation oder linearer Block-Transformationen. The module "Transforms in Signal Processing" covers several different transforms which are used in the field of signal processing. For this, first the basic concepts of transforms are discussed and the advantages which are offered by the different transforms are presented. Subsequent to this, fundamental properties of integral transforms are considered and the Laplace- and the Fourier-Transform are examined in detail. To be able to transform time-varying signals, the Short-Time Fourier-Transform and the Gabor-Transform are introduced, afterwards. Subsequent to this, the impact of sampling on transformed signals is analyzed before the z-Transform as a transform for discrete signals is covered. Finally, further transforms for discrete signals like the Discrete Fourier- Transform or Linear-Block Transforms are discussed.
Learning objectives and skills: Die Studierenden können nach Besuch der Vorlesung •Anwendungsmöglichkeiten von Transformationen bestimmen •Integraltransformationen gegenüberstellen und untersuchen •die Existenz von Transformationen hinterfragen •die Eindeutigkeit von Transformationen überprüfen •Sätze und Eigenschaften von Transformationen entwickeln •zu Transformationen zugehörige inverse Transformationen einschätzen •die Zusammenhänge zwischen verschiedenen Transformationen einschätzen •auf Zusammenhänge zwischen Ausgangssignalen und transformierten Signalen folgern •Symmetriebeziehungen von Transformationen ausarbeiten 

Prerequisites: None
Integration in curriculum: semester: 1
Module compatibility: Information Technology - DSP Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Oral
Grading procedure: Oral (100%)
Workload in clock hours: Contact hours: 30 h Independent study: 45 h
Module duration: 1 semester
Teaching and examination language: german
Bibliography: K. Krüger, Transformationen - Grundlagen und Anwendungen in der Nachrichtentechnik, Vieweg Verlag, Braunschweig B. Girod, R. Rabenstein, A. Stenger, Einführung in die Systemtheorie, B. G. Teubner Verlag, Stuttgart 


Course / lectures: Vorlesung: Next Generation Mobile Communication Systems: 5G-Advanced and 6G (2 SWS )2,5 ECTS
Lecturers: Prof. Dr. Wolfgang Gerstacker Dr. Stefan Brück  
Module coordinator: Dr. Stefan Brück Prof. Dr. Wolfgang Gerstacker
Contents: Mobile communication plays a significant role in our daily life. Over the last three decades the mobile applications have been tremendously enhanced from voice only over mobile broadband to applications for the mobile internet. Currently, the next generation of cellular systems, the so-called 5th Generation (5G) is developed and first commercial 5G networks are expected to be deployed around mid of 2019. 5G will play an outstanding role for the Internet of Things and will redefine a wide range of industries by enabling new use cases. This lecture will provide the technical foundation of 4G (LTE) and 5G mobile communication systems with a focus on the radio access network and the PHY & MAC layer concepts.
Learning objectives and skills: The students •learn the technical history of mobile communications from 2nd (GSM), 3rd (UMTS), 4th (LTE) to the 5th (5G New Radio) Generation •understand the system and radio access network architecture of modern cellular communications systems and their enhancements towards 5G •compare the physical layer design of LTE and 5G New Radio •discuss how 5G networks are designed to address a wide range of diverse services and devices •analyze enhanced radio resource management concepts for use cases like cellular V2X (Vehicle-to-Everything) and NB-IoT (Narrowband Internet of Things) Die Studierenden •erfahren die technische Geschichte der Mobilkommunikation von der 2. (GSM), 3. (UMTS), 4. (LTE) bis zur 5. Generation (5G New Radio) •verstehen die System- und Funkzugangsnetzarchitektur moderner zellularer Kommunikationssysteme und ihre Verbesserungen bei 5G •vergleichen das Design der physikalischen Übertragungsschicht von LTE und 5G New Radio •diskutieren, wie 5G-Netze für eine breite Palette unterschiedlicher Dienste und Geräte konzipiert sind •analysieren verbesserte Funkressourcenverwaltungskonzepte für Anwendungsfälle wie zellulare V2X (Vehicle-to-Everything) Kommunikation und das NB-IoT (Schmalband-Internet der Dinge) 

Prerequisites: None
Integration in curriculum: semester: 1
Module compatibility: Information Technology - DT Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Oral
Grading procedure: Oral (100%)
Workload in clock hours: Contact hours: 30 h Independent study: 45 h
Module duration: 1 semester
Teaching and examination language: english
Bibliography: Lecture Notes 4G/5G Mobile Communication Systems 

, Module name 96270: Kanalcodierung Channel coding5 ECTS
Course / lectures: Vorlesung mit Übung: Kanalcodierung (3 SWS ) 5 ECTS Vorlesung mit Übung: Channel Coding (4 SWS ) 5 ECTS Übung : Übungen zur Kanalcodierung (1 SWS ) -
Lecturers: Dr.-Ing. Clemens Stierstorfer  
Module coordinator: Dr.-Ing. Clemens Stierstorfer
Contents: 1)Introduction and Motivation 2)Fundamentals of Block Coding 3)Introduction to Finite Fields I 4)Linear Block Codes 5)Linear Cyclic Codes 6)Introduction to Finite Fields II 7)BCH and RS Codes 8)Convolutional Codes 9)Codes with Iterative Decoding
Learning objectives and skills: Das Modul Kanalcodierung umfasst eine Einführung in die Grundlagen der algebraischen, fehlerkorrigierenden Blockcodes sowie einen Einstieg in die Thematik der Faltungscodes. Iterativ decodierte Codeschemata wie Turbo-Codes und LDPC-Codes werden ebenfalls eingeführt. Im Einzelnen sind die Inhalte oben aufgeführt. Die Studierenden definieren die Problematik der Kanalcodierung, grenzen sie von anderen Codierverfahren (z.B. der Quellencodierung) ab und kennzeichnen die unterschiedlichen Ansätze zur Fehlerkorrektur und -erkennung. Sie nennen Beispiele für Einsatzgebiete von Kanalcodierung und geben einen Überblick über die historische Entwicklung des Fachgebiets. Die Studierenden erstellen Übertragungsszenarien für den Einsatz von Kanalcodierung bestehend aus Sender, Übertragungskanal und Empfänger und beachten dabei die Grundannahmen beim Einsatz von Blockcodes bzw. der Modellierung der Kanäle. Sie formulieren mathematische Beschreibungen der Encodierung sowie der optimalen Decodierung bzw. suboptimaler Varianten. Die Studierenden beherrschen die Grundlagen fehlerkorrigierender linearer Blockcodes, beschreiben diese mathematisch korrekt mittels Vektoren und Matrizen über endlichen Körpern und implementieren und bewerten zugehörige Encoder- und Decoderstrukturen insbesondere Syndromdecoder. Dabei modifizieren sie Generatormatrizen, ermitteln Prüfmatrizen und erstellen Syndromtabellen. Sie schätzen die minimale Hammingdistanz von Codes mittels Schranken ab und können den erzielbaren Codegewinn erläutern. Sie kennen und benutzen beispielhaften Codefamilien (z.B. Hamming-Codes, Simplex-Codes, Reed-Muller-Codes). Die Studierenden erkennen die Vorteile zyklischer linearer Blockcodes und beschreiben diese mit Polynomen über endlichen Körpern. Sie nutzen die Restklassenrechnung bzgl. Polynomen zur Umsetzung systematischer Encoder und zur Realisierung von Syndromdecodern 


Prerequisites: Es ist hilfreich, wenn die Studierenden die erlernten Algorithmen in eine Programmiersprache (C, Matlab usw.) umsetzen können. It would be very helpful if the participants can implement the specified algorithms into a programming language (C, Matlab, etc.).
Integration in curriculum: semester: 1
Module compatibility: Information Technology - DT Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Written or oral Hilfsblatt, Taschenrechner: Sie können ein einzelnes A4-Blatt (Vorder- und Rückseite oder andere Blätter mit offensichtlich identischer Gesamtfläche) verwenden, um Ihre eigene, handschriftliche Formelsammlung aufzuschreiben. Sie können einen nicht programmierbaren Taschenrechner verwenden. Cheat Sheet, Calculator: A single A4 sheet (front and back, or any other collection of sheets with an obviously identical total area size) can be used to write down your own handwritten collection of formulas, etc. You may also bring a non-programmable calculator.
Grading procedure: Written or oral (100%)
Module frequency: every semester 

Workload in clock hours: Contact hours: 60 h Independent study: 90 h
Module duration: 1 semester
Teaching and examination language: 1
Bibliography: •J. Huber, R. Fischer, C. Stierstorfer: Folien zur Vorlesung •M. Bossert: Kanalcodierung, Oldenbourg Wissenschaftsverlag, 3. Auflage, 2013 •M. Bossert: Channel Coding for Telecommunications, John Wiley & Sons, 1999 •B. Friedrichs: Kanalcodierung, Springer Verlag, 1996 •S.B. Wicker: Error Control Systems for Digital Communications and Storage, Prentice-Hall, 1995 

, Module name 47800: Digital Communications Digital communications5 ECTS
Course / lectures: Vorlesung: Digital Communications (3 SWS ) 5 ECTS Übung : Tutorial for Digital Communications (1 SWS ) -
Lecturers: Prof. Dr. Laura Cottatellucci Brikena Kaziu  
Module coordinator: Prof. Dr. Laura Cottatellucci
Contents: Alle modernen Kommunikationssysteme basieren auf digitalen Übertragungsverfahren. Diese Vorlesung befasst sich mit den Grundlagen der Analyse und des Entwurfs digitaler Sender und Empfänger. Dabei wird zunächst von einem einfachen Kanalmodell bei dem das Empfangssignal nur durch additives weißes Gaußsches Rauschen gestört wird ausgegangen. Im Verlauf der Vorlesung werden aber auch Kanäle mit unbekannter Phase sowie verzerrende Kanäle betrachtet. Behandelt werden unter anderem digitale Modulationsverfahren (z.B. Pulsamplitudenmodulation (PAM), digitale Frequenzmodulation (FSK), und Kontinuierliche- Phasenmodulation (CPM)), Orthogonalkonstellationen, das Nyquistkriterium in Zeit- und Frequenzbereich, optimale kohärente und inkohärente Detektions- und Decodierungsverfahren, die Signalraumdarstellung digital modulierter Signale, verschiedene Entzerrungsverfahren, und Mehrträger-Übertragungsverfahren.   Modern communication systems are based on digital transmission methods. This course covers basics of analysis and design of digital transmitters and receivers. Initially, we consider a simple channel model whose received signal is impaired only by additive white Gaussian noise. Then, we extend fundamental concepts to channels with unknown phases and distortion. Additionally, we treat digital modulation techniques, e.g., pulse amplitude modulation (PAM), digital frequency modulation (FSK) and continuous- phase modulation (CPM), and orthogonal constellations. The Nyquist criterion in time and frequency domain, optimal coherent and incoherent detection and decoding methods, signal space representations of digitally modulated signals, various equalization methods, and multicarrier transmission methods are also discussed.
Learning objectives and skills: Die Studierenden •analysieren und klassifizieren digitale Modulationsverfahren hinsichtlich ihrer Leistungs- und Bandbreiteneffizienz sowie ihres Spitzenwertfaktors, •ermitteln notwendige Kriterien für impulsinterferenzfreie Übertragung, •charakterisieren digitale Modulationsverfahren im Signalraum, •ermitteln informationsverlustfreie Demodulationsverfahren, •entwerfen optimale kohärente und inkohärente Detektions- und Decodierungsverfahren, 

Prerequisites: None
Integration in curriculum: semester: 1
Module compatibility: Information Technology - DT Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Written examination (90 minutes)
Grading procedure: Written examination (100%)
Module frequency: only in winter semester 13Workload in clock hoursContact hours: 60 h Independent study: 90 h 14 Module duration 1 semester 15Teaching and examination languageenglish 16 Bibliography no Bibliography information available! 
Workload in clock hours: Contact hours: 60 h Independent study: 90 h
Module duration: 1 semester
Teaching and examination language: english
Bibliography: no Bibliography information available! 

, Module name 93510: Digitale Übertragung Digital communications5 ECTS
Course / lectures: Übung : Digitalen Übertragung - Übungen (1 SWS ) - Vorlesung: Digitale Übertragung (3 SWS ) 5 ECTS
Lecturers: Lukas Brand Prof. Dr.-Ing. Robert Schober  
Module coordinator: Prof. Dr. Laura Cottatellucci Prof. Dr.-Ing. Robert Schober Dr.-Ing. Clemens Stierstorfer
Contents: Alle modernen Kommunikationssysteme basieren auf digitalen Übertragungsverfahren. Diese Vorlesung befasst sich mit den Grundlagen der Analyse und des Entwurfs digitaler Sender und Empfänger. Dabei wird zunächst von einem einfachen Kanalmodell bei dem das Empfangssignal nur durch additives weißes Gaußsches Rauschen gestört wird ausgegangen. Im Verlauf der Vorlesung werden aber auch Kanäle mit unbekannter Phase sowie verzerrende Kanäle betrachtet. Behandelt werden unter anderem digitale Modulationsverfahren (z.B. Pulsamplitudenmodulation (PAM), digitale Frequenzmodulation (FSK), und Kontinuierliche-Phasenmodulation (CPM)), Orthogonalkonstellationen, das Nyquistkriterium in Zeit- und Frequenzbereich, optimale kohärente und inkohärente Detektions- und Decodierungsverfahren, die Signalraumdarstellung digital modulierter Signale, verschiedene Entzerrungsverfahren, und Mehrträger- Übertragungsverfahren.
Learning objectives and skills: Die Studierenden •analysieren und klassifizieren digitale Modulationsverfahren hinsichtlich ihrer Leistungs- und Bandbreiteneffizienz sowie ihres Spitzenwertfaktors, •ermitteln notwendige Kriterien für impulsinterferenzfreie Übertragung, •charakterisieren digitale Modulationsverfahren im Signalraum, •ermitteln informationsverlustfreie Demodulationsverfahren, •entwerfen optimale kohärente und inkohärente Detektions- und Decodierungsverfahren, •vergleichen verschiedene Entzerrungsverfahren hinsichtlich deren Leistungsfähigkeit und Komplexität, •entwerfen einfache digitale Übertragungssysteme mit vorgeschriebenen Leistungs- und Bandbreiteneffizienzen sowie Spitzenwertfaktoren.
Prerequisites: None
Integration in curriculum: semester: 1
Module compatibility: Information Technology - DT Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Written examination (90 minutes)
Grading procedure: Written examination (100%) 

Module frequency: only in summer semester 13Workload in clock hoursContact hours: 60 h Independent study: 90 h 14 Module duration 1 semester 15Teaching and examination languagegerman 16 Bibliography no Bibliography information available! 
Workload in clock hours: Contact hours: 60 h Independent study: 90 h
Module duration: 1 semester
Teaching and examination language: german
Bibliography: no Bibliography information available! 

, Module name 93500: Digitale Signalverarbeitung Digital signal processing5 ECTS
Course / lectures: Übung : Übung zu Digitale Signalverarbeitung (1 SWS )- Vorlesung: Digitale Signalverarbeitung (3 SWS ) 5 ECTS Tutorium: Tutorium zu Digitale Signalverarbeitung (1 SWS )-
Lecturers: Dr.-Ing. Heinrich Löllmann Prof. Dr.-Ing. Walter Kellermann  
Module coordinator: Prof. Dr.-Ing. Walter Kellermann
Contents: The course assumes familiarity with basic theory of discrete-time deterministic signals and linear systems and extends this by a discussion of the properties of idealized and causal, realizable systems (e.g., lowpass, Hilbert transformer) and corresponding representations in the time domain, frequency domain, and z-domain. Thereupon, design methods for recursive and nonrecursive digital filters are discussed. Recursive systems with prescribed frequency-domain properties are obtained by using design methods for Butterworth filters, Chebyshev filters, and elliptic filters borrowed from analog filter design. Impulse-invariant transform and the Prony-method are representatives of the considered designs with prescribed time-domain behaviour.For nonrecursive systems, we consider the Fourier approximation in its original and its modified form introducing a broad selection of windowing functions. Moreover, the equiripple approximation is introduced based on the Remez-exchange algorithm. Another section is dedicated to the Discrete Fourier Transform (DFT) and the algorithms for its fast realizations ('Fast Fourier Transform'). As related transforms we introduce cosine and sine transforms. This is followed by a section on nonparametric spectrum estimation. Multirate systems and their efficient realization as polyphase structures form the basis for describing analysis/synthesis filter banks and discussing their applications. The last section is dedicated to investigating effects of finite wordlength as they are unavoidable in any realization of digital signal processing systems. A corresponding lab course on DSP will be offered in the winter term.
Learning objectives and skills: Die Studierenden •analysieren zeitdiskrete lineare zeitinvariante Systeme durch Ermittlung der beschreibenden Funktionen und Parameter •wenden grundlegende Verfahren zum Entwurf zeitdiskreter Systeme an und evaluieren deren Leistungsfähigkeit •verstehen die Unterschiede verschiedener Methoden zur Spektralanalyse und können damit vorgegebene Signale analysieren •verstehen die Beschreibungsmethoden von Multiratensystemen und wenden diese zur Beschreibung von Filterbänken an 

Integration in curriculum: semester: 1
Module compatibility: Information Technology - DSP Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013 Information Technology - DT Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013 Medical Engineering Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Written examination (90 minutes)
Grading procedure: Written examination (100%)
Workload in clock hours: Contact hours: 60 h Independent study: 90 h
Module duration: 1 semester
Teaching and examination language: english
Bibliography: *Empfohlene Literatur/ Recommended Reading:* *1.* J.G. Proakis, D.G. Manolakis: Digital Signal Processing. 4th edition. Prentice Hall, Englewood Cliffs, NJ, 2007. *2.* A.V. Oppenheim, R.V. Schafer: Digital Signal Processing. Prentice Hall, Englewood Cliffs, NJ, 1975. *3.* K.D. Kammeyer, K. Kroschel: Digitale Signalverarbeitung: Filterung und Spektralanalyse mit MATLAB®-Übungen . 8. Aufl. Teubner, Stuttgart, 2012 

Course / lectures: Übung : Tutorial for Information Theory and Coding (1 SWS )- Vorlesung: Information Theory and Coding (3 SWS ) 5 ECTS
Lecturers: Prof. Dr.-Ing. Ralf Müller  
Module coordinator: Prof. Dr.-Ing. Ralf Müller
Contents: 1. Introduction: binomial distribution, (7,4)-Hamming code, parity-check matrix, generator matrix 2. Probability, entropy, and inference: entropy, conditional probability, Bayes law, likelihood, Jensens inequality 3. Inference: inverse probability, statistical inference 4. The source coding theorem: information content, typical sequences, Chebychev inequality, law of large numbers 5. Symbol codes: unique decidability, expected codeword length, prefix- free codes, Kraft inequality, Huffman coding 6. Stream codes: arithmetic coding, Lempel-Ziv coding, Burrows- Wheeler transform 7. Dependent random variables: mutual information, data processing lemma 8. Communication over a noisy channel: discrete memory-less channel, channel coding theorem, channel capacity 9. The noisy-channel coding theorem: jointly-typical sequences, proof of the channel coding theorem, proof of converse, symmetric channels 10. Error-correcting codes and real channels: AWGN channel, multivariate Gaussian pdf, capacity of AWGN channel 11. Binary codes: minimum distance, perfect codes, why perfect codes are bad, why distance isnt everything 12. Message passing: distributed counting, path counting, low-cost path, min-sum (=Viterbi) algorithm 13. Exact marginalization in graphs: factor graphs, sum-product algorithm 14. Low-density parity-check codes: density evolution, check node degree, regular vs. irregular codes, girth 15. Lossy source coding: transform coding and JPEG compression   1. Einleitung: Binomialverteilung, (7,4)-Hamming-Code, Paritätsmatrix, Generatormatrix 2. Wahrscheinlichkeit, Entropie und Inferenz: Entropie, bedingte Wahrscheinlichkeit, Bayessches Gesetz, Likelihood, Jensensche Ungleichung 3. Inferenz: Inverse Wahrscheinlichkeit, statistische Inferenz 4. Das Quellencodierungstheorem: Informationsgehalt, typische Folgen, Tschebyschevsche Ungleichung, Gesetz der großen Zahlen 5. Symbolcodes: eindeutige Dekodierbarkeit, mittlere Codewortlänge, präfixfreie Codes, Kraftsche Ungleichung, Huffmancodierung 

Learning objectives and skills: The students apply Bayesian inference to problems in both communications and everyday's life. The students explain the concept of digital communications by means of source compression and forward-error correction coding. For the design of communication systems, they use the concepts of entropy and channel capacity. They calculate these quantities for memoryless sources and channels. The students proof both the source coding and the channel coding theorem. The students compare various methods of source coding with respect to compression rate and complexity. The students apply source compression methods to measure mutual information. The students factorize multivariate functions, represent them by graphs, and marginalize them with respect to various variables. The students explain the design of error-correcting codes and the role of minimum distance. They decode error-correcting codes by means of maximum-likelihood decoding and message passing. The students apply distributed algorithms to problems in both communications and everydays life. The students improve the properties of low-density parity-check codes by widening the girth and/or irregularity in the degree distribution. The students transform source images into the frequency domain to improve lossy compression.   Die Studierenden wenden Bayessche Inferenz auf Probleme in der Nachrichtentechnik und im Alltagsleben an. 

Prerequisites: None
Integration in curriculum: semester: 1
Module compatibility: Information Technology - DT Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Written examination (90 minutes)
Grading procedure: Written examination (100%)
Module frequency: every semester 13Workload in clock hoursContact hours: 60 h Independent study: 90 h 14 Module duration 1 semester 15Teaching and examination languageenglish 16 BibliographyMacKay, D.: Information Theory, Inference, and Learning Algorithms, Cambridge University Press, Cambridge, 2003. 
Workload in clock hours: Contact hours: 60 h Independent study: 90 h
Module duration: 1 semester
Teaching and examination language: english
Bibliography: MacKay, D.: Information Theory, Inference, and Learning Algorithms, Cambridge University Press, Cambridge, 2003. 

, Module name 668129: Machine Learning in Communications Machine learning in communications5 ECTS
Course / lectures: Vorlesung: Machine Learning in Communications (4 SWS )5 ECTS Übung : Tutorial for Machine Learning in Communications (0 SWS )-
Lecturers: Prof. Dr. Laura Cottatellucci Nikita Shanin  
Module coordinator: Prof. Dr. Laura Cottatellucci
Contents: Recently, in many areas of wireless communications such as wireless sensor networks (WSNs), heterogeneous networks and complex ad hoc networks, distributed graph algorithms and machine learning on graphs are gaining relevance as fundamental tools in network analysis and information processing. This motivates to deliver a general introduction to fundamentals of machine learning such as detection of clusters on graphs. The introduction is followed by the application of machine learning to the design of physical and data layer techniques in wireless communications and in the optimization of mobile networks.
Learning objectives and skills: The students •know and explain the fundamentals of machine learning with special attention to machine learning over graphs. •apply these principles in the design and optimisation of wireless communications systems and mobile networks.
Prerequisites: None
Integration in curriculum: semester: 1
Module compatibility: Information Technology - DT Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Oral
Grading procedure: Oral (100%)
Module frequency: only in winter semester 13Workload in clock hoursContact hours: 60 h Independent study: 90 h 14 Module duration 1 semester 15Teaching and examination languageenglish 16 Bibliography no Bibliography information available! 
Workload in clock hours: Contact hours: 60 h Independent study: 90 h
Module duration: 1 semester
Teaching and examination language: english
Bibliography: no Bibliography information available! 

, Module name 96300: MIMO Communication Systems MIMO communication systems5 ECTS
Course / lectures: Vorlesung: MIMO Communication Systems (3 SWS ) 5 ECTS Übung : MIMO Communication Systems - Tutorial (1 SWS )-
Lecturers: Hedieh Ajam Prof. Dr.-Ing. Robert Schober  
Module coordinator: Prof. Dr.-Ing. Robert Schober
Contents: Modern communication systems employ multiple antennas at the transmitter and/or receiver creating a multiple-input multiple-output (MIMO) system. This course covers the fundamental mathematical and communication theoretical concepts necessary for the design and analysis of MIMO communication systems. Relevant topics include MIMO Channel Capacity, Receive Diversity, Transmit Diversity, Space- Time Coding, Spatial Multiplexing, MIMO Transceiver Design, Multi-user MIMO, Massive MIMO, Relay-based MIMO, and applications in modern communication systems.
Learning objectives and skills: The students •learn about different MIMO channel models, •analyze MIMO communication systems with respect to their channel capacity and reliability, •determine MIMO figures of merit such as coding gain, diversity gain, and multiplexing gain, •compare and evaluate different MIMO receiver designs, •characterize the rate region of multiuser systems, •analyze massive MIMO systems, •discuss the advantages and disadvantages of different relay network architectures. Die Studierenden •lernen verschiedene MIMO-Kanalmodelle kennen, •analysieren MIMO-Kommunikationssysteme hinsichtlich der Kanalkapazität und Zuverlässigkeit, •ermitteln MIMO-Kenngrößen wie Codierungsgewinn, Diversitätsgewinn und Multiplexgewinn, •vergleichen und beurteilen verschiedene MIMO- Empfangsstrategien, •charakterisieren die Ratenregion von Mehrteilnehmersystemen, •analysieren Massive-MIMO-Systeme, •diskutieren die Vor- und Nachteile verschiedener Relaisnetzwerkarchitekturen.
Prerequisites: Basic course in communications
Integration in curriculum: semester: 1
Module compatibility: Information Technology - DT Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013 

Method of examination: Written or oral
Grading procedure: Written or oral (100%)
Module frequency: only in summer semester 13Workload in clock hoursContact hours: 60 h Independent study: 90 h 14 Module duration 1 semester 15Teaching and examination languageenglish 16 Bibliography no Bibliography information available! 
Workload in clock hours: Contact hours: 60 h Independent study: 90 h
Module duration: 1 semester
Teaching and examination language: english
Bibliography: no Bibliography information available! 

, Module name 43141: Mobile Communications Mobile communications5 ECTS
Course / lectures: Übung : Mobile Communications - Tutorial (1 SWS ) - Vorlesung: Mobile Communications (3 SWS ) 5 ECTS
Lecturers: Prof. Dr.-Ing. Ralf Müller  
Module coordinator: Prof. Dr.-Ing. Ralf Müller
Contents: History of mobile communications, cellular systems, sectorization, spectral efficiency, co-channel interference, adjacent-channel interference, near-far effect, cellular network architecture, antenna types and parameters, free space propagation, reflection, attenuation, diffraction, scattering, classification of channel models, ground reflection model, Okumura-Hata model, shadowing, narrow-band fading, time- variant channels, scattering function, delay-Doppler spectrum, diversity principles, combining methods, diversity gain, multiplexing, duplexing, digital modulation, Gaussian filtered minimum shift keying, basics of channel coding, interleaving, global system for mobile communications, physical versus logical channels, frame structure, call set-up, synchronization, channel estimation, hand-off
Learning objectives and skills: The students explain the cellular structure of mobile communication systems. They students explain the physical mechanics of radio wave propagation in the cm-band. The students explain the GSM cellular communications standard. The students discuss the pros and cons of several multiple-access and duplexing methods. The students discuss the pros and cons of several modulation and coding formats. The students decide which antenna type is suitable for a given morphological structure of the environment. The students predict the amplitude and dynamic of the antenuation between a mobile transmitter and a fixed receiver. The students utilize diversity methods to improve the link quality. The students determine the coverage probability of a given cellular communication system. The students collaborate on solving exercise problems. The students discuss which system solutions fit to which environments.
Prerequisites: None
Integration in curriculum: semester: 1
Module compatibility: Information Technology - DT Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Written examination (90 minutes)
Grading procedure: Written examination (100%)
Module frequency: only in summer semester 13Workload in clock hoursContact hours: 60 h Independent study: 90 h 14 Module duration 1 semester 15Teaching and examination languageenglish 
Workload in clock hours: Contact hours: 60 h Independent study: 90 h
Module duration: 1 semester
Teaching and examination language: english 

Bibliography: Proakis, J.: Digital Communications, McGraw-Hill, 4th ed., 2001. Rappaport, T.: Wireless Communications: Principles & Practice, Prentice Hall, 2nd ed., 2001. Mouly, M., Paulet, M.: The GSM System for Mobile Communications, Cell & SYS, France, 1992. Goldsmith, A.: Wireless Communications, Cambridge Univ. Press, 2005. 

, Module name 43420: Transmission and Detection for Advanced Mobile Communications Transmission and detection for advanced mobile communications2,5 ECTS
Course / lectures: Vorlesung: Transmission and Detection for Advanced Mobile Communications (2 SWS )2,5 ECTS
Lecturers: Prof. Dr. Wolfgang Gerstacker  
Module coordinator: Prof. Dr. Wolfgang Gerstacker
Contents: The aim of this lecture is that the students acquire a basic knowledge of advanced transmission and detection techniques which are relevant to practical mobile communications systems. In the first part, it is shown how equalization schemes like decision-feedback equalization (DFE) and maximum-likelihood sequence estimation (MLSE) can be applied to the GSM/EDGE (Enhanced Data Rates for GSM Evolution) standard. Also, channel estimation for GSM/EDGE is covered. In GSM/EDGE, disturbance by interfering signals of other users is a further major problem. Therefore, interference cancellation algorithms are discussed in detail. The cases of several receive antennas and one receive antenna (single antenna interference cancellation) are distinguished. Several receive antennas can be also utilized for increasing the robustness against fading, applying diversity combination techniques. In the case of the availability of several transmit antennas only, additional space-time coding has to be used for realization of diversity gains. These aspects are also discussed in depth. Furthermore, an introduction to code-division multiple access (CDMA) transmission is given and it is shown how CDMA is applied in the UMTS system. The lecture is concluded by an introduction to digital transmission in the Long Term Evolution (LTE) system.
Learning objectives and skills: The students •describe basic equalization algorithms such as decision- feedback equalization (DFE) and maximum-likelihood sequence estimation (MLSE), •apply equalization algorithms to the GSM / Enhanced Data Rates for GSM Evolution (EDGE) mobile communication system, •formulate channel estimation methods for mobile communication systems, •characterize the interference problem in GSM / EDGE, - design interference suppression schemes for GSM/EDGE for receivers with a single antenna (single antenna interference cancellation) and multiple antennas, respectively, •characterize the performance of mobile communication networks for different reception schemes, •devise receivers for the realization of diversity gains for multiple receive antennas, •design space-time coding schemes for the realization of diversity gains for multiple transmit antennas, 

Prerequisites: Systemtheorie, Nachrichtenübertragung
Integration in curriculum: semester: 1
Module compatibility: Information Technology - DT Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Written or oral
Grading procedure: Written or oral (100%)
Module frequency: only in summer semester 13Workload in clock hoursContact hours: 30 h Independent study: 45 h 14 Module duration 1 semester 15Teaching and examination languageenglish 16 Bibliography Lecture notes 
Workload in clock hours: Contact hours: 30 h Independent study: 45 h
Module duration: 1 semester
Teaching and examination language: english
Bibliography: Lecture notes 


, Module name 92250: Beyond FEM no english module name available for this module2,5 ECTS
Course / lectures: Vorlesung: Beyond FEM (0 SWS ) -
Lecturers: Markus Mehnert Dmytro Pivovarov  
Module coordinator: Dmytro Pivovarov
Contents: •Challenges of the modern FEM •Introduction into the XFEM •Introduction into the IGA-FEM •Introduction into the parametric FEM •Reduced order modeling as the necessary tool in the parametric FEM •Overview of other recently developed techniques and approaches
Learning objectives and skills: The students •are familiar with the modern state of the art •are familiar with the nonlinear FEM and FEM solvers •are able to choose and apply suitable modern methods for solving problems •are able to work with a level-set function and choose enrichment strategy •are able to program B-splines and NURBS •are able to apply order reduction for parametric problems
Integration in curriculum: semester: 1
Module compatibility: Solid Mechanics and Dynamics Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Written examination (45 minutes) 

Grading procedure: Written examination (100%)
Module frequency: only in winter semester 13Workload in clock hoursContact hours: 30 h Independent study: 45 h 14 Module duration 1 semester 15Teaching and examination languageenglish 16 Bibliography no Bibliography information available! 
Workload in clock hours: Contact hours: 30 h Independent study: 45 h
Module duration: 1 semester
Teaching and examination language: english
Bibliography: no Bibliography information available! 

, Module name 44450: Computational Dynamics Computational dynamics5 ECTS
Course / lectures: Vorlesung: Computational Dynamics (2 SWS ) - Übung : Computational Dynamics - Tutorial (2 SWS ) -
Lecturers:  
Module coordinator: Dr.-Ing. Gunnar Possart
Contents: Inhalt: •Kurze, in sich geschlossene Einführung in die Finite- Elemente-Methode in einer und zwei Dimensionen für lineare Wärmeübertragung und mechanische Probleme •Algorithmen zur Lösung parabolischer Probleme (transiente Wärmeleitung) •Algorithmen zur Lösung hyperbolischer Probleme (Elastodynamik) •Stabilitätsanalyse der oben genannten Algorithmen •Lösungstechniken für Eigenwertprobleme Contents •Brief, but self-contained, introduction to the finite element method in one- and two-dimensions for linear heat transfer and mechanics problems •Algorithms for solving parabolic problems (transient heat conduction) •Algorithms for solving hyperbolic problems (elastodynamics) •Stability analysis of the above algorithms •Solution techniques for eigenvalue problems
Learning objectives and skills: Die Studierenden •sind vertraut mit der grundlegenden Idee der linearen Finiten Element Methode •können für eine gegebene zeitabhängige Differentialgleichung die schwache und diskretisierte Form aufstellen •können Bewegungsgleichungen modellieren •können dynamischen Wärmeleitungsprobleme modellieren •können dynamische Probleme der Kontinuumsmechanik modellieren •kennen direkte Zeitintegrationsmethoden •sind vertraut mit Eigenwertproblemen und Stabilitätsanalyse verschiedener Zeitintegrationsmethoden •können zeitabhängige Differentialgleichungen lösen The students •are familiar with the basic idea of the linear finite element method 

Prerequisites: None
Integration in curriculum: semester: 1
Module compatibility: Solid Mechanics and Dynamics Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Written examination (90 minutes) Computational Dynamics (Prüfungsnummer: 44501) Prüfungsleistung, Klausur, Dauer (in Minuten): 90, benotet Anteil an der Berechnung der Modulnote: 100.0 %
Grading procedure: Written examination (100%)
Workload in clock hours: Contact hours: 60 h Independent study: 90 h
Module duration: ?? semester (no information for Module duration available)
Teaching and examination language: english
Bibliography: T. J. Hughes. The finite element method: linear static and dynamic finite element analysis. Dover Publications, 2000. 

, Module name 97277: Geometrische numerische Integration Geometric numerical integration5 ECTS
Course / lectures: Vorlesung mit Übung: Geometric Numerical Integration (2 SWS )5 ECTS
Lecturers: Flóra Szemenyei Prof. Dr.-Ing. Sigrid Leyendecker Dr. Rodrigo Sato Martin de Almagro  
Module coordinator: Prof. Dr.-Ing. Sigrid Leyendecker
Contents: •Integration of ordinary differential equations •Numerical integration •Conservation of first integrals (linear and quadratic invariants) •Symplectic integration of Hamiltonian systems •Variational integrators •Error analysis In this lecture, numerical methods that preserve the geometric properties of the flow of a differential equation are presented. First, basic concepts of integration theory such as consistency and convergence are repeated. Several numerical integration methods (Runge-Kutta methods, collocation methods, partitioned methods, composition and splitting methods) are introduced. Conditions for the preservation of first integrals are derived and proven. After a brief introduction into symmetric methods, symplectic integrators for Lagrange and Hamilton systems are considered. Basic concepts such as Hamilton's principle, symplecticity, and Noether's theorem are introduced. A discrete formulation leads to the class of variational integrators which is equivalent to the class of symplectic methods. The symplectictiy leads to a more accurate long-time integration which is proven by concepts of backward error analysis and is demonstrated by means of numerical examples.
Learning objectives and skills: Fachkompetenz Wissen The students are familiar with Lagrange systems and Hamiltonian systems and Hamiltons principle know the terms ordinary differential equation and analytic solution are familiar with consistency and convergence of a discrete evolution know standard integrators to solve ordinary differential equations numerically (Runge-Kutta methods, collocation methods, composition and splitting methods) know symmetric integrators are familiar with the terms first integrals and quadratic invariants are familiar with Noethers theorem and symplecticity of the Hamilton flow know symplectic integrators/variational integrators know conservation properties of symplectic/variational integrators are familiar with variational error analysis and backward error analysis Anwenden 

Prerequisites: None
Integration in curriculum: semester: 1
Module compatibility: Solid Mechanics and Dynamics Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Oral
Grading procedure: Oral (100%)
Workload in clock hours: Contact hours: 60 h Independent study: 90 h
Module duration: 1 semester
Teaching and examination language: english
Bibliography: •E. Hairer, G. Wanner and C. Lubich, Geometric Numerical Integration: Structure-Preserving Algorithms for Ordinary Differential Equations. Springer, 2006. •E. Hairer, S. Nørsett, and G. Wanner, Solving ordinary differential equations. I Nonstiff problems. Springer, 1993. •E. Hairer and G. Wanner, Solving ordinary differential equations. II Stiff and differential-algebraic problems. Springer, 2010. •J. E. Marsden and M. West, Discrete mechanics and variational integrators. Acta Numerica, 2001. •E. Hairer, C. Lubich and G. Wanner. Geometric numerical integration illustrated by the StörmerVerlet method. Acta Numerica, 2003. •E. Süli and D. F. Mayers, An Introduction to Numerical Analysis. Cambridge University Press, 2003. 

, Module name 838659: Introduction to the Finite Element Method Introduction to the finite element method (TAF Solid mechanics and dynamics)5 ECTS
Course / lectures: Übung : Introduction to the Finite Element Method - Tutorial (2 SWS )- Vorlesung: Introduction to the Finite Element Method (2 SWS )-
Lecturers: PD Dr.Ing. Sebastian Pfaller  
Module coordinator: PD Dr.Ing. Sebastian Pfaller
Contents: •Einführung in die Finite Elemente Methode •Anwendung der Finiten Elemente Methode bei der Modellierung von Stabwerken •Anwendung der Finiten Elemente Methode bei der Modellierung von Balkenstrukturen •Finite Elemente Methode bei Wärmeleitung •Finite Elemente Methode in der Elastizität •Finite Elemente Methode in der Elektrostatik *Contents* •Basic concept of the finite element method •Application of the finite element method for the analysis of trusses •Application of the finite element method for the analysis of frames and structures •Finite elements in heat transfer •Finite elements in elasticity •Finite elements in electrostatics
Learning objectives and skills: Die Studierenden - sind vertraut mit der grundlegenden Idee der linearen Finiten Element Methode - können lineare Probleme der Kontinuumsmechanik modellieren - können lineare Wärmeleitungsprobleme modellieren - kennen das isoparametrische Konzept - kennen Verfahren zur numerischen Integration - können ein gegebenes Problem mit Finiten Elementen diskretisieren - können für eine gegebene Differentialgleichung die schwache und diskretisierte Form aufstellen *Objectives* The students •are familiar with the basic concept of the finite element method •are able to model linear problems in elasticity •are able to model linear problems in heat transfer •are familiar with the isoparametric concept •know different methods for numerical integration •know how to discretize and solve problems in continuum mechanics 

Prerequisites: None
Integration in curriculum: semester: 1
Module compatibility: Solid Mechanics and Dynamics Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Written examination
Grading procedure: Written examination (100%)
Module frequency: only in summer semester 13Workload in clock hoursContact hours: 60 h Independent study: 90 h 14 Module duration 1 semester 15Teaching and examination languageenglish 16 Bibliography no Bibliography information available! 
Workload in clock hours: Contact hours: 60 h Independent study: 90 h
Module duration: 1 semester
Teaching and examination language: english
Bibliography: no Bibliography information available! 

Lecturers: Dominic Soldner Prof. Dr.-Ing. Paul Steinmann Emely Schaller  
Module coordinator: Prof. Dr.-Ing. Paul Steinmann
Contents: Grundlagen der geometrisch linearen Kontinuumsmechanik •Geometrisch lineare Kinematik •Spannungen •Bilanzsätze Anwendung auf elastische Problemstellungen •Materialbeschreibung •Variationsprinzipe Contents Basic concepts in linear continuum mechanics •Kinematics •Stress tensor •Balance equations Application in elasticity theory •Constitutive equations •Variational formulation
Learning objectives and skills: Die Studierenden •beherrschen das Tensorkalkül in kartesischen Koordinaten •verstehen und beherrschen die geometrisch lineare Kontinuumskinematik •verstehen und beherrschen geometrisch lineare Kontinuumsbilanzaussagen •verstehen und beherrschen geometrisch lineare, thermoelastische Kontinuumsstoffgesetze •verstehen und beherrschen den Übergang zur geometrisch linearen FEM The students •master tensor calculus in cartesian coordinates •understand and master geometrically linear continuum kinematics •understand and master geometrically linear continuum balance equations 

Integration in curriculum: semester: 1
Module compatibility: Solid Mechanics and Dynamics Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Grading procedure: Written examination (100%)
Workload in clock hours: Contact hours: 90 h Independent study: 60 h
Module duration: 1 semester
Teaching and examination language: 1
Bibliography: •Malvern: Introduction to the Mechanics of a Continuous Medium, Prentice-Hall 1969 •Gurtin: An Introduction to Continuum Mechanics, Academic Press 1981 •Bonet, Wood: Nonlinear Continuum Mechanics for Finite Element Analysis, Cambridge University Press 1997 •Holzapfel: Nonlinear Solid Mechanics, Wiley 2000 

, Module name 537468: Materialmodellierung und -simulation Material modeling and simulation (TAF solid mechanics and dynamics)5 ECTS
Course / lectures: Vorlesung mit Übung: Materialmodellierung und - simulation (4 SWS )-
Lecturers: PD Dr. Julia Mergheim  
Module coordinator: PD Dr. Julia Mergheim Dr.-Ing. Gunnar Possart
Contents: •Grundlagen der Materialmodellierung •Plastizität und Viskoplastizität •Viskoelastizität in 1D •zugehörige Integrationsalgorithmen •Tensornotation, Elastizität in 3D •Plastizität und Viskoplastizität in 3D •Viskoelastizität in 3D •zugehörige Integrationsalgorithmen •  •Fundamentals of material modeling •Plasticity and viscoplasticity •Viscoelasticity in 1D •related integration algorithms •Tensor notation, elasticity in 3D •Plasticity and viscoplasticity in 3D •Viscoelasticity in 3D •related integration algorithms

Integration in curriculum: semester: 1
Module compatibility: Solid Mechanics and Dynamics Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Grading procedure: Oral (100%)
Workload in clock hours: Contact hours: 60 h Independent study: 90 h
Module duration: 1 semester
Teaching and examination language: 1
Bibliography: •Simo and Hughes: Computational Inelasticity. Springer-Verlag, 2000. •Lemaitre and Chaboche: Mechanics of Solid Materials. Cambridge University Press, 1990. •Haupt: Continuum Mechanics and Theory of Materials. Springer Verlag, 2000. •Ottosen and Ristinmaa: The Mechanics of Constitutive Modeling. Elsevier, 2005. 

, Module name 837601: Mikromechanik no english module name available for this module2,5 ECTS
Course / lectures: Vorlesung: Mikromechanik (2 SWS ) -
Lecturers: PD Dr. Julia Mergheim  
Module coordinator: PD Dr. Julia Mergheim
Contents: •Grundlagen der linearen Kontinuumsmechanik •Elastizität •mean-field approaches und variational bounding methods •numerische Homogenisierung •FE^2 Methode •weitere Multiskalen-Methoden
Learning objectives and skills: Die Studierenden •sind vertraut mit den theoretischen Grundlagen der Mikromechanik •können analytische Homogenisierungsmethoden einsetzen •kennen geeignete Homogenisierungsverfahren
Integration in curriculum: semester: 1
Module compatibility: Solid Mechanics and Dynamics Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Grading procedure: Oral (100%)
Module frequency: only in winter semester 13Workload in clock hoursContact hours: 30 h Independent study: 45 h 14 Module duration 1 semester 15Teaching and examination languagegerman 16 Bibliography no Bibliography information available! 
Workload in clock hours: Contact hours: 30 h Independent study: 45 h
Module duration: 1 semester
Teaching and examination language: german
Bibliography: no Bibliography information available! 

Lecturers: Dominic Soldner Prof. Dr.-Ing. Paul Steinmann  
Module coordinator: Prof. Dr.-Ing. Paul Steinmann
Contents: Kinematics •Displacement and deformation gradient •Field variables and material (time) derivatives •Lagrangian and Eulerian framework Balance equations •Stress tensors in the reference and the current configuration •Derivation of balance equations Constitutive equations •Basic requirements, frame indifference •Elastic material behavious, Neo-Hooke Variational formulation and solution by the finite element method •Linearization •Discretization •Newton method
Learning objectives and skills: Die Studierenden •erwerben fundierte Kenntnis über Feldgrößen (Deformation, Verschiebungen, Verzerrungen und Spannungen) als orts- und zeitabhängige Größen im geometrisch nichtlinearen Kontinuum. •verstehen die Zusammenhänge zwischen der Lagrange'schen und Euler'schen Darstellung der kinematischen Beziehungen und Bilanzgleichungen. •können die konstitutiven Gleichungen für elastisches Materialverhalten auf Grundlage thermodynamischer Betrachtungen ableiten. •können die vorgestellten Theorien im Rahmen der finiten Elementmethode für praktische Anwendungen reflektieren. *Objectives* The students •obtain profound knowledge on the description of field variables in non-linear continuum theory •know the relation/transformation between the Lagrangian and the Eulerian framework •are able to derive constitutive equations for elastic materials on the basis of thermodynamic assumptions •are familiar with the basic concept of variational formulations and how to solve them within a finite element framework 

Integration in curriculum: semester: 1
Module compatibility: Solid Mechanics and Dynamics Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Grading procedure: Written examination (100%)
Workload in clock hours: Contact hours: 60 h Independent study: 90 h
Module duration: 1 semester
Teaching and examination language: german
Bibliography: •Betten: Kontinuumsmechanik, Berlin:Springer 1993 


Lecturers: Dominic Soldner PD Dr. Julia Mergheim  
Module coordinator: PD Dr. Julia Mergheim Dr.-Ing. Gunnar Possart
Contents: •Grundlagen der nichtlinearen Kontinuumsmechanik •geometrische und materielle Nichtlinearitäten •Herleitung und Diskretisierung der schwachen Form in materieller und räumlicher Darstellung •konsistente Linearisierung •iterative Lösungsverfahren für nichtlineare Probleme •Lösungsverfahren für transiente Probleme •diskontinuierliche Finite Elemente •Basic concepts in nonlinear continuum mechanics •Geometric and material nonlinearities •Derivation and discretization of the weak form in the material and spatial configuration •Consistent linearization •Iterative solution methods for nonlinear problems •Solution methods for transient problems •Discontinous finite elements
Learning objectives and skills: Die Studierenden •sind vertraut mit der grundlegenden Idee der nichtlinearen Finiten Element Methode •können nichtlineare Probleme der Kontinuumsmechanik modellieren •kennen geeignete Lösungsverfahren für nichtlineare Problemstellungen •kennen geeignete Lösungsverfahren für transiente Probleme The students •are familiar with the basic concept of the finite element method •are able to model nonlinear problems in continuum mechanics •are familiar with solution algorithms for nonlinear problems •are familiar with solution methods for transient problems

Integration in curriculum: semester: 1
Module compatibility: Solid Mechanics and Dynamics Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Grading procedure: Written examination (100%)
Workload in clock hours: Contact hours: 60 h Independent study: 90 h
Module duration: 1 semester
Teaching and examination language: 1
Bibliography: •Wriggers: Nichtlineare Finite Element Methoden, Springer 2001 •Crisfield: Non-linear Finite Element Analysis of Solids and Structures, Wiley, 2003 

, Module name 97265: Numerische und experimentelle Modalanalyse Numerical and experimental modal analysis5 ECTS
Course / lectures: Übung : Übungen zur Numerischen und Experimentellen Modalanalyse (2 SWS )- Vorlesung: Numerische und Experimentelle Modalanalyse (2 SWS )-
Lecturers: Özge Akar Prof. Dr.-Ing. Kai Willner  
Module coordinator: Prof. Dr.-Ing. Kai Willner
Contents: Numerische Modalanalyse •Numerische Lösung des Eigenwertproblems •Modale Reduktion •Dämpfungs-, Massen- und Punktmassenmatrizen •Lösung der Bewegungsgleichungen, Zeitschrittintegration *Experimentelle Modalanalyse •Grundlagen der Signalanalyse: Fourier-Transformation, Aliasing, Leakage •Experimentelle Analyse im Zeit- und Frequenzbereich
Learning objectives and skills: Wissen •Die Studierenden kennen die analytische Lösung für die freie Schwingung einfacher Kontinua wie Stab und Balken. •Die Studierenden kennen verschiedene Verfahren zur Lösung des Eigenwertproblems. •Die Studierenden kennen die Methode der modalen Reduktion. •Die Studierenden kennen verschiedene Möglichkeiten der Dämpfungsbeschreibung. •Die Studierenden kennen den Unterschied zwischen der konsistenten Massenmodellierung und Punktmassen. •Die Studierenden kennen verschiedene Verfahren zur Zeitschrittintegration. •Die Studierenden kennen die Grundlagen der Signalanalyse im Frequenzbereich auf der Basis der Fouriertransformation. •Die Studierenden kennen die Voraussetzungen für die Anwendbarkeit der numerischen und experimentellen Modalanalyse. •Die Studierenden kennen die prinzipielle Vorgehensweise bei der experimentellen Modalanalyse sowie die entsprechenden Fachtermini. •Die Studierenden kennen verschiedene Messaufnehmer und Anregungsverfahren. •Die Studierenden kennen die verschiedenen Übertragungsfrequenzgänge und Verfahren zur Bestimmung der modalen Parameter. •Die Studierenden kennen verschiedene Verfahren zur Überprüfung der Linearität eines Systems. Verstehen 


Integration in curriculum: semester: 1
Module compatibility: Solid Mechanics and Dynamics Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Grading procedure: Written examination (100%) 

Workload in clock hours: Contact hours: 60 h Independent study: 90 h
Module duration: 1 semester
Teaching and examination language: german
Bibliography: •Bode, H.: Matlab-Simulink: Analyse und Simulation dynamischer Systeme. Stuttgart, Teubner, 2006 •Bathe, K.; Finite-Elemente-Methoden. Berlin, Springer, 2001 •Ewins, D.J.: Modal Testing. Research Studies Press, 2000 

, Module name 830631: Strukturoptimierung in der virtuellen Produktentwicklung Structural optimization in virtual product development5 ECTS
Course / lectures: Vorlesung mit Übung: Strukturoptimierung in der virtuellen Produktentwicklung (0 SWS )-
Lecturers: Prof. Dr. Ralf Meske  
Module coordinator: Prof. Dr. Ralf Meske
Contents: •Einführung in die Strukturoptimierung •Mathematische Grundlagen •Bestimmung von Systemantworten und Sensitivitäten •Optimierung mit Excel •Parameteroptimierung mit gradientenbasierten Algorithmen •Formoptimierung •Topologieoptimierung •Globale Approximationsmethoden •Globale Optimierungsalgorithmen
Learning objectives and skills: Die Studierenden •lernen die Grundlagen unterschiedlicher Optimierungsverfahren kennen •bekommen anhand aktueller Praxisbeispiele aus der Fahrzeug- und Motorenentwicklung Einblick in deren Anwendung Fachkompetenz Wissen •Die Studierenden kennen die unterschiedlichen Methoden zur Strukturoptimierung im Rahmen der virtuellen Produktentwicklung. •Sie verstehen die mathematischen Grundlagen der unterschiedlichen Optimierungsverfahren. •Sie erkennen das wirtschaftliche Potential einer optimierungsbasierten Entwicklungsmethodik hinsichtlich Entwicklungszeit und Entwicklungskosten. Verstehen •Die Studierenden verstehen die Definition einer Optimierungsaufgabe mit Zielfunktion(en), Nebenbedingungen und Designvariablen. •Sie können Einschränkungen aus der Fertigung durch passende Fertigungsnebenbedingungen in der Optimierung berücksichtigen. •Sie verstehen die Möglichkeiten und Einschränkungen der unterschiedlichen Optimierungsverfahren. Anwenden •Im Rahmen der Rechnerübung lernen die Studierenden die Anwendung der Berechnungssoftware Abaqus und Optimierungssoftware TOSCA. •Die Studierenden können die Lerninhalte anhand klar formulierter Übungsaufgaben anwenden und nachvollziehen. 

Integration in curriculum: semester: 1
Module compatibility: Solid Mechanics and Dynamics Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Grading procedure: Oral (100%)
Module frequency: only in summer semester 13Workload in clock hoursContact hours: 60 h 
Workload in clock hours: Contact hours: 60 h 

Module duration: 1 semester
Teaching and examination language: german
Bibliography: •L. Harzheim. Strukturoptimierung: Grundlagen und Anwendungen. Harri Deutsch 2014 •M. P. Bendsoe, O. Sigmund. Topology Optimization: Theory, Methods and Applications. Springer 2002 •K.-J. Bathe. Finite-Elemente-Methoden, Springer 2001 


, Module name 343279: Praktikum Regelungstechnik II Laboratory: Control engineering II2,5 ECTS
Course / lectures: Praktikum : Praktikum Regelungstechnik II (3 SWS ) -
Lecturers: Dr.-Ing. Andreas Michalka Prof. Dr.-Ing. Knut Graichen  
Module coordinator: Prof. Dr.-Ing. Knut Graichen Dr.-Ing. Andreas Völz
Contents: Im Praktikum werden fortgeschrittene Methoden der Regelungstechnik auf verschiedene Versuchsaufbauten angewandt. Zur Auswahl stehen Versuche zu fünf Vertiefungsvorlesungen, von denen drei bearbeitet werden müssen. Jeder Versuch erstreckt sich über zwei Termine, die entweder am selben Aufbau oder an zwei verschiedenen Aufbauten durchgeführt werden. •Digitale Regelungen: Inverses Pendel (zwei Termine) •Nonlinear Control Systems: Laborkran und Ball-auf-Platte (jeweils ein Termin) •Numerical Optimization and Model Predictive Control: Ball-auf- Platte und Laborkran (jeweils ein Termin) •Robotics 1: Panda-Roboter (zwei Termine) •Ereignisdiskrete Systeme: Aufzug (zwei Termine)
Learning objectives and skills: Die Studierenden können •Methoden aus drei vertiefenden Lehrveranstaltungen der Regelungstechnik in Simulationen und an Laboraufbauten anwenden •anfallende Versuchsergebnisse regelungstechnisch interpretieren und in vertiefter Weise bewerten •mit aktuellen Werkzeugen und Geräten der Steuerungs- und Regelungstechnik praktisch umgehen
Integration in curriculum: semester: 1
Module compatibility: Automatic Control Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: 1
Grading procedure: 1
Module frequency: only in winter semester 13Workload in clock hoursContact hours: 45 h Independent study: 30 h 14 Module duration 1 semester 15Teaching and examination languagegerman 16 Bibliography no Bibliography information available! 
Workload in clock hours: Contact hours: 45 h Independent study: 30 h
Module duration: 1 semester
Teaching and examination language: german
Bibliography: no Bibliography information available! 

, Module name 94968: Maschinelles Lernen in der Regelungstechnik no english module name available for this module5 ECTS
Course / lectures: Vorlesung: Maschinelles Lernen in der Regelungstechnik (2 SWS )5 ECTS Übung : Maschinelles Lernen in der Regelungstechnik - Übungen (2 SWS )5 ECTS
Lecturers: Dr.-Ing. Andreas Michalka Johannes Reinhard  
Module coordinator: Prof. Dr.-Ing. Knut Graichen Dr.-Ing. Andreas Michalka
Contents: Die Vorlesung vermittelt Grundbegriffe und Grundlagen zu Methoden des Maschinellen Lernens, die aktuell verstärkt in der Regelungstechnik Einzug halten. Die Anwendungen gehen hier von der einfachen Parameteridentifikationsaufgabe bis hin zu gänzlich auf Maschinellem Lernen basierenden Regelungsverfahren. Inhalte der Vorlesung: •Grundbegriffe des Maschinellen Lernens und von Zufallsprozessen •Iterativ lernende Regelung •Lineare Regression •Gaußprozess-Regression •Logistische Regression und Support Vector Machine •Neuronale Netze •Reinforcement Learning
Learning objectives and skills: Lernziele und Kompetenzen: Die Studierenden: •können die Grundbegriffe des maschinellen Lernens und von dafür eingesetzten Optimierungsverfahren sowie der Anwendung der Methoden in der Regelungstechnik erklären. •können verschiedene Verfahren des maschinellen Lernens voneinander abgrenzen und im Detail erläutern. •können verschiedene Verfahren des maschinellen Lernens in regelungstechnischen Anwendungen umsetzen.
Integration in curriculum: semester: 1
Module compatibility: Automatic Control Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Written examination (90 minutes)
Grading procedure: Written examination (100%)
Module frequency: only in winter semester 13Workload in clock hoursContact hours: 60 h Independent study: 90 h 14 Module duration 1 semester 
Workload in clock hours: Contact hours: 60 h Independent study: 90 h
Module duration: 1 semester 

Teaching and examination language: german
Bibliography: no Bibliography information available! 

, Module name 92347: Mechatronic components and systems (MCS) no english module name available for this module5 ECTS
Course / lectures: Vorlesung: Mechatronic components and systems (2 SWS )5 ECTS Übung : Mechatronic components and systems (UE) (2 SWS )-
Lecturers: Prof. Dr.-Ing. Philipp Beckerle  
Module coordinator: Prof. Dr.-Ing. Philipp Beckerle
Contents: System thinking and integration - Interactions of hardware and software - Engineering design methods Mechanical components - Energy conductors and transformers - Control elements and energy storages Actuators - Electrodynamical and electromagnetic actuators - Fluid actuators and unconventional actuators •Sensors for measuring mechanical quantities •Control and information processing
Learning objectives and skills: On successful completion of this module, students will be able to: •Holistically understand mechatronic systems and optimize them using methods of system integration, control, and information processing. •Grundlegende mechanische Komponenten unterscheiden, charakterisieren, modellieren und im Rahmen des Systementwurfs auswählen und dimensionieren. •Distinguish, characterize, model, and select basic mechanical components to dimension them in terms of system design. •Describe electrodynamic, electromagnetic, fluid power, and unconventional actuators phenomenologically and mathematically to dimension them considering the overall system. •Describe sensors for measuring mechanical quantities phenomenologically and mathematically and dimension them taking into account the overall system.
Prerequisites: None
Integration in curriculum: semester: 1
Module compatibility: Automatic Control Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013 Mechatronics Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Written examination (90 minutes)
Grading procedure: Written examination (100%)
Module frequency: only in summer semester 13Workload in clock hoursContact hours: 60 h 
Workload in clock hours: Contact hours: 60 h 

Module duration: 1 semester
Teaching and examination language: english
Bibliography: •Rinderknecht, S. (2018). Einführung in die Mechatronik für den Maschinenbau. Shaker. •Isermann, R. (2007). Mechatronische Systeme: Grundlagen. Springer. •Janocha, H. (Ed.). (2013). Aktoren: Grundlagen und Anwendungen. Springer 

, Module name 92529: Nonlinear Control Systems no english module name available for this module5 ECTS
Course / lectures: Übung : Nonlinear Control Systems - Exercises (1 SWS )- Vorlesung mit Übung: Nonlinear Control Systems (4 SWS )5 ECTS
Lecturers: Daniel Landgraf Prof. Dr.-Ing. Knut Graichen  
Module coordinator: Prof. Dr.-Ing. Knut Graichen
Contents: Many control problems are nonlinear by nature. Classical control methods are based on linear approximations or a linearization of these systems in the neighborhood of setpoints to be controlled. In contrast to linear control theory, this module focuses on advanced nonlinear methods for the analysis and control of nonlinear systems by exploiting structural properties. In summary, the course covers the following topics: •Examples of nonlinear physical systems and nonlinear phenomena •Introduction to computer algebra software •Analysis of nonlinear systems •Stability of nonlinear systems (Lyapunov stability) •Lyapunov-based control design (Backstepping) •Reachability/controllability and observability of nonlinear systems •Exact linearization via feedback •Differential flatness of nonlinear systems •Flatness-based feedforward and feedback control of nonlinear systems
Learning objectives and skills: After successful completion of the module, students will be able to •describe and analyze nonlinear systems •determine the input/output behavior of nonlinear systems •design nonlinear state feedback controllers via exact input- output and input-state linearization •apply the concept of differential flatness for the feedforward feedback control of nonlinear systems •use computer algebra software for the analysis and control design of nonlinear systems
Integration in curriculum: semester: 6
Module compatibility: Automatic Control Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Written examination (90 minutes)
Grading procedure: Written examination (100%)
Module frequency: only in summer semester 13Workload in clock hoursContact hours: 60 h 
Workload in clock hours: Contact hours: 60 h 

Module duration: 1 semester
Teaching and examination language: english
Bibliography: •H.K. Khalil. Nonlinear Systems, Prentice Hall, 2002 •S. Sastry. Nonlinear Systems, Springer, 1999 •A. Isidori. Nonlinear Control Systems, Springer, 3. Auflage, 1995 •J. Adamy. Nichtlineare Regelungen, Springer, 2009 •J.-J. Slotine, W. Li. Applied Nonlinear Control, Prentice Hall, 1991 •M. Vidyasagar. Nonlinear Systems Analysis, Prentice Hall, 2. Auflage, 1993 •M. Krstic, I. Kanellakopoulos, P. Kokotovic. Nonlinear and Adaptive Control Design, John Wiley & Sons, 1995 

, Module name 92528: Numerical Optimization and Model Predictive Control no english module name available for this module5 ECTS
Course / lectures: Übung : Numerical Optimization and Model Predictive Control - Exercises (1 SWS )- Vorlesung mit Übung: Numerical Optimization and Model Predictive Control (4 SWS )5 ECTS
Lecturers: Paulina Spenger Dr.-Ing. Andreas Völz Prof. Dr.-Ing. Knut Graichen  
Module coordinator: Prof. Dr.-Ing. Knut Graichen
Contents: Many problems in economy and industry require an optimal solution under consideration of specific criteria and constraints. From a mathematical point of view, this requires the numerical solution of a parametric optimization problem or a dynamic optimization problem. The latter formulation accounts for the dynamics of the underlying process and is particularly relevant in the context of optimal control and model predictive control (MPC). In summary, the course covers the following topics: •Introduction to and examples of static and dynamic optimization problems •Unconstrained numerical optimization (optimality conditions, numerical methods) •Constrained numerical optimization (linear/quadratic/nonlinear problems, optimality conditions, numerical methods) •Dynamical optimization / optimal control problems (calculus of variations, optimality conditions, PMP, numerical methods) •Nonlinear model predictive control (formulations, stability, real- time solution)
Learning objectives and skills: After successful completion of the module, students will be able to •differentiate the problem classes of parametric and dynamic optimization •formulate and analyze practical optimization problems •derive and solve the optimality conditions for unconstrained and constrained optimization problems using state-of-the-art software tools •classify the different formulations and stability criteria for nonlinear model predictive control •design a model predictive controller for a given control task and analyze the performance and stability properties in closed loop •realize and implement a real-time MPC for highly dynamical nonlinear systems with sampling times in the (sub)millisecond range using modern state-of-the-art (N)MPC software
Prerequisites: Basic knowledge of advanced mathematics (especially linear algebra) 

Integration in curriculum: semester: 6
Module compatibility: Automatic Control Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Written examination (60 minutes)
Grading procedure: Written examination (100%)
Module frequency: only in summer semester 13Workload in clock hoursContact hours: 60 h Independent study: 90 h 14 Module duration 1 semester 15Teaching and examination languageenglish 16 BibliographyS. Boyd, L. Vandenberghe. Convex Optimization. Cambridge University Press, 2004 J. Nocedal, S.J. Wright. Numerical Optimization. New York: Springer, 2006 M. Papageorgiou, M. Leibold, M. Buss. Optimierung. Berlin: Springer, 2012 C.T. Kelley. Iterative Methods for Optimization. Society for Industrial und Applied Mathematics (SIAM), 1999 D.P. Bertsekas. Nonlinear Programming. Belmont. Athena Scientific, 1999 E. Camacho, C. Alba. Model Predictive Control. 2. Auflage, Springer, 2004 L. Grüne, J. Pannek. Nonlinear Model Predictive Control: Theory and Algorithms, Springer, 2011 
Workload in clock hours: Contact hours: 60 h Independent study: 90 h
Module duration: 1 semester
Teaching and examination language: english
Bibliography: S. Boyd, L. Vandenberghe. Convex Optimization. Cambridge University Press, 2004 J. Nocedal, S.J. Wright. Numerical Optimization. New York: Springer, 2006 M. Papageorgiou, M. Leibold, M. Buss. Optimierung. Berlin: Springer, 2012 C.T. Kelley. Iterative Methods for Optimization. Society for Industrial und Applied Mathematics (SIAM), 1999 D.P. Bertsekas. Nonlinear Programming. Belmont. Athena Scientific, 1999 E. Camacho, C. Alba. Model Predictive Control. 2. Auflage, Springer, 2004 L. Grüne, J. Pannek. Nonlinear Model Predictive Control: Theory and Algorithms, Springer, 2011 

, Module name 94961: Schätzverfahren in der Regelungstechnik no english module name available for this module5 ECTS
Course / lectures: Vorlesung mit Übung: Schätzverfahren in der Regelungstechnik (4 SWS )5 ECTS Übung : Schätzverfahren in der Regelungstechnik - Übungen (2 SWS )-
Lecturers: Prof. Dr. Thomas Moor Yiheng Tang  
Module coordinator: Prof. Dr. Thomas Moor
Contents: •Überbestimmte lineare Gleichungssysteme zur Parameter und Zustandsschätzung •Least Squares Schätzer via quadratischer Ergänzung •Least Squares Schätzer via Projektionssatz •Linear Least Mean Squares Schätzer stochastischer Größen •Kalman-Filter •Extended Kalman-Filter
Learning objectives and skills: Die Studierenden •erkennen, ob und wie eine regelungstechnische Problemstellung in dem vorgestellten Rahmen der Schätzverfahren formuliert und gelöst werden kann •erläutern die herangezogenen mathematischen Grundlagen, insbesondere aus der linearen Algebra •können die vermittelten Ansätze im Kontext von einfachen Beispielen anwenden und die jeweils erzielten Ergebnisse kritisch bewerten.
Integration in curriculum: semester: 1
Module compatibility: Automatic Control Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Written examination (90 minutes)
Grading procedure: Written examination (100%)
Workload in clock hours: Contact hours: 60 h Independent study: 90 h
Module duration: 1 semester
Teaching and examination language: german
Bibliography: Kailath et al.; Linear Estimation, Prentice Hall, 2000. 


, Module name 45435: Strömungsakustik Aeroacoustics5 ECTS
Lecturers: apl.Prof.Dr. Stefan Becker  
Module coordinator: apl.Prof.Dr. Stefan Becker
Contents: •strömungsmechanische Grundlagen (Grundgleichungen, Turbulenz, Wirbelstärke, Kompressible Strömungen) •Akustik (Wellengleichung, Greensche Funktion, Monopol, Dipol und Quadrupole) •Akustische Analogie (Lighthill-Analogie, Curle-Theorie, Vortex- schall, APEGleichungen) •Aeroakustische Messverfahren und Messeinrichtungen •Hybride numerische CAA-Verfahren •Anwendungen: Tonaler Schall: Zylinder •Breitbandlärm: Stufe Freistrahllärm, Tragflügellärm, Turbomaschinen •Windenergieanlagen, Akustik der menschlichen Stimme •Beurteilung der Schallwahrnehmung
Learning objectives and skills: Die Studierenden •verstehen und erklären die Grundlagen der strömungsinduzierten Schallabstrahlung und deren Einfluss auf den Menschen •erhalten in der Verbindung von Strömungsmechanik, Strukturmechanik und Akustik Kompetenzen in der Behandlung komplexer physikalischer Systeme •können experimentelle und numerische Verfahren zur Lösung aeroakustischer Probleme anwenden •analysieren sehr aktuelle Fragestellungen und Anwendungen, die sich von der Medizintechnik über die Fahrzeugakustik, Prozessanlagen bis hin zur Akustik von Windenergieanlagen erstrecken
Prerequisites: None
Integration in curriculum: semester: 1
Module compatibility: Thermo and Fluid Dynamics Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Oral (30 minutes)
Grading procedure: Oral (100%)
Module frequency: only in winter semester 13Workload in clock hoursContact hours: 60 h Independent study: 90 h 14 Module duration 1 semester 15Teaching and examination languagegerman 
Workload in clock hours: Contact hours: 60 h Independent study: 90 h
Module duration: 1 semester
Teaching and examination language: german 

Bibliography: •Lehrbuch: Grundlagen der Strömungsmechanik, Franz Durst •Vorlesungsskript: Strömungsakustik, Kaltenbacher/Becker 

, Module name 43110: Angewandte Thermofluiddynamik Applied thermo-fluid dynamics5 ECTS
Course / lectures: Vorlesung: Angewandte Thermofluiddynamik (2 SWS )- Übung : Angewandte Thermofluiddynamik - Übung (1 SWS )-
Lecturers: Vojislav Jovicic Dr.-Ing. Ana Zbogar-Rasic  
Module coordinator: Vojislav Jovicic
Contents: Although there are no special pre-requirements for this course, due to the nature of the topic and selected examples, course is more suitable for students with basic background in thermodynamics and fluid mechanics followed by higher interests in topics related to energy, efficiency, combustion systems, energy transformation, boilers and heating systems, pollutant reduction, etc. Goal of the course is to explain how some basic chemical, thermodynamical and fluid mechanical phenomena are used in engineering for practical conventional and state-of-art applications. As an example, course follows a life cycle of single oil droplet starting with its extraction from the earth and ending in the combustion chamber of household heating system. By following oil droplet on its way to the final use, course is introducing different energy transformations and explains different physical phenomena and technical solutions used in each phase of an oil droplet life cycle. In this way, course discusses topics like: •world-wide and local trends in energy production, •production of different fractions of liquid fossil fuels, •spray formation mechanisms and applied technical solutions, •evaporation process and novel evaporation techniques, •conventional and novel combustion technologies, •environmental impact and pollutant emissions, •household heating systems and its components, etc. Within the course, principles of operations for different parts of conventional household heating systems are explained including related basic physical phenomena. Apart from conventional systems, students are introduced to some state-of-art solutions like cool-flame or combustion within porous inert media. The lectures are followed by exercises and practical laboratory demonstrations.
Learning objectives and skills: Students are instructed •to improve their knowledge on world-wide and local energy trends, •to get overview of the complexity of energy efficience, low pollutant use of fossil fuels today, •to learn more about some practical use of basic chemical, thermodynamical and fluid mechanical phenomena, 

Prerequisites: None
Integration in curriculum: semester: 1
Module compatibility: Thermo and Fluid Dynamics Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Oral (30 minutes)
Grading procedure: Oral (100%)
Workload in clock hours: Contact hours: 45 h Independent study: 105 h
Module duration: 1 semester
Teaching and examination language: german
Bibliography: •Cengel and Boles: Thermodynamics: An Engineering Approach. McGraw-Hill •Dibble: Verbrennung Physikalisch-Chemische Grundlagen, Modellierung und Simulation, Experimente, Schadstoffentstehung. Springer •Kenneth K. Kuo: Principles of Combustion. John Wiley & Sons, Inc. •Howell, Hall and Ellzey: Combustion of Hydrocarbon Fuels within Porous Inert Media. Elsevier •Baukal: Industrial Burners - Handbook. CRC Press 

, Module name 45291: Angewandte Thermofluiddynamik (Fahrzeugantriebe) Applied thermo-fluid dynamics (Power train systems)5 ECTS
Course / lectures: Übung : Übung zur Angewandten Thermofluiddynamik (Fahrzeugantriebe) für CBI, MB und ET (1 SWS )2 ECTS Vorlesung: Angewandte Thermofluiddynamik (Fahrzeugantriebe) für CBI, MB und ET (Vorlesung) (2 SWS )3 ECTS Exkursion : Exkursion zur Vorlesung Angewandte Thermofluiddynamik (Fahrzeugantriebe) (1 SWS )1 ECTS
Lecturers: Lukas Strauß Prof. Dr.-Ing. Michael Wensing  
Module coordinator: Dr.-Ing. Sebastian Rieß Prof. Dr.-Ing. Michael Wensing
Contents: Motorische Verbrennung: •Einführung: Funktionsweise von Hubkolbenmotoren im Vergleich zu anderen Wärmekraftmaschinen, 2- und 4- Taktverfahren, Otto- und Dieselmotoren, Regelungsverfahren, Marktsituation •Bauformen von Verbrennungsmotoren •Kraftstoffe und ihre Eigenschaften, Kraftstoff-Kenngrößen in der motorischen Verbrennung •Kenngrößen von Verbrennungsmotoren •Konstruktionselemente: Zylinderblock, Zylinderkopf, Kurbeltrieb, Kolbenbaugruppe, Ventiltrieb, Steuertrieb •Motormechanik: Mechanische Belastungen am Beispiel des Massenausgleichs in Mehrzylindermotoren und des Ventiltriebs •Thermodynamik des Verbrennungsmotors: Vergleichsprozessrechnung offene und geschlossene Vergleichsprozesse •Ladungswechsel, Kenngrößen des Ladungswechsels, Aufladung von Verbrennungsmotoren: Turbo- und mechanische Aufladung •Einspritz- und Zündsysteme, Steuerung- und Regelung von Verbrennungsmotoren •Gemischbildung / Verbrennung / Schadstoffe in Otto- und Dieselmotoren, gesetzl. vorgeschriebene Prüfzyklen Brennstoffzellen: •Grundlagen und Aufbau einer Brennstoffzelle •Thermodynamik der Brennstoffzelle •Einordung Brennstoffzellentechnologie in Transport und Verkehr •Verschiedene Arten von Brennstoffzellen •Alterungsvorgänge von Brennstoffzellen •Fahrzeugperipherie von Brennstoffzellen •Zukünftige Brennstoffzellensysteme 

Learning objectives and skills: Die Studierenden: •Kennen die Grundlagen, Begriffe und Kenngrößen der Motoren, Brennstoffzellen- und Akkumulatortechnik •Kennen Bauformen und Prozessführung von Verbrennungsmotoren, Brennstoffzellen und batterieelektrischen Systemen •Kennen die Bauteile/Baugruppen, Bauformen und wesentliche Berechnungsverfahren von Verbrennungsmotoren, Brennstoffzellen (inkl. Peripherie) und batterieelektrischen Systemen und können diese anwenden und weiterentwickeln •Können Zusammenhänge zwischen Kraftstoffeigenschaften und motorischen Brennverfahren und Maschinenausführungen herstellen und weiterentwickeln •Können Wirkungsgrade unterschiedlicher Antriebssysteme anhand von (Vergleichs#)Prozessrechnungen analysieren, bewerten und weiterentwickeln •Kennen Ladungswechselsysteme für Otto- und Dieselmotoren, deren Eigenschaften und Kenngrößen, kennen Auflade- Systeme und grundlegende Berechnungen von Auflade- Systemen •Kennen typische Gemischbildungs- und Zündsysteme, Regelverfahren von Verbrennungsmotoren •Kennen Peripherie- und Versorgungssysteme von Brennstoffzellen und batterieelektrischen Systemen und können grundlegende charakteristische Größen berechnen
Prerequisites: None
Integration in curriculum: semester: 1
Module compatibility: Thermo and Fluid Dynamics Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Variable
Grading procedure: Variable (100%)
Workload in clock hours: Contact hours: 45 h Independent study: 105 h
Module duration: 1 semester
Teaching and examination language: german
Bibliography: •Merker, Teichmann(Hrsg.): Grundlagen Verbrennungsmotoren, Springer (2018) 


, Module name 42903: Clean combustion technology with laboratory course no english module name available for this module7,5 ECTS
Course / lectures: Vorlesung: Clean Combustion Technology (2 SWS ) 2,5 ECTS Übung : Exercises in Clean Combustion Technology (2 SWS )2,5 ECTS Praktikum : Lab Course in Clean Combustion Technology (3 SWS )2,5 ECTS
Lecturers: Florian Bauer Prof. Dr.-Ing. Stefan Will  
Module coordinator: Simon Aßmann Prof. Dr.-Ing. Stefan Will
Contents: •Einführung in die Verbrennungstechnik: Grundlagen, laminare Flammen, turbulente Flammen, Verbrennungsmodellierung , Schadstoffbildung, Anwendungsbeispiele. •Einführung in numerische Simulation von Strömungen mit Verbrennung. Content: •Introduction to combustion technology: Fundamentals, laminar flames, turbulent flames, conservation equations, modeling of combustion systems, pollutant formation, applications. •Introduction in numerical simulation of flows with combustion.

Prerequisites: Grundwissen Thermodynamik und Strömungsmechanik hilfreich. Auch für StudentInnen anderer Fachrichtungen geeignet (Chemie, Physik, Mathematik, Maschinenbau, Mechatronik, Computational Engineering). Prerequisites: Basic Thermodynamics and Fluid Dynamics is helpful. Students of other subjects (Chemistry, Physics, Mathematics, Mechanical Engineering, Mechatronics, Computational Engineering) can also participate.
Integration in curriculum: semester: 1
Module compatibility: Thermo and Fluid Dynamics Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Variable Variable
Grading procedure: Variable (0%) Variable (100%)
Workload in clock hours: Contact hours: 90 h Independent study: 135 h
Module duration: 1 semester
Teaching and examination language: english
Bibliography: •Warnatz, J., Maas, U., Dibble, R. "Verbrennung", 3. Auflage, Springer-Verlag, 2001 •Warnatz, J., Maas, U., Dibble, R. "Combustion", 4th Edition, Springer-Verlag, 2006 •Joos, F. "Technische Verbrennung", Springer-Verlag, 2006 

, Module name 45485: Numerische Methoden der Thermofluiddynamik II mit Praktikum Numerical methods in thermal fluid dynamics II (with laboratory)7,5 ECTS
Course / lectures: Übung : Numerische Methoden der Thermofluiddynamik II - Übung (1 SWS )- Vorlesung: Numerische Methoden der Thermofluiddynamik II (2 SWS )5 ECTS Praktikum : Numerische Methoden der Thermofluiddynamik II - Praktikum (2 SWS )2,5 ECTS
Lecturers: Dr.-Ing. Manuel Münsch Prof. Dr. Philipp Schlatter Md Ashfaqul Bari  
Module coordinator: Prof. Dr.-Ing. Antonio Delgado
Contents: 1. Curvilinear grids 2. Turbulent flows 3. Direct Numerical Simulations (DNS) 4. Reynolds Averaged Navier-Stokes equations (RANS) 5. Large Eddy Simulation (LES) 6. Particulate and multiphase flows 7. Fluid-structure Interaction 8. Flows in porous media
Learning objectives and skills: The students •Know how to solve CFD problems in curvilinear grids •Understand the main properties of turbulent flows •Understand the strengths and weaknesses of widely used simulation models of turbulence •Select the appropriate model and boundary equations for a given application •Be able to perform turbulence and complex flows simulations with OpenFOAM •Work in team and write a report describing the results and significance of a simulation of turbulent flow
Prerequisites: Strömungsmechanik Vertiefung (STM II)
Integration in curriculum: semester: 1
Module compatibility: Thermo and Fluid Dynamics Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Oral (30 minutes) Practical achievement
Grading procedure: Oral (100%) Practical achievement (0%)
Module frequency: only in summer semester 13Workload in clock hoursContact hours: 90 h Independent study: 135 h 
Workload in clock hours: Contact hours: 90 h Independent study: 135 h 

Module duration: 1 semester
Teaching and examination language: english
Bibliography: •J. H. Ferziger, M. Peric, Numerische Strömungsmechanik, Spinger, 2008 

, Module name 45488: Numerische Methoden der Thermofluiddynamik I mit Praktikum Numerical methods in thermal fluid dynamics I (with laboratory)7,5 ECTS
Course / lectures: Praktikum : Numerische Methoden der Thermofluiddynamik - Praktikum (3 SWS )2,5 ECTS
Lecturers: Suharto Saha Dr.-Ing. Manuel Münsch  
Module coordinator: Dr.-Ing. Manuel Münsch
Contents: •Governing equations and models in fluid mechanics •Steady problems: the Finite-Difference Method (FDM) •Unsteady problems: methods of time integration •Advection-diffusion problems •The Finite-Volume Method •Solution of the incompressible Navier-Stokes equations •Grids and their properties •Boundary conditions The theory given in the lectures is extended and applied to several transport problems in this exercise class: •discretization of the Blasius similarity equations •parabolization and discretization of the boundary layer equations •finite-Difference discretization of heat-transfer problems •approximation of boundary conditions •finite-Volume discretization of heat-transfer problems •discretization and time-stepping of the Navier-Stokes equations •projections methods: the SIMPLE and PISO Methods The theory given in the lectures and applied in the exercise class is implemented into computer programs in this practical class. The following problems are solved with matlab/octave programs: •the Blasius-similarity equations •heat-transfer problems •boundary layer equations •flow of fluid in a lid-driven cavity
Learning objectives and skills: The students who successfully take this module should: •understand the physical meaning and mathematical character of the terms in advection-diffusion equations and the Navier- Stokes equations •assess under what circumstances some terms in these equations can be negelcted •formulate a FDM for the solution of unsteady transport equations •asess the convergence, consistency and stability of a FDM •formulate a FVM for the solution of unsteady transport equations •know how to solve the Navier-Stokes equation with the FVM 

Prerequisites: None
Integration in curriculum: semester: 1
Module compatibility: Thermo and Fluid Dynamics Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Oral (30 minutes) Practical achievement
Grading procedure: Oral (100%) Practical achievement (0%)
Workload in clock hours: Contact hours: 90 h Independent study: 135 h
Module duration: 1 semester
Teaching and examination language: english
Bibliography: •J.H. Ferziger, M. Peric, Computational Methods for Fluid Dynamics, Spinger, 2008 •R.J. Leveque, Finite Difference Methods for Ordinary and Partial Differential Equations, SIAM, 2007 

, Module name 45487: Numerische Methoden der Thermofluiddynamik I Numerical methods in thermal fluid mechanics I5 ECTS
Course / lectures: Vorlesung: Numerische Methoden der Thermofluiddynamik (2 SWS )- Übung : Numerische Methoden der Thermofluiddynamik (1 SWS )5 ECTS
Lecturers: Dr.-Ing. Manuel Münsch  
Module coordinator: Dr.-Ing. Manuel Münsch
Contents: •Governing equations and models in fluid mechanics •Steady problems: the Finite-Difference Method (FDM) •Unsteady problems: methods of time integration •Advection-diffusion problems •The Finite-Volume Method •Solution of the incompressible Navier-Stokes equations •Grids and their properties •Boundary conditions The theory given in the lectures is extended and applied to several transport problems in this exercise class: •discretization of the Blasius similarity equations •parabolization and discretization of the boundary layer equations •finite-Difference discretization of heat-transfer problems •approximation of boundary conditions •finite-Volume discretization of heat-transfer problems •discretization and time-stepping of the Navier-Stokes equations •projections methods: the SIMPLE and PISO Methods
Learning objectives and skills: The students who successfully take this module should: •understand the physical meaning and mathematical character of the terms in advection-diffusion equations and the Navier- Stokes equations •assess under what circumstances some terms in these equations can be negelcted •formulate a FDM for the solution of unsteady transport equations •asess the convergence, consistency and stability of a FDM •formulate a FVM for the solution of unsteady transport equations •know how to solve the Navier-Stokes equation with the FVM •implmement programs in matlab/octave to simulate fluid flow •assess the quality and validity of a fluid flow simulation •work in team and write a report describing the results and significance of a simulation •know the different types of grids and when to use them The students who successfully solve the exercises should: •be able to discretize transport problems with the finite- difference and the finite-volume methods 

Prerequisites: None
Integration in curriculum: semester: 1
Module compatibility: Computational Material Sciences Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013 Thermo and Fluid Dynamics Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Oral (30 minutes)
Grading procedure: Oral (100%)
Workload in clock hours: Contact hours: 45 h Independent study: 105 h
Module duration: 1 semester
Teaching and examination language: english
Bibliography: •J.H. Ferziger, M. Peric, Computational Methods for Fluid Dynamics, Spinger, 2008 •R.J. Leveque, Finite Difference Methods for Ordinary and Partial Differential Equations, SIAM, 2007 

, Module name 45486: Numerische Methoden der Thermofluiddynamik II Numerical methods in thermal fluid mechanics II5 ECTS
Course / lectures: Übung : Numerische Methoden der Thermofluiddynamik II - Übung (1 SWS )- Vorlesung: Numerische Methoden der Thermofluiddynamik II (2 SWS )5 ECTS
Lecturers: Dr.-Ing. Manuel Münsch Prof. Dr. Philipp Schlatter  
Module coordinator: Dr.-Ing. Manuel Münsch
Contents: 1. Curvilinear grids 2. Turbulent flows 3. Direct Numerical Simulations (DNS) 4. Reynolds Averaged Navier-Stokes equations (RANS) 5. Large Eddy Simulation (LES) 6. Particulate and multiphase flows 7. Fluid-structure Interaction 8. Flows in porous media
Learning objectives and skills: The students •Know how to solve CFD problems in curvilinear grids •Understand the main properties of turbulent flows •Understand the strengths and weaknesses of widely used simulation models of turbulence •Select the appropriate model and boundary equations for a given application •Be able to perform turbulence and complex flows simulations with OpenFOAM •Work in team and write a report describing the results and significance of a simulation of turbulent flow
Prerequisites: None
Integration in curriculum: semester: 1
Module compatibility: Thermo and Fluid Dynamics Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Oral (30 minutes)
Grading procedure: Oral (100%)
Workload in clock hours: Contact hours: 45 h Independent study: 105 h
Module duration: 1 semester
Teaching and examination language: english
Bibliography: •J. H. Ferziger, M. Peric, Numerische Strömungsmechanik, Spinger, 2008 

, Module name 44790: Partikelbasierte Strömungsmechanik no english module name available for this module5 ECTS
Course / lectures: Vorlesung: Partikelbasierte Strömungsmechanik (PSTM-V) (2 SWS )- Übung : Partikelbasierte Strömungsmechanik (PSTM- UE) (1 SWS )-
Lecturers: Dr. Achim Sack  
Module coordinator: Prof. Dr. Thorsten Pöschel
Contents: •Gegenüberstellung von partikelbasierten und gitterbasierten Verfahren der Strömungsmechanik • ºDirect Simulation Monte Carlo • ºStochastic Rotation Dynamics ºMulti-Particle Collision Dynamics • ºSmoothed Particle Hydrodynamics •Comparison of particle-based and grid-based methods in fluid mechanics • ºDirect Simulation Monte Carlo • ºStochastic Rotation Dynamics ºMulti-Particle Collision Dynamics • ºSmoothed Particle Hydrodynamics
Learning objectives and skills: Die Studierenden: •kennen die Vor- und Nachteile partikelbasierter Verfahren im Vergleich zu gitterbasierten Verfahren der Strömungsmechanik. •kennen die einzelnen Algorithmen, die hinter den besprochenen Methoden stehen und können Gemeinsamkeiten sowie Unterschiede zwischen den unterschiedlichen Methoden darlegen. •kennen die Implementierung der einzelnen Methoden vor dem Hintergrund einer Anwendung auf Hochleistungsrechnern. •kennen die Stärken und Schwächen der besprochenen Methoden und können für verschiedene Situationen die geeignete Methode auswählen.
Prerequisites: Programmieren Grundlagen, Strömungsmechanik Grundlagen
Integration in curriculum: semester: 1
Module compatibility: Thermo and Fluid Dynamics Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Written or oral
Grading procedure: Written or oral (100%) 

Workload in clock hours: Contact hours: 45 h Independent study: 105 h
Module duration: 1 semester
Teaching and examination language: german
Bibliography: G.A. Bird, Molecular Gas Dynamics and the Direct Simulation of Gas Flows G. Gompper et al., Multi-Particle Collision Dynamics: A Particle-Based Mesoscale Simulation Approach to the Hydrodynamics of Complex Fluids E.-S. Lee et al., Comparisons of weakly compressible and truly incompressible algorithms for the SPH mesh free particle method. 

, Module name 45210: Physik der Turbulenz und Turbulenzmodellierung I Physics of turbulence and turbulence modelling I5 ECTS
Course / lectures: Vorlesung mit Übung: Physik der Turbulenz und Turbulenzmodellierung I (3 SWS )5 ECTS
Lecturers: Prof. Dr. Jovan Jovanovic  
Module coordinator: Prof. Dr. Jovan Jovanovic
Contents: Im Rahmen des Moduls werden praktisch einsetzbare Methoden zur Berechnung allgemeiner turbulenter Strömungen vorgestellt. Ausgangspunkt sind die Navier-Stokes-Gleichungen, die formal hergeleitet und anschließend zeitgemittelt werden. Die durch die Mittelung auftretenden Zusatzterme werden physikalisch interpretiert und gebräuchliche mathematische Modelle (Turbulenzmodelle) zur Beschreibung dieser Terme eingeführt. Die Anwendung der vorgestellten Turbulenzmodelle auf für die Praxis relevante turbulente Strömungen wie z. B. Grenzschichten, Freistrahlen etc. wird im Detail diskutiert.
Learning objectives and skills: Die Studierenden •können allgemeine turbulente Strömungen berechnen •können relevante Gleichungen herleiten und zeitmitteln •können die durch die Mittelung aufgetretene Zusatzterme interpretieren •können die vorgestellten Turbulenzmodelle in der Praxis anwenden
Prerequisites: None
Integration in curriculum: semester: 1
Module compatibility: Thermo and Fluid Dynamics Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Oral (30 minutes)
Grading procedure: Oral (100%)
Module frequency: only in summer semester 13Workload in clock hoursContact hours: 45 h Independent study: 105 h 14 Module duration 1 semester 15Teaching and examination languageenglish 16 Bibliography no Bibliography information available! 
Workload in clock hours: Contact hours: 45 h Independent study: 105 h
Module duration: 1 semester
Teaching and examination language: english
Bibliography: no Bibliography information available! 

, Module name 45220: Physik der Turbulenz und Turbulenzmodellierung II Physics of turbulence and turbulence modelling II5 ECTS
Course / lectures: Vorlesung mit Übung: Physik der Turbulenz und Turbulenzmodellierung II (3 SWS )5 ECTS
Lecturers: Prof. Dr. Jovan Jovanovic  
Module coordinator: Prof. Dr.-Ing. Antonio Delgado
Contents: •Turbulence decomposition(mean flow, turbulent stresses, higher-order moments); •second order moments(anisotropy tensor, invariants); •anisotropy invariant mapping of turbulence in wall-bounded flows; •turbulent viscosity, Prandtl-Kolmogorov formula; •dynamics of turbulence dissipation rate; •twopoint correlation technique(locally homogeneous turbulence); •dissipation rate equation (closure model); •velocity-pressure gradient correlations (Poisson equation, Chous integral, slow and fast parts of correlations); •turbulence transport(closure approximation); •predictions(homogeneous shear flows, wall-bounded flows, transitional flows)
Learning objectives and skills: Students •identify and explain the fundamental theories of turbulence •details of the modeling and validation using DNS databases •implement statistical methods like two-point correlation technique and invariant theory for modeling of unknown correlation •discuss different techniques for turbulence modeling according to their advantages and disadvantages •apply numerical simulation databases for interpretation of turbulence in functional space defined in terms of anisotropy- invariant map
Prerequisites: Strömungsmechanik
Integration in curriculum: semester: 1
Module compatibility: Thermo and Fluid Dynamics Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Oral (30 minutes)
Grading procedure: Oral (100%)
Module frequency: only in winter semester 13Workload in clock hoursContact hours: 45 h Independent study: 105 h 14 Module duration 1 semester 15Teaching and examination languageenglish 
Workload in clock hours: Contact hours: 45 h Independent study: 105 h
Module duration: 1 semester
Teaching and examination language: english 

Bibliography: Jovanovic, J.: Statistical Dynamics of Turbulence, Springer Verlag, 2004 Hinze, J.O.: Turbulence (2nd edition), McGraw Hill, 1975 

, Module name 42920: Pumps and turbines no english module name available for this module5 ECTS
Course / lectures: Übung : Pumps and Turbines (Exercises) (3 SWS ) - Vorlesung: Pumps and Turbines (2 SWS ) 5 ECTS
Lecturers: apl.Prof.Dr. Stefan Becker  
Module coordinator: apl.Prof.Dr. Stefan Becker
Contents: Classification and work transfer in pumps and turbines •Fluid mechanical fundamentals of turbomachinery •Efficiency, characteristics and operating behavior •Characteristic numbers •Design procedure •CFD simulation •Low-noise turbomachines •Application: fans and blowers •Application: wind turbines
Learning objectives and skills: Students who participate in this course will become familiar with basic concepts of pumps and turbines. Students who successfully participate in this module: •Can select adequate pumps and turbines for different applications •Have a comprehensive understanding of the different types of turbomachinery and their limitations and possibilities in the various fields of application •Can design rotors and turbines •Are familiar with the use of turbomachines in accordance with the latest environmental protection guidelines •Can determine the entire process from the given boundary conditions, objective design and simulation to the construction of impellers •Gain experience in practical realization for industrial applications
Prerequisites: To succeed in this course, students will need to apply acquired knowledge from e.g. fluid mechanics, solid mechanics and mathematics. A solid background in mathematics is required, since differential equations and integrals form the basis for the description of the fluid dynamic processes and their kinematics. Basic knowledge in thermodynamics and fluid simulation is beneficial.
Integration in curriculum: semester: 1
Module compatibility: Thermo and Fluid Dynamics Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Variable Klausur, 90 min
Grading procedure: Variable (100%)
Module frequency: only in winter semester 

Workload in clock hours: Contact hours: 90 h Independent study: 60 h
Module duration: 1 semester
Teaching and examination language: english
Bibliography: •Fluid Mechanics and Thermodynamics of Turbomachinery, S. Larry Dixon und Cesare Hall •Wind Turbine Noise, S. Wagner •Fluid Mechanics, F. Durst 

, Module name 45495: Turbomaschinen Turbomachinery5 ECTS
Course / lectures: Vorlesung: Turbomaschinen (2 SWS ) 3 ECTS Übung : Übungen zu Turbomaschinen (2 SWS ) 2 ECTS
Lecturers: apl.Prof.Dr. Stefan Becker  
Module coordinator: apl.Prof.Dr. Stefan Becker
Contents: •Funktionsprinzip der Turbomaschinen •Leistungsbilanzen, Wirkungsgrade, Zustandsverläufe •Ähnlichkeitskennzahlen •Kennlinien und Kennfelder •Betriebsverhalten •Grundbegriffe der Gitterströmung •Kräfte an Gitterschaufeln •Schaufelgitter •Gehäuse •CFD für Turbomaschinen •Grundlagen Windturbinen •Akustik
Learning objectives and skills: Die Studierenden •erlernen die Grundlagen der Turbomaschinen •verstehen und erklären Anwendung verschiedener Turbomaschinen •können entsprechend der Anwendung Turbomaschinen in ihren Grundabmessungen auslegen •erlangen ein Grundverständnis für das Betriebsverhalten
Prerequisites: Modul: Strömungsmechanik (Empfehlung) Modul: Thermodynamik (Empfehlung)
Integration in curriculum: semester: 1
Module compatibility: Thermo and Fluid Dynamics Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Written or oral
Grading procedure: Written or oral (100%)
Module frequency: only in winter semester 13Workload in clock hoursContact hours: 60 h Independent study: 90 h 14 Module duration 1 semester 15Teaching and examination languagegerman 16 Bibliography no Bibliography information available! 
Workload in clock hours: Contact hours: 60 h Independent study: 90 h
Module duration: 1 semester
Teaching and examination language: german
Bibliography: no Bibliography information available! 


, Module name 22800: Anatomie und Physiologie für Nichtmediziner Anatomy and physiology for non-medical students5 ECTS
Course / lectures: Vorlesung: Grundlagen der Anatomie und Physiologie für Medizintechniker, Naturwissenschaftler und Ingenieure (2 SWS )-
Lecturers: apl.Prof.Dr. Clemens Forster  
Module coordinator: apl.Prof.Dr. Clemens Forster
Contents: •Wissensvermittlung zu Grundlagen der Anatomie, Physiologie und Pathophysiologie •Wissensvermittlung von wichtigen medizinischen Fachbegriffen •Wissensvermittlung von relevanten und häufigen Krankheitsbildern •Wissensvermittlung von relevanten Methoden beim biologischen und technischen Sehen •Diskussion von Methoden und Theorieansätzen, um relevante medizinische Fragestellungen erkennen zu können •Kritische Betrachtung von den wichtigsten bildgebenden Verfahren in wichtigen Krankheitsbildern •Darstellung der Organisationsstrukturen von diagnostischen Prozessen
Learning objectives and skills: Die Studierenden •verstehen die wichtigsten und häufigsten medizinische Fachbegriffe •sind vertraut mit den Grundlagen der Anatomie und der Physiologie •kennen wichtige Krankheitsbilder •verstehen und erklären medizinische Fragestellungen in der Diagnostik und Therapie anhand von Beispielen
Prerequisites: None
Integration in curriculum: semester: 1
Module compatibility: Medical Engineering Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Written (60 minutes)
Grading procedure: Written (100%)
Module frequency: every semester 13Workload in clock hoursContact hours: 60 h Independent study: 90 h 14 Module duration 2 semester 15Teaching and examination languagegerman 16 Bibliography no Bibliography information available! 
Workload in clock hours: Contact hours: 60 h Independent study: 90 h
Module duration: 2 semester
Teaching and examination language: german
Bibliography: no Bibliography information available! 

, Module name 23070: Biomedizinische Signalanalyse Biomedical signal analysis5 ECTS
Course / lectures: Übung : Biomedizinische Signalanalyse Übung (2 SWS )2,5 ECTS Vorlesung: Biomedizinische Signalanalyse (2 SWS ) 2,5 ECTS
Lecturers: Prof. Dr. Björn Eskofier Katharina Jäger Daniel Krauß  
Module coordinator: Prof. Dr. Björn Eskofier Daniel Krauß
Contents: Inhalt Im Rahmen der Vorlesung werden (a) die Grundlagen der Generation von wichtigen Biosignalen im menschlichen Körper, (b) die Messung von Biosignalen und (c) Methoden zur Analyse von Biosignalen erläutert und dargestellt. Behandelte Biosignale sind unter anderem Aktionspotential (AP), Elektrokardiogramm (EKG), Elektromyogramm (EMG), Elektroenzephalogramm (EEG), oder Mechanomyogramm (MMG). Bei der Messung liegt der Fokus beispielsweise auf der Messtechnik oder der korrekten Sensor- bzw. Elektrodenanbringung. Im größten Teil der Vorlesung, Analyse von Biosignalen, werden Konzepte zur Filterung für die Artefaktreduktion, der Wavelet Analyse, der Ereigniserkennung und der Wellenformanalyse behandelt. Zum Schluss wird einen Einblick in überwachte Verfahren der Mustererkennung gegeben. Für weitere Informationen, besuchen Sie bitte unseren zugehörigen StudOn Kurs. Content The lecture content explains and outlines (a) basics for the generation of important biosignals of the human body, (b) measurement of biosignals, and (c) methods for biosignals analysis. Considered biosignals are among others action potential (AP), electrocardiogram (ECG), electromyogram (EMG), electroencephalogram (EEG), or mechanomyogram (MMG). The focus during the measurement part is for example the measurement technology or the correct sensor and electrode placement. The main part of the lecture is the analysis part. In this part, concepts like filtering for artifact reduction, wavelet analysis, event detection or waveform analysis are covered. In the end, an insight into pattern recognition methods is obtained. For more information, please visit our associated StudOn course
Learning objectives and skills: Die Studierenden können nach erfolgreichem Abschluss des Kurses Fachkompetenz Wissen •die Entstehung, Messung und Charakteristika der wichtigsten Biosignale des menschlichen Körpers wiedergeben Verstehen 



Integration in curriculum: semester: 1
Module compatibility: Medical Engineering Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Electronic examination
Grading procedure: Electronic examination (100%)
Workload in clock hours: Contact hours: 60 h Independent study: 90 h
Module duration: 1 semester
Teaching and examination language: english
Bibliography: •R.M. Rangayyan, Biomedical Signal Analysis: A case-study approach. 1st ed., 2002, New York, NY: John Wiley & Sons. •E.N. Bruce, Biomedical Signal Processing and Signal Modeling. 1st ed., 2001, New York, NY: John Wiley & Sons. 

, Module name 93173: Computational Visual Perception no english module name available for this module7,5 ECTS
Course / lectures: Vorlesung: Computational Visual Perception (4 SWS ) 2,5 ECTS Projektseminar : Tutorials to Computational Visual Perception (2 SWS )5 ECTS
Lecturers: Dr.rer.nat. Patrick Krauß Prof. Dr. Andreas Kist Prof. Dr. Tim Weyrich Prof. Dr. Bernhard Egger  
Module coordinator: Prof. Dr. Bernhard Egger Prof. Dr. Andreas Kist Prof. Dr.-Ing. Andreas Maier
Contents: How do humans perceive the visual world? How can we build computational models to mimic this human perception? And how can we validate those computational models? This course is designed as an introduction to enable you to build computational models for human visual perception. It will therefore provide an introduction into the human visual system building on the course on cognitive neuroscience for AI developers. You will learn how the human eye and brain process visual input and what we currently know about the ventral visual stream. We will look at computational models for all different levels of visual processing and discuss how well they measure behavioral data. This lecture is designed to be at the intersection of Computer Science (Computer Vision and Graphics) and Cognitive Neuroscience. After an initial introductory phase, you will in small teams (2-3 students) perform small projects to build prototypes for computational models for visual processing, reproduce recent scientific results or experiment with existing models. In parallel with the project phase we will read and discuss recent research papers studying potential computational models and investigate how we can evaluate computational models. Please sign up via studon
Learning objectives and skills: By the end of this course, students will be able to •Describe the basic processing steps of visual input in the human brain •Build a computational model for a known processing step •Read a recent paper in the discipline and design a follow-up experiment •Choose/design and conduct a small research project •Choose adequate methods to evaluate a computational model •Work in and manage projects
Prerequisites: None
Integration in curriculum: semester: 1
Module compatibility: Medical Engineering Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Tutorial achievement 

Grading procedure: Tutorial achievement (0%) Oral (100%)
Module frequency: only in winter semester 13Workload in clock hoursContact hours: 90 h Independent study: 135 h 14 Module duration 1 semester 15Teaching and examination languageenglish 16 Bibliography no Bibliography information available! 
Workload in clock hours: Contact hours: 90 h Independent study: 135 h
Module duration: 1 semester
Teaching and examination language: english
Bibliography: no Bibliography information available! 

, Module name 44150: Diagnostic Medical Image Processing Diagnostic medical image processing5 ECTS
Course / lectures: Vorlesung: Medical Image Processing for Diagnostic Applications (VHB-Kurs) (4 SWS )5 ECTS
Lecturers: Manuela Meier Arpitha Ravi Luis Rivera Monroy  
Module coordinator: Prof. Dr.-Ing. Andreas Maier
Contents: English version: The contents of the module comprise basics about medical imaging modalities and acquisition hardware. Furthermore, details on acquisition-dependent preprocessing are covered for image intensifiers, flat-panel detectors, and MR. The fundamentals of 3D reconstruction from parallel-beam to cone-beam reconstruction are also covered. In the last chapter, rigid registration for image fusion is explained. Deutsche Version: Die Inhalte des Moduls umfassen Grundlagen der medizinischen Bildverarbeitung und Aufnahmeprinzipien. Darüber hinaus werden Details der Vorverarbeitung für Bildverstärker, Flachpaneldetektoren und MR erklärt. Die Grundlagen der Rekonstruktion von Parallelstrahl bis hin zur Kegelstrahl-Tomographie werden ebenfalls behandelt. Im letzten Kapitel wird starre Registrierung für Bildfusion erläutert.
Learning objectives and skills: English Version: The participants •understand the challenges in interdisciplinary work between engineers and medical practitioners. •develop understanding of algorithms and math for diagnostic medical image processing. •learn that creative adaptation of known algorithms to new problems is key for their future career. •develop the ability to adapt algorithms to different problems. •are able to explain algorithms and concepts of the module to other engineers. Deutsche Version: Die Teilnehmenden •verstehen die Herausforderungen in der interdisziplinären Arbeit zwischen Ingenieuren und Ärzten. •entwickeln Verständnis für Algorithmen und Mathematik der diagnostischen medizinischen Bildverarbeitung. •erfahren, dass kreative Adaption von bekannten Algorithmen auf neue Probleme der Schlüssel für ihre berufliche Zukunft ist. •entwickeln die Fähigkeit Algorithmen auf verschiedene Probleme anzupassen. •sind in der Lage, Algorithmen und Konzepte des Moduls anderen Studierenden der Technischen Fakultät zu erklären. 

Prerequisites: Ingenieurmathematik Engineering Mathematics
Integration in curriculum: semester: 1
Module compatibility: Medical Engineering Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013 Wahlpflichtbereich Informatik Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Written or oral (60 minutes)
Grading procedure: Written or oral (100%)
Module frequency: every semester 13Workload in clock hoursContact hours: 0 h Independent study: 150 h 14 Module duration 1 semester 15Teaching and examination languageenglish 16 Bibliography no Bibliography information available! 
Workload in clock hours: Contact hours: 0 h Independent study: 150 h
Module duration: 1 semester
Teaching and examination language: english
Bibliography: no Bibliography information available! 

, Module name 93500: Digitale Signalverarbeitung Digital signal processing5 ECTS
Course / lectures: Übung : Übung zu Digitale Signalverarbeitung (1 SWS )- Vorlesung: Digitale Signalverarbeitung (3 SWS ) 5 ECTS Tutorium: Tutorium zu Digitale Signalverarbeitung (1 SWS )-
Lecturers: Dr.-Ing. Heinrich Löllmann Prof. Dr.-Ing. Walter Kellermann  
Module coordinator: Prof. Dr.-Ing. Walter Kellermann
Contents: The course assumes familiarity with basic theory of discrete-time deterministic signals and linear systems and extends this by a discussion of the properties of idealized and causal, realizable systems (e.g., lowpass, Hilbert transformer) and corresponding representations in the time domain, frequency domain, and z-domain. Thereupon, design methods for recursive and nonrecursive digital filters are discussed. Recursive systems with prescribed frequency-domain properties are obtained by using design methods for Butterworth filters, Chebyshev filters, and elliptic filters borrowed from analog filter design. Impulse-invariant transform and the Prony-method are representatives of the considered designs with prescribed time-domain behaviour.For nonrecursive systems, we consider the Fourier approximation in its original and its modified form introducing a broad selection of windowing functions. Moreover, the equiripple approximation is introduced based on the Remez-exchange algorithm. Another section is dedicated to the Discrete Fourier Transform (DFT) and the algorithms for its fast realizations ('Fast Fourier Transform'). As related transforms we introduce cosine and sine transforms. This is followed by a section on nonparametric spectrum estimation. Multirate systems and their efficient realization as polyphase structures form the basis for describing analysis/synthesis filter banks and discussing their applications. The last section is dedicated to investigating effects of finite wordlength as they are unavoidable in any realization of digital signal processing systems. A corresponding lab course on DSP will be offered in the winter term.
Learning objectives and skills: Die Studierenden •analysieren zeitdiskrete lineare zeitinvariante Systeme durch Ermittlung der beschreibenden Funktionen und Parameter •wenden grundlegende Verfahren zum Entwurf zeitdiskreter Systeme an und evaluieren deren Leistungsfähigkeit •verstehen die Unterschiede verschiedener Methoden zur Spektralanalyse und können damit vorgegebene Signale analysieren •verstehen die Beschreibungsmethoden von Multiratensystemen und wenden diese zur Beschreibung von Filterbänken an 

Integration in curriculum: semester: 1
Module compatibility: Information Technology - DSP Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013 Information Technology - DT Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013 Medical Engineering Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Written examination (90 minutes)
Grading procedure: Written examination (100%)
Workload in clock hours: Contact hours: 60 h Independent study: 90 h
Module duration: 1 semester
Teaching and examination language: english
Bibliography: *Empfohlene Literatur/ Recommended Reading:* *1.* J.G. Proakis, D.G. Manolakis: Digital Signal Processing. 4th edition. Prentice Hall, Englewood Cliffs, NJ, 2007. *2.* A.V. Oppenheim, R.V. Schafer: Digital Signal Processing. Prentice Hall, Englewood Cliffs, NJ, 1975. *3.* K.D. Kammeyer, K. Kroschel: Digitale Signalverarbeitung: Filterung und Spektralanalyse mit MATLAB®-Übungen . 8. Aufl. Teubner, Stuttgart, 2012 

, Module name 47664: Fundamentals in Anatomy and Physiology for Engineers no english module name available for this module5 ECTS
Course / lectures: Vorlesung: Fundamentals in Anatomy and Physiology for Engineers (4 SWS )-
Lecturers: Benedikt Kleinsasser Prof. Dr. med. Friedrich Paulsen  
Module coordinator: apl.Prof.Dr. Michael Eichhorn
Contents: •Biological Systems •Trunk System •Nervous System •Respiration •Circulation •Heart •Digestion •Neuroscience •Functional cardiology •Advanced endoscopy •Advanced neuroimaging
Learning objectives and skills: Students are able to •describe relevant structures of the human anatomy and basic physiological processes •understand features of biological systems when applying optical technologies to them •describe exemplarily applications of optical technologies in medicine
Prerequisites: None
Integration in curriculum: semester: 1
Module compatibility: Medical Engineering Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Written examination (90 minutes)
Grading procedure: Written examination (100%)
Module frequency: only in summer semester
Resit examinations: The exams of this moduls can only be resit once.
Workload in clock hours: Contact hours: 60 h Independent study: 90 h
Module duration: 1 semester
Teaching and examination language: english
Bibliography: Gerard J. Tortora, Bryan Derrickson: Principles of Anatomy and Physiology: 

, Module name 428256: Maschinelles Lernen für Zeitreihen Machine learning for time series5 ECTS
Course / lectures: Übung : Maschinelles Lernen für Zeitreihen Übung (2 SWS )2,5 ECTS Vorlesung: Maschinelles Lernen für Zeitreihen (2 SWS )2,5 ECTS
Lecturers: Dr.-Ing. Christopher Mutschler Richard Dirauf Prof. Dr. Björn Eskofier Dr. Dario Zanca  
Module coordinator: Prof. Dr. Oliver Amft Prof. Dr. Björn Eskofier Dr. Dario Zanca
Contents: Aim of the lecture is to teach Machine learning (ML) and Deep Learning (DL) methods for a variety of time series applications. The following topics will be covered: •Fundamentals and an overview of applications of time series analysis. •Fundamentals of ML methods, such as Gaussian processes, State Space models, and Autoregressive models for time series. •Design, implementation and evaluation of ML methods in order to address time series problems. •Advanced DL methods for time-series, such as Convolutional, Recurrent, and Attention-based models. •Working with widely-used toolboxes that can be used for implementation of ML methods, such as Tensorflow or PyTorch.
Learning objectives and skills: •Students can describe concepts of time series problems and their wide applications in industry, medicine, finance, etc. •Students can explain concepts of ML/DL methods in general and tackling time series problems in particular •Students understand the characteristics of time series data and are capable of developing and implementing ML/DL methods to model, predict and manipulate such data in concrete problems
Integration in curriculum: semester: 1
Module compatibility: Medical Engineering Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Variable
Grading procedure: Variable (100%)
Module frequency: only in winter semester 

Workload in clock hours: Contact hours: 60 h Independent study: 90 h
Module duration: 1 semester
Teaching and examination language: english
Bibliography: •Pattern recognition and machine learning. Christopher M. Bishop, Springer, 2006 •The Elements of Statistical Learning: Data Mining, Inference, and Prediction. Trevor Hastie, Robert Tibshirani, Jerome Friedman, Springer, 2009 •Machine Learning: A Probabilistic Perspective. Kevin Murphy, MIT press, 2012 •Deep Learning. Ian Goodfellow and Yoshua Bengio and Aaron Courville, MIT Press, 2016 

, Module name 482355: Maschinelles Lernen für Zeitreihen Deluxe Machine learning for time series deluxe7,5 ECTS
Course / lectures: Übung : Maschinelles Lernen für Zeitreihen Übung (2 SWS )2,5 ECTS Vorlesung: Maschinelles Lernen für Zeitreihen (2 SWS )2,5 ECTS Praktikum : Maschinelles Lernen für Zeitreihen Laborprojekt (2 SWS )2,5 ECTS
Lecturers: Dr.-Ing. Christopher Mutschler Richard Dirauf Prof. Dr. Björn Eskofier Dr. Dario Zanca Johannes Roider An Nguyen  
Module coordinator: Prof. Dr. Oliver Amft Prof. Dr. Björn Eskofier Dr. Dario Zanca
Contents: Aim of the lecture is to teach Machine learning (ML) and Deep Learning (DL) methods for a variety of time series applications. The following topics will be covered: •Fundamentals and an overview of applications of time series analysis. •Fundamentals of ML methods, such as Gaussian processes, State Space models, and Autoregressive models for time series. •Design, implementation and evaluation of ML methods in order to address time series problems. •Advanced DL methods for time-series, such as Convolutional, Recurrent, and Attention-based models. •Working with widely-used toolboxes that can be used for implementation of ML methods, such as Tensorflow or Keras
Learning objectives and skills: •Students can describe concepts of time series problems and their wide applications in industry, medicine, finance, etc. •Students can explain concepts of ML/DL methods in general and tackling time series problems in particular •Students understand the characteristics of time series data and are capable of developing and implementing ML/DL methods to model, predict and manipulate such data in concrete problems
Integration in curriculum: semester: 1
Module compatibility: Medical Engineering Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013 

Method of examination: Variable
Grading procedure: Variable (100%)
Workload in clock hours: Contact hours: 90 h Independent study: 135 h
Module duration: 1 semester
Teaching and examination language: english
Bibliography: •Pattern recognition and machine learning. Christopher M. Bishop, Springer, 2006 •The Elements of Statistical Learning: Data Mining, Inference, and Prediction. Trevor Hastie, Robert Tibshirani, Jerome Friedman, Springer, 2009 •Machine Learning: A Probabilistic Perspective. Kevin Murphy, MIT press, 2012 •Deep Learning. Ian Goodfellow and Yoshua Bengio and Aaron Courville, MIT Press, 2016 

, Module name 96030: Medizinelektronik Medical electronics5 ECTS
Lecturers: Max Bartunik Dr. Jens Kirchner  
Module coordinator: Dr. Jens Kirchner
Contents: The Lecture and exercise deals with the following topics: •Electronics for medical diagnostics and therapy •Challenges for medical engineering from demographic development and epidemiology of common diseases •Concepts for chronic disease management and elderly care •Regulatory framework of circuit design for medical devices •Circuit design of standard medical equipment ECG, EEG, EMG, SpO2 •Sensor principles and circuit design for biosignal acquisition •Analog-digital balance •Energy management for medical devices •Body near energy harvesting •Health data transmission •Electronic systems for ambient assisted living (AAL) •Circuit technology for lab-on-chip and microelectromechanical systems (MEMS) •Circuit technology for implants and wearable systems
Learning objectives and skills: Students will gain •Substantial knowledge on principles of circuit design for medical electronic devices •Substantial knowledge on circuit design for standard medical devices, e.g. ECG, EEG, EMG •Substantial knowledge on design of medical sensors •Substantial knowledge on system design for health assistance systems, wearable medical devices and implants •Ability to analyze circuit diagrams of medical electronic devices •Ability to separate medical electronic devices into their subfunctions •Ability to analyze energy budget of medical devices, particularly wearable systems •Basic ability to design electronic circuits to comply with regulatory requirements
Integration in curriculum: semester: 1 

Module compatibility: Medical Engineering Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Written or oral
Grading procedure: Written or oral (100%)
Module frequency: only in summer semester 13Workload in clock hoursContact hours: 60 h Independent study: 90 h 14 Module duration 1 semester 15Teaching and examination languageenglish 16 Bibliography no Bibliography information available! 
Workload in clock hours: Contact hours: 60 h Independent study: 90 h
Module duration: 1 semester
Teaching and examination language: english
Bibliography: no Bibliography information available! 

, Module name 45730: Optical Technologies in Life Science Optical technologies in life science5 ECTS
Course / lectures: Vorlesung mit Übung: Optical Technologies in Life Science (4 SWS )5 ECTS
Lecturers: Lucas Kreiß Prof.Dr.Dr. Oliver Friedrich PD Dr.habil. Sebastian Schürmann Prof. Dr. Maximilian Waldner  
Module coordinator: PD Dr.habil. Sebastian Schürmann
Contents: Inhalte •Anwendungen optischer Messmethoden im Bereich der Zellbiologie und Medizin •Mikroskopie: Grundlegende Konzepte und Kontrastverfahren, Auflösungsvermögen und Grenzen, Aufbau und Komponenten von Lichtmikroskopen, Fluoreszenz-Mikroskopie •Anwendungen von Fluoreszenz-Mikroskopie im Life Science Bereich, Verfahren zur Markierung biologischer Strukturen und Vorgänge in Zellen •Epifluoreszenz-, Konfokal-, Multiphotonen-Mikroskopie, Konzepte und Anwendungsbeispiele •Optische Endoskopie und Endomikroskopie in Forschung und Klinik •Super-Resolution Mikroskopie, Konzepte und Anwendungsbeispiele für optische Bildgebung jenseits der beugungsbedingten Auflösungsgrenze Content •Application of optical methods in the field of cell biology and medicine •Microscopy: Basic concepts, methods to enhance contrast, optical resolution and limits, components and setup of light microscopes, fluorescence microscopy •Applications of fluorescence microscopy in life sciences, methods for labeling of biological structures and cellular processes´ •Epi-fluorescence, confocal and multiphoton microscopy, concepts and application examples •Optical endoscopy and endomicroscopy in research and clinics •Super-resolution microscopy, concepts and applications for optical Imaging beyond the diffraction Limit of Resolution
Learning objectives and skills: Lernziele und Kompetenzen Die Studierenden •verstehen die grundlegenden Konzepte und technische Umsetzung optischer Technologien im Bereich Life Sciences und kennen typische Anwendungsbeispiele 

Integration in curriculum: semester: 1
Module compatibility: Medical Engineering Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Written examination
Grading procedure: Written examination (100%)
Workload in clock hours: Contact hours: 60 h Independent study: 90 h
Module duration: 1 semester
Teaching and examination language: english
Bibliography: •Michael W. Davidson et al: Microscopy Primer, http:// micro.magnet.fsu.edu, umfassendes Online-Lehrwerk 


, Module name 44130: Pattern Recognition Pattern recognition5 ECTS
Course / lectures: Übung : Pattern Recognition Exercises (1 SWS ) 1,25 ECTS Vorlesung: Pattern Recognition (3 SWS ) 3,75 ECTS
Lecturers: Siming Bayer Paul Stöwer  
Module coordinator: Prof. Dr.-Ing. Andreas Maier
Contents: Mathematical foundations of machine learning based on the following classification methods: •Bayesian classifier •Logistic Regression •Naive Bayes classifier •Discriminant Analysis •norms and norm dependent linear regression •Rosenblatt's Perceptron •unconstraint and constraint optimization •Support Vector Machines (SVM) •kernel methods •Expectation Maximization (EM) Algorithm and Gaussian Mixture Models (GMMs) •Independent Component Analysis (ICA) •Model Assessment •AdaBoost Mathematische Grundlagen der maschinellen Klassifikation am Beispiel folgender Klassifikatoren: •Bayes-Klassifikator •Logistische Regression •Naiver Bayes-Klassifikator •Diskriminanzanalyse •Normen und normabhängige Regression •Rosenblatts Perzeptron •Optimierung ohne und mit Nebenbedingungen •Support Vector Maschines (SVM) •Kernelmethoden •Expectation Maximization (EM)-Algorithmus und Gaußsche Mischverteilungen (GMMs) •Analyse durch unabhängige Komponenten •Modellbewertung •AdaBoost
Learning objectives and skills: Die Studierenden •verstehen die Struktur von Systemen zur maschinellen Klassifikation einfacher Muster •erläutern die mathematischen Grundlagen ausgewählter maschineller Klassifikatoren •wenden Klassifikatoren zur Lösung konkreter Klassifikationsproblem an 

Integration in curriculum: semester: 1
Module compatibility: Medical Engineering Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013 Wahlpflichtbereich Informatik Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Written examination (90 minutes)
Grading procedure: Written examination (100%)
Workload in clock hours: Contact hours: 60 h Independent study: 90 h
Module duration: 1 semester
Teaching and examination language: 1
Bibliography: •Richard O. Duda, Peter E. Hart, David G. Stock: Pattern Classification, 2nd edition, John Wiley&Sons, New York, 2001 •Trevor Hastie, Robert Tobshirani, Jerome Friedman: The Elements of Statistical Learning - Data Mining, Inference, and Prediction, 2nd edition, Springer, New York, 2009 •Christopher M. Bishop: Pattern Recognition and Machine Learning, Springer, New York, 2006 

, Module name 47650: Medizintechnische Anwendungen der Photonik Photonics for medical applications5 ECTS
Course / lectures: Vorlesung: Medizintechnische Anwendungen der Photonik (2 SWS )5 ECTS Übung : Medizintechnische Anwendungen der Photonik Übung (2 SWS )-
Lecturers: Prof. Dr.-Ing. Bernhard Schmauß Dr.-Ing. Christian Carlowitz  
Module coordinator: Prof. Dr.-Ing. Bernhard Schmauß
Contents: Das Modul behandelt spezialisiert medizintechnische Anwendungen der Photonik. Zunächst wird die Lichtausbreitung in biologischem Gewebe beschrieben und diskutiert. Ein weiterer Abschnitt behandelt die Wechselwirkung zwischen Licht und Gewebe, wobei die einzelnen Wechselwirkungsmechanismen auch an Beispielen der medizintechnischen Praxis vertieft werden. Hier sind stellvertretend zu nennen: Photodynamische Therapie, Photokoagulation, Laser- in-situ-Keratomileusis (LASIK). Ein weiterer Themenschwerpunkt ist die Diskussion entsprechender diagnostische Verfahren. Hier wird beispielsweise aus spektroskopische Verfahren und auf Diagnoseverfahren die auf Fluoreszenz basieren detailliert eingegangen. Entsprechende Konzepte von Diagnosegeräten wie Endoskope, konfokale Mikroskope, Optische Kohärenztomographie (OCT), faserbasierte Sensoren und Biochipsensoren werden in einem weiteren Abschnitt vertieft. Ein aktueller Forschungsbezug wird im letzten Kapitel, das photonische Systeme in der Ophthalmologie behandelt, hergestellt. Die Lehrveranstaltung des Moduls teilt sich auf in einen Vorlesungsteil sowie einen Übungsteil, in dem die Studierenden durch eigene Beiträge (angeleitete Literaturrecherche, Kurzvorträge und Praxisprojekte) die Inhalte der Vorlesung vertiefen.
Learning objectives and skills: Die Studierenden •besitzen spezialisiertes und vertieftes Wissen der medizintechnische Anwendungen der Photonik, insbesondere der im Inhalt genannten Themengebiete. •können technische und wissenschaftliche Anwendungen der Photonik diskutieren, beurteilen und vergleichen. •sind in der Lage, ihre theoretischen Kenntnisse zur Photonik und Lasertechnik im Bereich der Medizintechnik vergleichend einzusetzen und so neue Verfahren und Konzepte zu entwickeln und auszuarbeiten. •können eigenständige Ideen und Konzepte zur Lösung wissenschaftlicher und technischer Probleme der Medizintechnik mit photonischen Systemen entwickeln.

Integration in curriculum: semester: 1
Module compatibility: Medical Engineering Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Oral (30 minutes)
Grading procedure: Oral (100%)
Workload in clock hours: Contact hours: 60 h Independent study: 90 h
Module duration: 1 semester
Teaching and examination language: german
Bibliography: •[1]Prahl, S.A.:Light Transport in Tissue, Dissertation, December 1988 •[2]Niemz, M.:Laser-Tissue Interaction, Springer, 2007 •[3]Cox, B.T.:Introduction in Laser Tissue Interaction, 2007 •[4]Welch, A. (Hrsg):Optical-Thermal Response of Laser- Irradiated Tissue, Springer, 2011 •[5]Prasad, P.N.:Introduction to Biophotonics, Wiley, 2003 •[6]Tuchin, V.:Handbook of Photonics for Biomedical Science, CRC Press,Wiley, 2010 •[7]Dithmar, S. et.al.Fluorezenzangiographie in der Augenheilkunde, Springer, 2008 •[8]Fercher, A.:Optical coherence tomography - principles and applications, Rep. Prog. Phys. 66 , pp.: 239, 2003 •[9]Schröder, G.:Technische Optik, Vogel Buchverlag, 9. Auflage, 2002 •[10]Lang, G.:Augenheilkunde, Thieme Verlag, 3. Auflage, 2004 •[11]Grehn, F.:Augenheilkunde, Springer Verlag, 3. Auflage, 2007 

, Module name 44481: Visual Computing in Medicine Visual computing in medicine5 ECTS
Course / lectures: Vorlesung: Visual Computing in Medicine 1 (2 SWS ) 2,5 ECTS Vorlesung: Visual Computing in Medicine 2 (0 SWS ) 2,5 ECTS
Lecturers: PD Dr. Thomas Wittenberg PD Dr. Peter Hastreiter  
Module coordinator: PD Dr. Thomas Wittenberg
Contents: Die Flut und Komplexität medizinischer Bilddaten sowie die klinischen Anforderungen an Genauigkeit und Effizienz erfordern leistungsfähige wie auch robuste Konzepte der medizinischen Datenverarbeitung. Auf Grund der Vielfalt an Bildinformation und ihrer klinischen Relevanz spielt der Übergang von der Messung medizinischer Bilddaten (u.a. MRT, CT, PET) hin zur Analyse der Bildinhalte eine wichtige Rolle. Durch die visuelle Wiedergabe der abstrakten Daten können sowohl technische als auch medizinische Aspekte anschaulich und intuitiv verstanden werden. Aufbauend auf einem Regelkreis zur Verarbeitung medizinischer Bilddaten werden im ersten Teil (Visual Computing in Medicine I) die Eigenschaften medizinischer Bilddaten sowie grundlegende Methoden und Verfahren der medizinischen Bildanalyse und Visualisierung im Zusammenhang vermittelt. Beispiele aus der Praxis erläutern den Bezug zur medizinischen Anwendung. Darauf aufbauend werden im zweiten Teil (Visual Computing in Medicine II) konkrete Lösungsansätze für die Diagnose und Therapieplanung komplexer Krankheitsbilder erläutert. Es wird gezeigt, wie grundlegende Methoden ausgewählt und zu praktisch anwendbaren Gesamtkonzepten zusammengefasst werden. An Beispielen wird der Bezug zu Strategien und Anforderungen in der industriellen Entwicklung und klinischen Anwendung hergestellt. Ergänzend werden komplexe Methoden der medizinischen Bildanalyse und Visualisierung ausführlich besprochen. The flood and complexity of medical image data as well as the clinical need for accuracy and efficiency require powerful and robust concepts of medical data processing. Due to the diversity of image information and their clinical relevance the transition from imaging to medical analysis and interpretation plays an important role. The visual representation of abstract data allows understanding both technical and medical aspects in a comprehensive and intuitive way. Based on a processing pipeline for medical image data an overview of the characteristics of medical image data as well as fundamental methods and procedures for medical image analysis and visualization is given. Examples of clinical practice show the relation to the medical application. Based on VCMed1 the lecture VCMed2 discusses practical approaches for the diagnosis and therapy planning of complex diseases. It will be shown how fundamental methods are selected and integrated to practically applicable concepts. Examples demonstrate the relation to strategies and requirements in clinical practice and the industrial 

Learning objectives and skills: *Visual Computing in Medicine I* Die Studierenden •erhalten einen Überblick zu Grundlagen und Unterschie-den medizinischer Bildgebungsverfahren •erwerben fundierte Kenntnisse über Gitterstrukturen, Da- tentypen und Formate medizinischer Bilddaten •üben an Beispielen die Erkennung und Interpretation un- terschiedlicher Bilddaten •erwerben Kenntnisse zu Verfahren der Vorverarbeitung, Filterung und Interpolation medizinischer Bilddaten sowie zu grundlegenden Ansätzen der Segmentierung •erlernen Prinzipien und Methoden der expliziten und im- pliziten Bildregistrierung und erhalten einen Überblick zu wichtigen Verfahren der starren Registrierung •erwerben fundierte Kenntnisse zu allen Aspekten der me- dizinischen Visualisierung (2D, 3D, 4D) von Skalar-, Vek-tor-, Tensordaten •erhalten an einfachen Beispielen einen ersten Eindruck, wie sich Visualisierung zur Steuerung von Bildanalysever-fahren und für die medizinische Diagnostik einsetzen lässt The students •get an overview of the basic principles and differences of medical imaging methods, •acquire profound knowledge about grid structures, data types and formats of medical image data, •use sample data to recognize and interpret different image data, •acquire knowledge about methods of preprocessing, filtering and interpolation of medical image data as well as on basic approaches of segmentation, •learn the principles and methods of explicit and implicit image registration and get an overview of important procedures of rigid registration, •acquire profound knowledge about all aspects of medical visualization (2D, 3D, 4D) of scalar, vector, tensor data, •get a first impression of how visualization can be used to control image analysis and medical diagnostics. *Visual Computing in Medicine II* Die Studierenden •erwerben aus Sicht der medizinischen Anwendung und konkreter Lösungsstrategien einen Einblick in komplexe Ansätze zur Bearbeitung wichtiger Krankheitsbilder •lernen die Anforderungen an und die Verknüpfung von Methoden der medizinischen Bildanalyse und Visualisie- rung zur Bearbeitung kardiologischer, neurologischer, on- kologischer und strahlentherapeutischer Fragestellungen 

Prerequisites: None
Integration in curriculum: semester: 1
Module compatibility: Medical Engineering Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Written examination (90 minutes)
Grading procedure: Written examination (100%)
Workload in clock hours: Contact hours: 60 h Independent study: 90 h
Module duration: 2 semester
Teaching and examination language: english
Bibliography: •B. Preim, C. Botha: Visual Computing for Medicine, Morgan Kaufmann Verlag, 2013 •B. Preim, D. Bartz: Visualization in Medicine - Theory, Algorithms, and Applications, Morgan Kaufmann Verlag, 2007 •H. Handels: Medizinische Bildverarbeitung, Bildanalyse, Mustererkennung und Visualisierung für die computergestützte ärztliche Diagnostik und Therapie, Vieweg und Teubner Verlag, 2009 •P.M. Schlag, S. Eulenstein, Th. Lange: Computerassistierte Chirurgie, Elsevier Verlag, 2010 



, Module name 46271: Foundations of Materials Simulation no english module name available for this module10 ECTS
Course / lectures: Vorlesung: Multi-scale Simulation Methods I (Lecture) (1 SWS )- Praktikum : Kernfachpraktikum Werkstoffsimulation (WW8) (0 SWS )6 ECTS Seminar : Introduction to Advanced Maths and Calculus (1 SWS )- Übung : Multi-scale Simulation Methods I (Tutorial) (1 SWS )-
Lecturers: PD Dr. Paolo Moretti Prof. Dr. Michael Zaiser  
Module coordinator: PD Dr. Paolo Moretti
Contents: 1. Mathematical and numerical background in materials simulation; 2. Molecular dynamics; 3. Monte Carlo methods; 4. Kinetic Monte Carlo method; 5. Finite element method; 6. Phase field method; 7. Lattice and network models.
Learning objectives and skills: The students •gain an overview of the problem of materials simulation across scales •acquire knowledge on the general aspects of both atomistic and continuum modeling •gain experience in the practical application of these methods to real problems of materials mechanics modeling. •learn techniques of programming and data analysis of relevance in materials science •which includes theoretical content and hands-on experience
Prerequisites: None
Integration in curriculum: semester: 1
Module compatibility: Computational Material Sciences Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Variable
Grading procedure: Variable (100%)
Module frequency: every semester 13Workload in clock hoursContact hours: 120 h Independent study: 180 h 14 Module duration 2 semester 15Teaching and examination languageenglish 
Workload in clock hours: Contact hours: 120 h Independent study: 180 h
Module duration: 2 semester
Teaching and examination language: english 

Bibliography: no Bibliography information available! 

, Module name 46274: Materials Informatics no english module name available for this module5 ECTS
Course / lectures: Vorlesung: Data Driven Materials Science (0 SWS ) - Vorlesung mit Übung: Computational models of biomaterial failure (2 SWS )2,5 ECTS Vorlesung: Computational Materials Engineering and Data Science for Industrial Application (2 SWS )2,5 ECTS
Lecturers: Stefan Hiemer Prof. Dr. Michael Zaiser PD Dr. Paolo Moretti Dr. Johannes Möller  
Module coordinator: PD Dr. Paolo Moretti
Contents: 1. Data science in materials modeling 2. Correlations and methods of statistical inference 3. Machine learning techniques 4. Elements of high performance computing 5. Data structures in microstructure modeling
Learning objectives and skills: the students •acquire advanced knowledge of computer-based techniques of data analysis and materials modeling •learn methods of relevance in the treatment of data coming from both simulations and experiments. •become familiar with concepts and tools of machine learning and high performance computing, of relevance in the study of materials properties, through extensive practical sessions
Prerequisites: None
Integration in curriculum: semester: 1
Module compatibility: Computational Material Sciences Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Oral
Grading procedure: Oral (100%)
Module frequency: every semester 13Workload in clock hoursContact hours: 60 h Independent study: 90 h 14 Module duration 2 semester 15Teaching and examination languageenglish 16 Bibliography no Bibliography information available! 
Workload in clock hours: Contact hours: 60 h Independent study: 90 h
Module duration: 2 semester
Teaching and examination language: english
Bibliography: no Bibliography information available! 

, Module name 45487: Numerische Methoden der Thermofluiddynamik I Numerical methods in thermal fluid mechanics I5 ECTS
Course / lectures: Vorlesung: Numerische Methoden der Thermofluiddynamik (2 SWS )- Übung : Numerische Methoden der Thermofluiddynamik (1 SWS )5 ECTS
Lecturers: Dr.-Ing. Manuel Münsch  
Module coordinator: Dr.-Ing. Manuel Münsch
Contents: •Governing equations and models in fluid mechanics •Steady problems: the Finite-Difference Method (FDM) •Unsteady problems: methods of time integration •Advection-diffusion problems •The Finite-Volume Method •Solution of the incompressible Navier-Stokes equations •Grids and their properties •Boundary conditions The theory given in the lectures is extended and applied to several transport problems in this exercise class: •discretization of the Blasius similarity equations •parabolization and discretization of the boundary layer equations •finite-Difference discretization of heat-transfer problems •approximation of boundary conditions •finite-Volume discretization of heat-transfer problems •discretization and time-stepping of the Navier-Stokes equations •projections methods: the SIMPLE and PISO Methods
Learning objectives and skills: The students who successfully take this module should: •understand the physical meaning and mathematical character of the terms in advection-diffusion equations and the Navier- Stokes equations •assess under what circumstances some terms in these equations can be negelcted •formulate a FDM for the solution of unsteady transport equations •asess the convergence, consistency and stability of a FDM •formulate a FVM for the solution of unsteady transport equations •know how to solve the Navier-Stokes equation with the FVM •implmement programs in matlab/octave to simulate fluid flow •assess the quality and validity of a fluid flow simulation •work in team and write a report describing the results and significance of a simulation •know the different types of grids and when to use them The students who successfully solve the exercises should: •be able to discretize transport problems with the finite- difference and the finite-volume methods 

Prerequisites: None
Integration in curriculum: semester: 1
Module compatibility: Computational Material Sciences Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013 Thermo and Fluid Dynamics Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Oral (30 minutes)
Grading procedure: Oral (100%)
Workload in clock hours: Contact hours: 45 h Independent study: 105 h
Module duration: 1 semester
Teaching and examination language: english
Bibliography: •J.H. Ferziger, M. Peric, Computational Methods for Fluid Dynamics, Spinger, 2008 •R.J. Leveque, Finite Difference Methods for Ordinary and Partial Differential Equations, SIAM, 2007 


, Module name 92345: Human-centered mechatronics and robotics no english module name available for this module5 ECTS
Course / lectures: Vorlesung: Human-centered mechatronics and robotics (2 SWS )5 ECTS Übung : Human-centered mechatronics and robotics (UE) (2 SWS )-
Lecturers: Prof. Dr.-Ing. Philipp Beckerle  
Module coordinator: Prof. Dr.-Ing. Philipp Beckerle
Contents: •Human-oriented design methods •Biomechanics - Motions, measurement, and analysis - Biomechanical models Elastic robotics - Elastic actuators - Control methods •Cognitive and physical human-robot interaction •Empirical research methods - Research process and experiment design - Research methods, interferences, and ethics
Learning objectives and skills: On successful completion of this module, students will be able to: •Tackle the interdisciplinary challenges of human-centered robot design. •Use engineering methods for modeling, design, and control to develop human-centered robots. •Apply methods from psychology (perception, experience), biomechanics (motion and human models), and engineering (design methodology) and interpret their results. •Develop robotic systems that are provide user-oriented interaction characteristics in addition to efficient and reliable operation.
Prerequisites: None
Integration in curriculum: semester: 1
Module compatibility: Mechatronics Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Written examination (90 minutes)
Grading procedure: Written examination (100%)
Module frequency: only in summer semester 13Workload in clock hoursContact hours: 60 h Independent study: 90 h 14 Module duration 1 semester 15Teaching and examination languageenglish 
Workload in clock hours: Contact hours: 60 h Independent study: 90 h
Module duration: 1 semester
Teaching and examination language: english 

Bibliography: •Ott, C. (2008). Cartesian impedance control of redundant and flexible-joint robots. Springer. •Whittle, M. W. (2014). Gait analysis: an introduction. Butterworth-Heinemann. •Burdet, E., Franklin, D. W., & Milner, T. E. (2013). Human robotics: neuromechanics and motor control. MIT press. •Gravetter, F. J., & Forzano, L. A. B. (2018). Research methods for the behavioral sciences. Cengage Learning. •Further topic-specific text books and selected research articles. 

, Module name 92347: Mechatronic components and systems (MCS) no english module name available for this module5 ECTS
Course / lectures: Vorlesung: Mechatronic components and systems (2 SWS )5 ECTS Übung : Mechatronic components and systems (UE) (2 SWS )-
Lecturers: Prof. Dr.-Ing. Philipp Beckerle  
Module coordinator: Prof. Dr.-Ing. Philipp Beckerle
Contents: System thinking and integration - Interactions of hardware and software - Engineering design methods Mechanical components - Energy conductors and transformers - Control elements and energy storages Actuators - Electrodynamical and electromagnetic actuators - Fluid actuators and unconventional actuators •Sensors for measuring mechanical quantities •Control and information processing
Learning objectives and skills: On successful completion of this module, students will be able to: •Holistically understand mechatronic systems and optimize them using methods of system integration, control, and information processing. •Grundlegende mechanische Komponenten unterscheiden, charakterisieren, modellieren und im Rahmen des Systementwurfs auswählen und dimensionieren. •Distinguish, characterize, model, and select basic mechanical components to dimension them in terms of system design. •Describe electrodynamic, electromagnetic, fluid power, and unconventional actuators phenomenologically and mathematically to dimension them considering the overall system. •Describe sensors for measuring mechanical quantities phenomenologically and mathematically and dimension them taking into account the overall system.
Prerequisites: None
Integration in curriculum: semester: 1
Module compatibility: Automatic Control Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013 Mechatronics Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Written examination (90 minutes)
Grading procedure: Written examination (100%)
Module frequency: only in summer semester 13Workload in clock hoursContact hours: 60 h 
Workload in clock hours: Contact hours: 60 h 

Module duration: 1 semester
Teaching and examination language: english
Bibliography: •Rinderknecht, S. (2018). Einführung in die Mechatronik für den Maschinenbau. Shaker. •Isermann, R. (2007). Mechatronische Systeme: Grundlagen. Springer. •Janocha, H. (Ed.). (2013). Aktoren: Grundlagen und Anwendungen. Springer 

, Module name 92519: Robotics 1 no english module name available for this module5 ECTS
Course / lectures: Vorlesung mit Übung: Robotics 1 (4 SWS ) 5 ECTS
Lecturers: Dr.-Ing. Andreas Völz  
Module coordinator: Prof. Dr.-Ing. Knut Graichen Dr.-Ing. Andreas Völz
Contents: This lecture introduces the fundamentals of robotics with a focus on manipulator control. The course covers the following topics: •Modeling: coordinate systems and transformations, parameterization of rotation matrices, forward and inverse kinematics, Jacobians and singularities •Trajectory planning: polynomial and trapezoidal trajectories, trajectories with intermediate points, trajectories in task space •Linear control: actuator dynamics, decentralized motion control, basics of task space and force control
Learning objectives and skills: After successful completion of the module, students will be able to •mathematically describe and analyze the kinematics of robotic manipulators. •plan trajectories for robot motions. •design and implement linear methods for robot motion and force control.
Integration in curriculum: semester: 6
Module compatibility: Mechatronics Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Written examination Written exam, 90 minutes
Grading procedure: Written examination (100%)
Workload in clock hours: Contact hours: 60 h Independent study: 90 h
Module duration: 1 semester
Teaching and examination language: english
Bibliography: •M. Spong, S. Hutchinson und M. Vidyasagar: Robot Modeling and Control. Wiley, 2005. •B. Siciliano, L. Sciavicco, G. Oriolo und L. Villani: Robotics Modelling, Planning and Control. Springer, 2009. •J. Craig: Introduction to Robotics: Mechanics and Control. Pearson, 2018. 

, Module name 92359: Robot mechanisms and user interfaces no english module name available for this module5 ECTS
Course / lectures: Vorlesung: Robot mechanisms and user interfaces (2 SWS )5 ECTS Übung : Robot mechanisms and user interfaces (UE) (2 SWS )5 ECTS
Lecturers: Prof. Dr.-Ing. Philipp Beckerle Mehmet Ege Cansev  
Module coordinator: Prof. Dr.-Ing. Philipp Beckerle Mehmet Ege Cansev
Contents: Mechanical components, short overview/repetition of machine elements, Robot mechanisms, Kinematic parameters and calculations, Evaluation metrics and design methods, Redundant mechanisms and actuation, Human-robot interfaces, Intend detection (sensing) and haptic stimulation (actuators), Interface system design and evaluation, Mechanical and cognitive user models A flip-the-classroom seminar with student presentations and discussion is part of the lecture. The laboratory exercise will be a mini design project in which student groups create their own low-budget haptic human-machine interfaces.
Learning objectives and skills: On successful completion of this module, students will be able to: Understand robot mechanisms and apply kinematic calculations for their design and control, Exploit redundancy in kinematic chains and actuation systems, Know components of human-machine interfaces and be able to design such systematically, Know approaches to model human characteristics and behavior for human-machine interface design.
Prerequisites: None
Integration in curriculum: semester: 1
Module compatibility: Mechatronics Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Written examination (90 minutes) Course achievement
Grading procedure: Written examination (100%) Course achievement (0%)
Module frequency: only in winter semester 13Workload in clock hoursContact hours: 60 h Independent study: 90 h 14 Module duration 1 semester 15Teaching and examination languageenglish 16 BibliographyRinderknecht, S. (2018). Einführung in die Mechatronik für den Maschinenbau. Shaker. 
Workload in clock hours: Contact hours: 60 h Independent study: 90 h
Module duration: 1 semester
Teaching and examination language: english
Bibliography: Rinderknecht, S. (2018). Einführung in die Mechatronik für den Maschinenbau. Shaker. 



, Module name 949119: Algorithmen der Simulationstechnik Algorithms of simulation technology5 ECTS
Course / lectures: Seminar : Algorithmen der Simulationstechnik (2 SWS )5 ECTS
Lecturers: Prof. Dr. Ulrich Rüde  
Module coordinator: Prof. Dr. Ulrich Rüde
Contents: no content description available!
Learning objectives and skills: no learning objectives and skills description available!
Prerequisites: None
Module compatibility: Seminar im Masterstudium Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Seminar achievement
Grading procedure: Seminar achievement (100%)
Module frequency: every semester 13Workload in clock hoursContact hours: 30 h Independent study: 120 h 14 Module duration 1 semester 15Teaching and examination languagegerman 16 Bibliography no Bibliography information available! 
Workload in clock hours: Contact hours: 30 h Independent study: 120 h
Module duration: 1 semester
Teaching and examination language: german
Bibliography: no Bibliography information available! 

, Module name 645663: Deep Reinforcement Learning Deep reinforcement learning5 ECTS
Module coordinator: 5
Contents: no content description available!
Learning objectives and skills: no learning objectives and skills description available!
Prerequisites: None
Module compatibility: Seminar im Masterstudium Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Seminar achievement
Grading procedure: Seminar achievement (100%)
Workload in clock hours: Contact hours: ?? h (keine Angaben zum Arbeitsaufwand in Präsenzzeit hinterlegt) Independent study: ?? h (keine Angaben zum Arbeitsaufwand im Eigenstudium hinterlegt)
Module duration: ?? semester (no information for Module duration available)
Teaching and examination language: german
Bibliography: no Bibliography information available! 

, Module name 47637: Geschichte der Rechentechnik no english module name available for this module5 ECTS
Course / lectures: Hauptseminar : Die Geschichte der Rechentechnik I (2 SWS )5 ECTS Übung : Übung zu Geschichte der Rechentechnik (2 SWS )-
Lecturers: Dr.phil. Felix Schmutterer  
Module coordinator: Dr.phil. Felix Schmutterer
Contents: Gegenstand des Seminars sind die Meilensteine der Rechentechnik" ausgehend vom 19. Jahrhundert. Diese einschneidenden Entwicklungen von Rechenmaschinen zu ersten Werkzeugen der Datenverarbeitung werden zunächst den Ausgangspunkt bilden. Turingmaschinen" und die neuen Bedürfnisse" von Militär wie etwa Chiffrierung und De- Chiffrierung werden dann zentrale Themen des Seminars bilden. Im Fokus steht dabei stets die Funktionsweise der Maschinen. Darüber hinaus werden die Rechner konsequent im Kontext ihrer Zeit diskutiert werden. Insbesondere wird dabei auf die steigenden Anforderungen und die veränderlichen Einsatzmöglichkeiten wie etwa im Falle der Enigma einzugehen sein. Die genauen Themen werden zu Semesterbeginn festgelegt. Die Themenliste kann beim Dozenten erfragt werden.
Learning objectives and skills: Die Studierenden •recherchieren und arbeiten mit historischen Quellen und wissenschaftlicher Literatur aus den Bereichen Informatik und Geschichte •beschreiben Aspekte der Rechentechnik •erarbeiten sich die Fähigkeit, wichtige Aspekte für einen wissenschaftlichen Vortrag darzustellen und strukturieren diesen •vertreten ihre Auffassung in einer Diskussion und hinterfragen ihr Thema •konzipieren und formulieren eine schriftliche Zusammenfassung des Vortrags
Prerequisites: None
Module compatibility: Seminar im Masterstudium Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Seminar achievement (30 minutes)
Grading procedure: Seminar achievement (100%)
Module frequency: every semester 13Workload in clock hoursContact hours: 60 h Independent study: 90 h 14 Module duration 1 semester 
Workload in clock hours: Contact hours: 60 h Independent study: 90 h
Module duration: 1 semester 

Teaching and examination language: german
Bibliography: no Bibliography information available! 

, Module name 100657: IT-Sicherheits-Seminar IT security seminar5 ECTS
Course / lectures: Seminar : IT-Sicherheits-Konferenzseminar (Master) (0 SWS )5 ECTS
Lecturers: Prof. Dr.-Ing. Felix Freiling Christian Eichenmüller  
Module coordinator: Prof. Dr.-Ing. Felix Freiling
Contents: Wechselnde Themen aus dem Bereich IT-Sicherheit.
Learning objectives and skills: Teilnehmende arbeiten sich selbständig anhand wissenschaftlicher Literatur in ein vorgeschlagenes oder nach Absprache frei gewähltes Thema aus dem Bereich der IT-Sicherheit ein, erstellen dazu eine schriftliche Ausarbeitung, bereiten einen Seminarvortrag vor und halten ihn. Zu den hier zu erwerbenden Kompetenzen zählen die Literaturrecherche, korrektes Zitieren, die Fähigkeit auszuwählen, welche Aspekte in der Ausarbeitung und im Vortrag behandelt werden, zielgruppengerechtes Schreiben sowie der Umgang mit dem Textsatzsystem LaTeX. In jedem Wintersemester findet das Seminar als Konferenzseminar statt. Hier üben die Studierenden dann auch das Prozedere ein, das beim Einreichen einer wissenschaftlichen Arbeit bei einer Konferenz üblich ist: Unter anderem lernen sie, die Arbeiten anderer Personen im Review-Prozess zu beurteilen und Kritik und Verbesserungsempfehlungen auszusprechen sowie für die eigene Arbeit anzunehmen und umzusetzen.
Prerequisites: None
Module compatibility: Seminar im Masterstudium Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Seminar achievement
Grading procedure: Seminar achievement (100%)
Module frequency: every semester 13Workload in clock hoursContact hours: 60 h Independent study: 90 h 14 Module duration 1 semester 15Teaching and examination languagegerman 16 Bibliography no Bibliography information available! 
Workload in clock hours: Contact hours: 60 h Independent study: 90 h
Module duration: 1 semester
Teaching and examination language: german
Bibliography: no Bibliography information available! 

, Module name 93096: Iterative Lösungsverfahren für lineare und nichtlineare Gleichungssysteme no english module name available for this module5 ECTS
Module coordinator: Prof. Dr. Christoph Pflaum
Contents: •Einführung in die einzelnen Phasen der Softwareentwicklung: Anforderungsanalyse, Spezifikation, Entwurf, Implementierung, Test, Wartung •Beispielhafter Einsatz ausgewählter repräsentativer Verfahren zur Unterstützung dieser Entwicklungsphasen •Ergonomische Prinzipien Benutzungsoberfläche •Objektorientierte Analyse und Design mittels UML •Entwurfsmuster als konstruktive, wiederverwendbare Lösungsansätze für ganze Problemklassen •Automatisch unterstützte Implementierung aus UML- Diagrammen •Teststrategien •Refactoring zur Unterstützung der Wartungsphase
Learning objectives and skills: Die Studierenden •wenden auf Basis der bereits erworbenen Programmierkenntnisse systematische und strukturierte Vorgehensweisen (wie das Wasserfall- und V-Modell) zur Bewältigung der Komplexität im Zusammenhang mit dem Programmieren-im-Großen" an; •benutzen ausgewählte Spezifikationssprachen (wie Endliche Automaten, Petri-Netze und OCL), um komplexe Problemstellungen eindeutig zu formulieren und durch ausgewählte Entwurfsverfahren umzusetzen; •wenden UML-Diagramme (wie Use Case-, Klassen-, Sequenz- und Kommunikationsdiagramme) zum Zweck objektorientierter Analyse- und Design-Aktivitäten an; •reproduzieren allgemeine Entwurfslösungen wiederkehrender Probleme des Software Engineering durch Verwendung von Entwurfsmustern; •erfassen funktionale und strukturelle Testansätze; •setzen Refactoring-Strategien zur gezielten Erhöhung der Software-Änderungsfreundlichkeit um.
Prerequisites: None
Integration in curriculum: semester: 3
Module compatibility: Seminar im Masterstudium Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Seminar achievement
Grading procedure: Seminar achievement (100%) 

Module frequency: only in winter semester 13Workload in clock hoursContact hours: 60 h Independent study: 90 h 14 Module duration 1 semester 15Teaching and examination language 16 Bibliography Lehrbuch der Softwaretechnik (Band 1), Helmut Balzert, 2000 
Workload in clock hours: Contact hours: 60 h Independent study: 90 h
Module duration: 1 semester
Teaching and examination language: 1
Bibliography: Lehrbuch der Softwaretechnik (Band 1), Helmut Balzert, 2000 

Course / lectures: Hauptseminar : Machine Learning: Advances (2 SWS ) 5 ECTS
Lecturers: Dr.-Ing. Christopher Mutschler Christoffer Löffler Tobias Feigl  
Module coordinator: Prof. Dr. Michael Philippsen
Contents: Dieses Seminar führt in das Themengebiet des tiefen Lernens ein. Tiefes Lernen ist eine der gefragtesten Fähigkeiten in der künstlichen Intelligenz. Verfahren des tiefen Lernens haben beispielswiese alle bisherigen Benchmarks für die Klassifizierung von Bildern, Text und Sprache weit übertroffen. Tiefes Lernen ermöglicht und verbessert einige der interessantesten Anwendungen der Welt, wie autonome Fahrzeuge, Genomforschung, humanoide Robotik, Echtzeitübersetzung und es besiegt die besten menschlichen Go-Spieler der Welt. Ziel des Seminars ist eine umfassende Einführung in das tiefe Lernen. Basierend auf maschinellem Lernen wird daher erklärt, wie tiefes Lernen funktioniert, wann und warum es wichtig ist und die wesentlichen Verfahren beleuchtet. Zu den Verfahren gehören: (1) Architektur und Hyperparameter; (2) mehrschichtiges Perzeptron; (3) Mischungen neuronaler Netze; (4) tiefes Lernen für Sequenzen (Hidden Markov-Modelle, wiederkehrende neuronale Netze, bidirektionales/Langzeit-Kurzzeitgedächtnis, Gated Recurrent Unit, Temporal Convolutional Network); (5) tiefes Lernen für Bilder (Faltungs-Neuronale Netze); (6) tiefes/ verstärkendes Lernen; (7) Markov-Prozesse (Gaußsche Prozesse und Bayes'sche Optimierung, grafische Modelle und Bayes'sche Netze, Kalman- und Partikelfilter); (8) Online-Lernen und Spieltheorie; (9) unüberwachtes Repräsentationslernen und generative Methoden (allgemeine gegnerische Netzwerke, Variational Autoencoder); (10) Datenerweiterung und Transferlernen. Die genannten Themen sind an den aktuellen Forschungsstand angepasst und wechseln sich jährlich ab. Das Seminar gibt einen Einblick in die Welt des tiefen Lernens und befähigt den Studierenden eine wissenschaftliche Präsentation und Ausarbeitung anzufertigen, um individuell erworbenes Wissen einem Fachpublikum vermitteln zu können.
Learning objectives and skills: Die Teilnahme an diesem Seminar ermöglicht den Studierenden sich in der Kompetenz tiefes Lernen auszubilden und erlerntes Wissen in Form einer angeleiteten Präsentation und Ausarbeitung wissenschaftlich darzustellen und zu kommunizieren: Die Studierenden erlangen oder erweitern durch das Seminar die Kompetenz und das Wissen: •prinzipielle Vorgehensweisen beim tiefen Lernen zu erläutern, •Vor- und Nachteile einzelner Methoden zu untersuchen, •Chancen und Grenzen des tiefen Lernens zu erläutern, •Sachverhalte unter Fachleuten zu diskutieren, 

Prerequisites: None
Module compatibility: Seminar im Masterstudium Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Seminar achievement
Grading procedure: Seminar achievement (100%)
Workload in clock hours: Contact hours: 30 h Independent study: 120 h
Module duration: 1 semester
Teaching and examination language: english
Bibliography: •G. Goodfellow und Y. Bengio und A. C. Courville: Deep Learning, mitp-Verlag, 2015 •R. S. Sutton und A. G. Barto: Reinforcement Learning: An Introduction, MIT Press, 1998 •F. V. Jensen: An Introduction To Bayesian Networks, Springer, 1996 •R. Rojas: Theorie der neuronalen Netze - eine systematische Einführung, Springer, 1993 


, Module name 304439: Nailing your Thesis (VUE 5-ECTS) Nailing your thesis (VUE 5-ECTS)5 ECTS
Course / lectures: Übung : Nailing your Thesis (UE) (2 SWS ) 2,5 ECTS Vorlesung: Nailing your Thesis (VL) (2 SWS ) 2,5 ECTS
Lecturers: Prof. Dr. Dirk Riehle  
Module coordinator: Prof. Dr. Dirk Riehle
Contents: This course teaches students how to perform scientific research for their final thesis or a research paper. The goal is to prepare students for a Bachelor or Master research thesis. The course covers the following topics: •Science and society •The research process •Theory building research •Theory validation research •Writing a research thesis/paper •The scientific community Students can choose one or both of two components: •VUE (VL + UE or seminar), 4 SWS, 5 ECTS. VUE combines lectures with homework and exercises. VUE is run as a 3h block. •PROJ (small research project), 2 SWS, 5 ECTS. In PROJ, students perform a small research project, either individually or in teams. The available projects will be presented at the beginning of the course. Students perform the research, write a paper, and hold a presentation about their work. Sign-up and further course information are available at https:// nyt.uni1.de - please sign up for the course on StudOn (available through previous link) as soon as possible. The course information will also tell you how the course will be held (online or in person).
Learning objectives and skills: •Students gain an understanding of how science works •Students learn how to perform research work •Students learn how to write a research thesis
Prerequisites: None
Module compatibility: Seminar im Masterstudium Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Seminar achievement
Grading procedure: Seminar achievement (100%)
Module frequency: only in summer semester 13Workload in clock hoursContact hours: 60 h Independent study: 90 h 14 Module duration 1 semester 
Workload in clock hours: Contact hours: 60 h Independent study: 90 h
Module duration: 1 semester 

Teaching and examination language: english
Bibliography: See https://nyt.uni1.de 

, Module name 941318: Neuartige Rechnerarchitekturen 5 ECTS
Course / lectures: Hauptseminar : Neuartige Rechnerarchitekturen (4 SWS )5 ECTS
Lecturers: Simon Pfenning Philipp Holzinger Prof. Dr.-Ing. Dietmar Fey  
Module coordinator: Prof. Dr.-Ing. Dietmar Fey
Learning objectives and skills: Fachkompetenz Wissen Lernende können Wissen über die Grundprinzipien moderner Rechnerarchitekturen (Intel, ARM CPUs; AMD, Nvidia GPUs; FPGAs, Beschleunigerkerne) wiedergeben. Verstehen Lernende verstehen die Grundprinzipien der Datenverarbeitung der einzelnen Architekturen; im speziell verstehen sie ob und warum eine vorgegebene Architektur besonders gut für die Lösung eines Problems geeignet ist. Lernende verstehen die unterschiedlichen Ansätze zur Parallelismus der vorgestellten Architekturen. 

Prerequisites: None
Module compatibility: Seminar im Masterstudium Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Seminar achievement
Grading procedure: Seminar achievement (100%)
Module frequency: only in summer semester 13Workload in clock hoursContact hours: 60 h Independent study: 90 h 14 Module duration 1 semester 15Teaching and examination languagegerman 16 Bibliography no Bibliography information available! 
Workload in clock hours: Contact hours: 60 h Independent study: 90 h
Module duration: 1 semester
Teaching and examination language: german
Bibliography: no Bibliography information available! 

, Module name 47642: Seminar Advanced Deep Learning no english module name available for this module5 ECTS
Course / lectures: Seminar : Seminar Advanced Deep Learning (2 SWS ) 5 ECTS
Lecturers: Dr.-Ing. Vincent Christlein Prof.Dr.Ing. Katharina Breininger  
Module coordinator: Prof.Dr.Ing. Katharina Breininger
Contents: no content description available!
Learning objectives and skills: no learning objectives and skills description available!
Prerequisites: None
Integration in curriculum: semester: 3
Module compatibility: Seminar im Masterstudium Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Seminar achievement
Grading procedure: Seminar achievement (100%)
Workload in clock hours: Contact hours: ?? h (keine Angaben zum Arbeitsaufwand in Präsenzzeit hinterlegt) Independent study: ?? h (keine Angaben zum Arbeitsaufwand im Eigenstudium hinterlegt)
Module duration: ?? semester (no information for Module duration available)
Teaching and examination language: german
Bibliography: no Bibliography information available! 

, Module name 93186: Seminar Applied Software Engineering no english module name available for this module5 ECTS
Course / lectures: Seminar : Seminar Applied Software Engineering (0 SWS )5 ECTS Hauptseminar : Applied Software Engineering Master- Seminar ( SWS )-
Lecturers: Prof. Dr. Dirk Riehle  
Module coordinator: Prof. Dr. Dirk Riehle
Contents: This module lets students fulfill their degree program's seminar obligation by fulfilling a seminar topic in software engineering and/or open source. We prefer that you use one of our existing courses for your seminar obligation, but are willing to have you for a one-off topic if none of our courses fit. Seminar topics should be in the domain of (applied) software engineering and may or may not include open source software as a topic. You can find current seminar / project / thesis topics at https:// oss.cs.fau.de/fun ; all topics are customizable to your needs (ECTS points). If you find something that interests you, please talk to the respective person listed in the topic description (bottom of document, usually).
Learning objectives and skills: •Students learn to analyze and summarize a software engineering topic and to present it in class
Prerequisites: None
Module compatibility: Seminar im Masterstudium Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Seminar achievement
Grading procedure: Seminar achievement (100%)
Module frequency: every semester 13Workload in clock hoursContact hours: 0 h Independent study: 150 h 14 Module duration 1 semester 15Teaching and examination languagegerman 16 Bibliography no Bibliography information available! 
Workload in clock hours: Contact hours: 0 h Independent study: 150 h
Module duration: 1 semester
Teaching and examination language: german
Bibliography: no Bibliography information available! 

, Module name 93154: Seminar Computer Vision no english module name available for this module5 ECTS
Module coordinator: 5
Contents: no content description available!
Learning objectives and skills: no learning objectives and skills description available!
Prerequisites: None
Module compatibility: Seminar im Masterstudium Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Seminar achievement
Grading procedure: Seminar achievement (100%)
Workload in clock hours: Contact hours: ?? h (keine Angaben zum Arbeitsaufwand in Präsenzzeit hinterlegt) Independent study: ?? h (keine Angaben zum Arbeitsaufwand im Eigenstudium hinterlegt)
Module duration: ?? semester (no information for Module duration available)
Teaching and examination language: german
Bibliography: no Bibliography information available! 

, Module name 47658: Seminar: Digital Pathology and Deep Learning no english module name available for this module5 ECTS
Course / lectures: Seminar : Seminar Digital Pathology and Deep Learning (2 SWS )5 ECTS
Lecturers: Prof. Dr. Samir Jabari Prof.Dr.Ing. Katharina Breininger  
Module coordinator: Prof.Dr.Ing. Katharina Breininger
Contents: Pathology is the study of diseases and aims to deliver a fine-grained diagnosis to understand processes in the body as well as to enable targeted treatment. In this area, the opportunities for digital image processing are vast: While the need for precision medicine, i.e., taking into account various co-dependencies when formulating the best possible treatment for a patient, is high, the number of pathologists ist not increasing accordingly. Deep learning-based techniques can be used for different objectives in this scope. Examples include screening large microscopy images for specific rare events, providing visual augmentation with analysis data. Additionally, the availability of massive data collections, including genomics and further biological factors, can be utilized to determine specific information about diseases that were previously unavailable. This seminar is offered to students of medicine as well as computer sciences and medical engineering and similar. Students will have to present a topic from this field in a short (30 min) and comprehensive presentation. List of topics: •Staining and special stains (including immunohistochemistry, enzyme-based dyes and tissue microarrays) •Current computational pathology •Knowledge/Feature fusion into a diagnosis •Histopathology quality control •Data sets as limiting factor - limits of current data sets •Large scale / clinical grade solutions •Computational and augmented tumor grading •In vivo microstructural analysis •Big data in pathology (multi-omics) •Histology image registration •Staining differences and stain normalization •Transfer learning and domain adaptation •Explainable AI •Virtual staining •Digital workflow in Germany vs. the world •Limits of digital pathology
Learning objectives and skills: Students will be able to •perform their own literature research on a given subject •independently research this subject •present and introduce the subject to their student peers 

Module compatibility: Seminar im Masterstudium Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Seminar achievement (30 minutes)
Grading procedure: Seminar achievement (100%)
Module frequency: Unregelmäßig 13Workload in clock hoursContact hours: 30 h Independent study: 120 h 14 Module duration 1 semester 15Teaching and examination languageenglish 16 Bibliography no Bibliography information available! 
Workload in clock hours: Contact hours: 30 h Independent study: 120 h
Module duration: 1 semester
Teaching and examination language: english
Bibliography: no Bibliography information available! 

, Module name 495310: Seminar Effiziente numerische Simulation auf Multicore-Prozessoren no english module name available for this module5 ECTS
Course / lectures: Seminar : Effiziente numerische Simulation auf multicore-Prozessoren (2 SWS )5 ECTS
Lecturers: Dr. Jan Eitzinger Prof. Dr. Gerhard Wellein  
Module coordinator: Prof. Dr. Gerhard Wellein
Contents: •Architektur und Kennzahlen moderner multi-/manycore/ GPGPU Prozessoren •Architektur von hoch parallelen Supercomputern •Parallelisierung und Optimierung von Kernelroutinen •Serielle und parallele Perfomancemodellierung •Kernelroutinen aus den verschiedensten numerischen Anwendungen von der Medizintechnik bis zur Quatenphysik
Learning objectives and skills: Die Studierenden •erwerben einen tiefer gehenden Einblick in die parallele und effiziente Programmierung moderner Prozessoren / GPGPUs •verwenden moderne Optimierungs- und Parallelisierungsstrategien inklusiver begleitender, zielgerichteter Performancemodellierung •erhalten einen Einblick in neuartige Programmiertechniken und alternativen Supercomputerarchitekturen •sind in der Lage einfache numerische Methoden auf gängigen Parallelrechnern effizient zu implementieren
Module compatibility: Seminar im Masterstudium Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Seminar achievement
Grading procedure: Seminar achievement (100%)
Workload in clock hours: Contact hours: 30 h Independent study: 120 h
Module duration: 1 semester
Teaching and examination language: german
Bibliography: •G. Hager and G. Wellein: Introduction to High Performance Computing for Scientists and Engineers. CRC Computational Science Series, 2010. ISBN 978-1439811924 •J. Hennessy and D. Patterson: Computer Architecture. A Quantitative Approach. Morgan Kaufmann Publishers, Elsevier, 2003. ISBN 1-55860-724-2 

, Module name 93656: Seminar Energieinformatik no english module name available for this module5 ECTS
Course / lectures: Seminar : Seminar Energieinformatik (2 SWS ) 5 ECTS
Lecturers: Marco Pruckner  
Module coordinator: Marco Pruckner
Contents: Teilnehmende arbeiten sich selbständig anhand der ausgewählten wissenschaftlichen Literatur in ein vorgeschlagenes Thema aus dem Bereich der Energieinformatik ein, erstellen dazu eine schriftliche Ausarbeitung, bereiten einen Seminarvortrag vor und präsentieren ihn vor Lehrenden, interessierten wissenschaftlichen Mitarbeitern des Instituts und Kommilitonen der Lehrveranstaltung.
Learning objectives and skills: Zu den zu erwerbenden Kompetenzen zählen •die Literaturrecherche, •korrektes Zitieren, •die Fähigkeit auszuwählen, welche Aspekte in der Ausarbeitung und im Vortrag behandelt werden, •zielgruppengerechtes Schreiben, •die Verwendung von Textverarbeitungswerkzeugen für die Präsentation und die Ausarbeitung, •sicheres Auftreten beim Vortragen eines wissenschaftlichen Themas sowie •fachspezifische Fragen zum ausgewählten Themengebiet zu beantworten. Am Ende jeder Lehreinheit •stellen die Teilnehmenden gezielt Fragen zum vorgetragenen Thema, •diskutieren über fachliche Aspekte der Präsentation, •üben konstruktive Kritik an der Darstellung des Themas und •bewerten die Präsentation aus vortragstechnischer Sicht.
Prerequisites: None
Module compatibility: Seminar im Masterstudium Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Seminar achievement
Grading procedure: Seminar achievement (100%)
Workload in clock hours: Contact hours: 30 h Independent study: 120 h
Module duration: 1 semester
Teaching and examination language: german
Bibliography: •gesammelte Bücher, Artikel und Weblinks zu einem einschlägigen Themengebiet 


, Module name 47607: Seminar Intraoperative Imaging and Machine Learning no english module name available for this module5 ECTS
Module coordinator: Prof.Dr.Ing. Katharina Breininger
Contents: For many applications, techniques like deep learning allow for considerably faster algorithm development and allow to automate tasks that were performed manually in the past. In medical imaging, a large variety of time-consuming tasks that interfere with clinical workflows has the potential for automation. However, at the same time new challenges arise like data privacy regulations and ethics concerns. In this seminar, we want to develop an application that allows for the automation of an X-ray based intraoperative planning or measurement procedure from a holistic perspective. To this end, we will invite a surgeon to explain the medical background and visit the operating room to understand the surgeons needs while performing the task. Having understood the underlying medical problem, we will look into topics of data privacy, code of ethics, prototype development, and UI design for surgeons. Furthermore, we will touch regulatory requirements necessary for releasing software to clinics. At the end of the seminar, the students will have developed and documented a prototypical application for the indented intraoperative use case.
Learning objectives and skills: Students will be able to •visit an operation room, following the rules of such an environment •perform their own literature research on a given subject •independently research this subject according to data privacy and ethical standard •present and introduce the subject to their student peers •give a scientific talk in English according to international conference standards •describe their results in a scientific report
Module compatibility: Seminar im Masterstudium Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Seminar achievement
Grading procedure: Seminar achievement (100%)
Module frequency: only in winter semester 13Workload in clock hoursContact hours: 30 h 
Workload in clock hours: Contact hours: 30 h 

Module duration: 1 semester
Teaching and examination language: english
Bibliography: no Bibliography information available! 

, Module name 47608: Seminar Maschinelles Lernen und Datenanalytik für Industrie 4.0 no english module name available for this module5 ECTS
Module coordinator: Prof. Dr. Björn Eskofier
Contents: no content description available!
Learning objectives and skills: no learning objectives and skills description available!
Prerequisites: None
Module compatibility: Seminar im Masterstudium Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Seminar achievement
Grading procedure: Seminar achievement (100%)
Workload in clock hours: Contact hours: ?? h (keine Angaben zum Arbeitsaufwand in Präsenzzeit hinterlegt) Independent study: ?? h (keine Angaben zum Arbeitsaufwand im Eigenstudium hinterlegt)
Module duration: ?? semester (no information for Module duration available)
Teaching and examination language: german
Bibliography: no Bibliography information available! 

, Module name 47675: Seminar Meta Learning no english module name available for this module5 ECTS
Module coordinator: 5
Contents: no content description available!
Learning objectives and skills: no learning objectives and skills description available!
Prerequisites: None
Module compatibility: Seminar im Masterstudium Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Seminar achievement
Grading procedure: Seminar achievement (100%)
Workload in clock hours: Contact hours: ?? h (keine Angaben zum Arbeitsaufwand in Präsenzzeit hinterlegt) Independent study: ?? h (keine Angaben zum Arbeitsaufwand im Eigenstudium hinterlegt)
Module duration: ?? semester (no information for Module duration available)
Teaching and examination language: german
Bibliography: no Bibliography information available! 

, Module name 588895: Seminar Multi-Core Architecture and Programming Seminar multi-core architecture and programming5 ECTS
Course / lectures: Seminar : Multi-Core Architecture and Programming (2 SWS )5 ECTS
Lecturers: Stefan Groth Muhammad Sabih PD Dr.Ing. Frank Hannig  
Module coordinator: PD Dr.Ing. Frank Hannig
Contents: Prozessoren mit mehreren Kernen sind heute bereits sehr weit verbreitet. Vertreter solcher Architekturen sind beispielsweise moderne Grafikprozessoren, die aus bis zu 4608 so genannter Stream Processors und 576 Tensor-Recheneinheiten bestehen können. Mehrkernprozessoren besitzen eine sehr hohe theoretische Rechenleistung und eröffnen dadurch faszinierende neue Möglichkeiten in naturwissenschaftlichen und anderen berechnungsintensiven Bereichen, wie etwa Multimediaanwendungen, Medizintechnik oder Finanzwirtschaft. Damit die Leistungsfähigkeit voll ausgeschöpft werden kann, muss jedoch eine effiziente Abbildung von Algorithmen auf die Architektur des jeweiligen Mehrkernprozessors gefunden werden. Gegenüber traditionellen Einkernprozessoren ist dabei oftmals ein radikales Umdenken bei der Programmierung erforderlich. Ziel des Seminars ist es, Einblicke in modernste Mehrkernarchitekturen, z.B. KI-Beschleuniger, und deren Programmierparadigmen zu vermitteln. Um praktische Entwicklungserfahrung zu sammeln, werden u.A. NVIDIA TITAN RTX, Intel Neural Compute Sticks und Tegra AGX Systeme angeboten. Für die Projektarbeit im Team stehen neueste Softwareentwicklungswerkzeuge (TensorRT, OpenVINO, C++ 20, SYCL, CUDA, OpenCL, OpenMP + MPI) zur Verfügung.
Learning objectives and skills: Fachkompetenz •Verstehen: Die Studierenden tragen grundlegende Inhalte auf dem Gebiet modernster Multi-/Many-Core Architectures und deren Programmierung vor. •Analysieren: Die Studierenden erproben Programmierparadigmen für Mehrkernarchitekturen. •Erschaffen: Die Studierenden planen, entwickeln und evaluieren eigenständig parallele Anwendungen. Lern- bzw. Methodenkompetenz •Die Studierenden arbeiten sich selbstständig in ein bis zwei wissenschaftliche Veröffentlichungen ein und suchen hierbei selbstständig nach verwandten Arbeiten, um den Kontext der Veröffentlichung zu verstehen und aufzubereiten. Selbstkompetenz •Die Studierenden können eigene Stärken und Schwächen, sowohl im Bereich ihrer Präsentationstechniken als auch der Team-Arbeit, reflektieren und die eigene Entwicklung planen. Sozialkompetenz 

Prerequisites: None
Module compatibility: Seminar im Masterstudium Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Seminar achievement
Grading procedure: Seminar achievement (100%)
Module frequency: only in summer semester 13Workload in clock hoursContact hours: 30 h Independent study: 120 h 14 Module duration 1 semester 15Teaching and examination language 16 Bibliography no Bibliography information available! 
Workload in clock hours: Contact hours: 30 h Independent study: 120 h
Module duration: 1 semester
Teaching and examination language: 1
Bibliography: no Bibliography information available! 

, Module name 96970: Seminar Visual Computing no english module name available for this module5 ECTS
Course / lectures: Masterseminar : Seminar Visual Computing (2 SWS ) 5 ECTS
Lecturers: Prof. Dr.-Ing. Tobias Günther Prof. Dr. Tim Weyrich  
Module coordinator: Prof. Dr.-Ing. Tobias Günther Prof. Dr. Tim Weyrich
Contents: This seminar covers advanced topics in visual computing, including both seminal research papers, as well as the latest research results. The seminar provides an opportunity to obtain a comprehensive overview of research questions in visual computing, as well as allows students to dive deeper into a chosen topic. Each student presents one scientific publication and explains its content to fellow students taking the course. Thereby, students practice their argumentation and presentation skills. For each paper, a supervisor is provided, who answers questions and gives pointers on the presentation slide design. The seminar is concluded with a short written report. The main topics include: •human performance capture (faces, eyes, speech), •animation (motion controllers, speech synthesis, shape modelling) •fabrication (caustic design, robot design), •appearance modelling (subsurface scattering), •Monte Carlo rendering (importance sampling, participating media), •differentiable rendering (neural rendering, inverse rendering), •denoising (non-local means and deep learning), •physics simulation (fluid simulation) The seminar contains the paper presentations by the students and introductory lectures on scientific dissemination. Grading Each student presents a paper, which is a selected from a set of papers in the first session. The presentation duration is 30 minutes with an additional 10 minutes for questions. Presentations begin approximately 3-4 weeks after the start of the semester. The presentation contributes to 70% of the final grade. A written report with a duration of 5-10 pages constitutes the remaining 30%, for which a LaTeX template is provided. The presentation time slots are grouped by topic and cannot be chosen. An important aspect of the grading is the subsequent discussion. To spur discussions, students are encouraged to write a brief abstract about each paper, which can be uploaded on StudOn before the presentation. The voluntary abstracts are graded and if more than 80% of the available points are reached the final grade is improved by 0.3 or 0.4 grade points, respectively.
Learning objectives and skills: Students learn to: •present current research topics in visual computing •perform a thorough literature review 

Prerequisites: None
Module compatibility: Seminar im Masterstudium Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Seminar achievement Written report (approx 7 pages, 25%) and presentation (30 minutes, 75%)
Grading procedure: Seminar achievement (100%)
Module frequency: only in winter semester 13Workload in clock hoursContact hours: 30 h Independent study: 120 h 14 Module duration 1 semester 15Teaching and examination languagegerman 16 Bibliography no Bibliography information available! 
Workload in clock hours: Contact hours: 30 h Independent study: 120 h
Module duration: 1 semester
Teaching and examination language: german
Bibliography: no Bibliography information available! 

, Module name 349413: Seminar Sprachtechnologie für Sprachpathologien Speech technologies for speech pathologies5 ECTS
Course / lectures: Seminar : Seminar Automatic Analysis of Voice, Speech and Language Disorders in Speech Pathologies (4 SWS )5 ECTS
Lecturers: Prof. Dr.-Ing. Andreas Maier Prof. Seung Hee Yang  
Module coordinator: Prof. Seung Hee Yang
Contents: This seminar deals with how the diagnosis and therapy of different speech pathologies can be supported by speech technology. The participants should present selected speech, speech and voice disorders in a lecture and demonstrate corresponding technologies in the field of pattern recognition and speech processing.
Learning objectives and skills: Die Studierenden •erlernen die Literaturrecherche. •arbeiten sich selbstständig anhand der gefundenen Literatur in die Thematik der automatischen Analyse von Sprach-, Sprech- und Stimmstörungen ein. •wählen einen Schwerpunkt und bereiten diesen im Rahmen einer Präsentation so auf, dass er für andere Teilnehmer des Seminars verständlich ist. •lernen die Anforderungen an einen wissenschaftlichen Vortrag auf einer internationalen Konferenz kennen. •halten einen Vortrag in der international üblichen Fachsprache Englisch (davon ausgenommen sind Studierende aus dem Ausland, die in Deutschland studieren, um Deutsch zu lernen)
Prerequisites: None
Module compatibility: Seminar im Masterstudium Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Seminar achievement
Grading procedure: Seminar achievement (100%)
Module frequency: Unregelmäßig 13Workload in clock hoursContact hours: 30 h Independent study: 120 h 14 Module duration 1 semester 15Teaching and examination languageenglish 16 Bibliography no Bibliography information available! 
Workload in clock hours: Contact hours: 30 h Independent study: 120 h
Module duration: 1 semester
Teaching and examination language: english
Bibliography: no Bibliography information available! 

, Module name 834345: Systems- and Networks-on-a-Chip für INF Systems- and networks-on-a-chip for computer scientists5 ECTS
Course / lectures: Seminar : Systems- and Networks-on-a-Chip (2 SWS ) 5 ECTS
Lecturers: Dr.-Ing. Stefan Wildermann  
Module coordinator: Joachim Falk Dr.-Ing. Stefan Wildermann
Contents: Eingebettete Systeme spielen im alltäglichen Leben eine immer größere Rolle. Gleichzeitig nimmt die Komplexität dieser Systeme immer weiter zu. Durch die heutige Technologie ist es möglich, Millionen, in naher Zukunft Milliarden von Transistoren auf einem Chip zu platzieren. Dies führt dazu, dass häufig das komplette eingebettete System, ein sogenanntes System-on-a-Chip (SoC), auf einem einzigen Chip realisiert werden kann. Die Vorteile einer verbesserten Performanz, niedrigerem Energieverbrauch sowie sinkenden Kosten sind dabei unter anderem durch die Wiederverwendung bestehender Komponenten bedingt. Eine der Herausforderungen bestehender SoCs besteht darin, eine korrekte und zuverlässige Kommunikation zwischen den Komponenten herzustellen. Aus diesem Grund wird den Komponenten eine netzwerkartige Kommunikation zur Verfügung gestellt, wodurch sogenannte Networks-on-a-Chip (NoCs) entstehen. Dieses Seminar beschäftigt sich mit der Problematik von Design, Synthese und Analyse bestehender und zukünftiger Systems- und Networks-on-a-Chip. Hierbei soll vor allem die Vereinbarkeit verschiedener Anforderungen an das System wie Kosten, Platz- und Energieverbrauch oder Zuverlässigkeit in den verschiedenen Phasen der Entwicklung betrachtet werden.
Learning objectives and skills: Fachkompetenz - Verstehen •Die Studierenden tragen die wesentlichen Inhalte einer ausgewählten wissenschaftlichen Veröffentlichung auf dem Gebiet der MPSoCs vor. •Die Studierenden veranschaulichen den grundlegenden Kontext der Veröffentlichung sowie deren wesentliche Neuerungen. •Die Studierenden bereiten den Inhalt der ausgewählten wissenschaftlichen Veröffentlichung sowie benötigte Grundlagen in einer Ausarbeitung auf. Lern- bzw. Methodenkompetenz •Die Studierenden arbeiten sich selbstständig in eine wissenschaftliche Veröffentlichung ein und suchen hierbei selbstständig nach verwandten Arbeiten, um den Kontext der Veröffentlichung zu verstehen und aufzubereiten. Sozialkompetenz •Die Studierenden beteiligen sich aktiv an den Vorträgen der jeweils anderen Studierenden durch fachbezogene Fragen zum Thema wie auch Rückmeldung zu Vortragsstil.
Prerequisites: None 

Module compatibility: Seminar im Masterstudium Master of Science Computational Engineering (Rechnergestütztes Ingenieurwesen) 2013
Method of examination: Seminar achievement
Module frequency: only in winter semester 13Workload in clock hoursContact hours: 30 h Independent study: 120 h 14 Module duration 1 semester 15Teaching and examination languageenglish 16 Bibliography no Bibliography information available! 
Workload in clock hours: Contact hours: 30 h Independent study: 120 h
Module duration: 1 semester
Teaching and examination language: english
Bibliography: no Bibliography information available!
